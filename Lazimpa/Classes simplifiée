<?xml version="1.0" encoding="UTF-8"?>
<XMI xmi.version="1.2" timestamp="2022-04-01T17:30:08" verified="false" xmlns:UML="http://schema.omg.org/spec/UML/1.4">
 <XMI.header>
  <XMI.documentation>
   <XMI.exporter>umbrello uml modeller 2.32.3 http://umbrello.kde.org</XMI.exporter>
   <XMI.exporterVersion>1.7.3</XMI.exporterVersion>
   <XMI.exporterEncoding>UnicodeUTF8</XMI.exporterEncoding>
  </XMI.documentation>
  <XMI.metamodel xmi.name="UML" xmi.version="1.4" href="UML.xml"/>
 </XMI.header>
 <XMI.content>
  <UML:Model xmi.id="m1" name="ModÃ¨le UML" isSpecification="false" isAbstract="false" isRoot="false" isLeaf="false">
   <UML:Namespace.ownedElement>
    <UML:Stereotype isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="folder" name="folder" namespace="m1" visibility="public"/>
    <UML:Stereotype isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="constructor" name="constructor" namespace="m1" visibility="public"/>
    <UML:Stereotype isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="class-or-package" name="class-or-package" namespace="m1" visibility="public"/>
    <UML:Model isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="Logical_View" name="Logical View" namespace="m1" visibility="public">
     <UML:Namespace.ownedElement>
      <UML:Package isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="Datatypes" name="Datatypes" namespace="Logical_View" visibility="public" stereotype="folder">
       <UML:Namespace.ownedElement>
        <UML:DataType isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uenFS4WYhQUaR" name="int" namespace="Datatypes" visibility="public"/>
        <UML:DataType isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uOrEMm7GOKYd6" name="char" namespace="Datatypes" visibility="public" isActive="false"/>
        <UML:DataType isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uTyR2E3jpKXdw" name="boolean" namespace="Datatypes" visibility="public" isActive="false"/>
        <UML:DataType isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uvBhCm6WK8jRM" name="float" namespace="Datatypes" visibility="public"/>
        <UML:DataType isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="ullUOAlyLmdbF" name="double" namespace="Datatypes" visibility="public" isActive="false"/>
        <UML:DataType isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uQ9ipZBJfrgS9" name="byte" namespace="Datatypes" visibility="public" isActive="false"/>
        <UML:DataType isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uIMmzF4UbXQPH" name="short" namespace="Datatypes" visibility="public" isActive="false"/>
        <UML:DataType isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uyrabyMMSVgI3" name="long" namespace="Datatypes" visibility="public"/>
        <UML:DataType isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uwuejxkSFuTg6" name="String" namespace="Datatypes" visibility="public" isActive="false"/>
        <UML:DataType isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uUmx1ngnHZLxS" name="Integer" namespace="Datatypes" visibility="public" isActive="false"/>
        <UML:DataType isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uhh5a6pmA3Rvr" name="Character" namespace="Datatypes" visibility="public" isActive="false"/>
        <UML:DataType isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uXfJsaqAbZ0G0" name="Boolean" namespace="Datatypes" visibility="public" isActive="false"/>
        <UML:DataType isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uI0wSOGrQLjAT" name="Float" namespace="Datatypes" visibility="public" isActive="false"/>
        <UML:DataType isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uQmuz3DOWGrFF" name="Double" namespace="Datatypes" visibility="public" isActive="false"/>
        <UML:DataType isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="ufrvQcD9QfZSF" name="Byte" namespace="Datatypes" visibility="public" isActive="false"/>
        <UML:DataType isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uTWWnGlwDb6Fg" name="Short" namespace="Datatypes" visibility="public" isActive="false"/>
        <UML:DataType isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="ubpnvlKqG8VED" name="Long" namespace="Datatypes" visibility="public" isActive="false"/>
        <UML:DataType isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="usl2ocM6kaVuo" name="StringBuffer" namespace="Datatypes" visibility="public" isActive="false"/>
        <UML:DataType isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="ujGAmqxiaKm3N" name="StringBuilder" namespace="Datatypes" visibility="public" isActive="false"/>
        <UML:DataType isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uMiFBHEnjTBta" name="array" namespace="Datatypes" visibility="public"/>
        <UML:DataType isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uR4u51QglJUwu" name="bool" namespace="Datatypes" visibility="public"/>
        <UML:DataType isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uyHXjUDO2o3qa" name="tuple" namespace="Datatypes" visibility="public"/>
        <UML:DataType isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uskCRuNINri1y" name="list" namespace="Datatypes" visibility="public"/>
        <UML:DataType isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="u9ApBEDyvrqN5" name="dict" namespace="Datatypes" visibility="public"/>
        <UML:DataType isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="u27FcBrsL7fnn" name="object" namespace="Datatypes" visibility="public"/>
        <UML:DataType isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="u5MLJlIRa0eqS" name="set" namespace="Datatypes" visibility="public"/>
        <UML:DataType isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uUffSdhSc9MEm" name="string" namespace="Datatypes" visibility="public"/>
       </UML:Namespace.ownedElement>
      </UML:Package>
      <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="u1xe170GOaaMh" name="Callback" namespace="Logical_View" visibility="public">
       <UML:Classifier.feature>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uzSQyNX7gz6rF" name="on_train_begin" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uSGoIDT8xE9wC" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="u0nxwVmtEpHhw" name="trainer_instance" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="ujQhoeKa1hMGR" name=":" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="ucdLyA2ZYmcHL" name="'Trainer'" visibility="private" type="uUffSdhSc9MEm" value=""/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="ueAKH8pi2Ldy8" name="on_train_end" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uQOHkEqAFG3uv" type="uUffSdhSc9MEm" kind="return"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="umjLMCpDj9ke0" name="on_test_begin" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uiFgQ9gPWelGL" type="uUffSdhSc9MEm" kind="return"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="u3yaEXWL0GwGz" name="on_test_end" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="u7bhgnMMl9u5F" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="u079HqGWXTpd5" name="loss" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="ucYfQDzsVwl7i" name=":" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uaqdCeNEGlUje" name="float" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u01rbLkjc4ikP" name="logs" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uoWHXr4szcfm8" name=":" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uFUtTSCcH9m2R" name="Dict" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="up8bmHexh7NIh" name="[" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uK7HJqvTkOopL" name="str" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uHHFBFVPhF2ro" name="Any" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uVX3vASfouLEc" name="]" visibility="private" type="u27FcBrsL7fnn" value="None"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uyRXEzrs1A9YC" name="on_epoch_begin" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="u64yD4RWx0y0M" type="uUffSdhSc9MEm" kind="return"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uWMG7ijmndt21" name="on_epoch_end" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="u4A94LvgBOIsy" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uHxDPUT9TguyE" name="loss" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="ux1cXO27tixTa" name=":" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u8sp4D7PDjfvH" name="float" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uas4uMhwsUCfi" name="logs" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u31ZAPAU7IWjF" name=":" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u06uV4fsNpmF9" name="Dict" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="ufCBFeSoetYZI" name="[" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u3QJho66bSU2H" name="str" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="udoN98jOnmGzL" name="Any" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uaT8nTllOLJK7" name="]" visibility="private" type="u27FcBrsL7fnn" value="None"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uyIsIfK4a5IPE" name="ConsoleLogger" namespace="Logical_View" visibility="public">
       <UML:Classifier.feature>
        <UML:Attribute isSpecification="false" xmi.id="uBFo52l4xI4Do" name="print_train_loss" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="ukhvopWkOyp9L" name="as_json" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uVLUvrGEJYPJ4" name="epoch_counter" visibility="public" type="uenFS4WYhQUaR" initialValue="0"/>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uLWcqLtWbB0HU" name="__init__" visibility="public" stereotype="constructor" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uBT5WvSbCPBmo" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uv1HxhAB9nkNn" name="print_train_loss" visibility="private" type="uR4u51QglJUwu" value="False"/>
          <UML:Parameter isSpecification="false" xmi.id="usYchZ6xEkYlA" name="as_json" visibility="private" type="uR4u51QglJUwu" value="False"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uRvEOqcRDVdfg" name="on_test_end" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uOkiAhKJvaaQa" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="ubWvq47vdkRan" name="loss" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uAcqUdrxbqW3C" name=":" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uZXumCgYQjmvY" name="float" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u5bbnP1nLPv2p" name="logs" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u5nVe6hHVMJ2y" name=":" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="usDAcpdiqAdD2" name="Dict" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u4D4UmHotXQV5" name="[" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="ujTPiaPZNA0Lq" name="str" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u9G3fL3DeVjtW" name="Any" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uLtbc4EDdwhlO" name="]" visibility="private" type="u27FcBrsL7fnn" value="None"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uojTvBLcgi6jm" name="on_epoch_end" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uFmKHWdo6LHS7" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uMCEXKqWAwyju" name="loss" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uF26LJe9UmGAh" name=":" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="urt3iwKdrmFkb" name="float" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uIWqNaPdzmmyV" name="logs" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uTc8ZLhxrVAjU" name=":" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="ulA2gHd15KCxY" name="Dict" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="um3cpUZ7K0bR8" name="[" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uH5tpzcYTkjKz" name="str" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="umhLKtuUTIrRD" name="Any" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="ugkBwdSpG4tQI" name="]" visibility="private" type="u27FcBrsL7fnn" value="None"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="ut9r1FzmOgz0u" name="get_metric" visibility="protected" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="u9ckmAUayZtno" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uIHKuHy8pXY2v" name="metric" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uExWqmSsO0gB6" name=":" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uTgY8zBQgLn1W" name="Union" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uLxg4R7c4pi4x" name="[" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uxgjb3rk0QtCA" name="torch.Tensor" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u41t9gJh4dHbI" name="float" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uTpdyXISW79Kq" name="]" visibility="private" type="uUffSdhSc9MEm" value=""/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="u6OViyPQvkDVI" name="TensorboardLogger" namespace="Logical_View" visibility="public">
       <UML:Classifier.feature>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uit7vmEaZBIB6" name="__init__" visibility="public" stereotype="constructor" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uMs0hFBnmz5c0" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uOH88hQQU3PO3" name="writer" visibility="private" type="u27FcBrsL7fnn" value="None"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uLdqg2mX2ALJh" name="on_test_end" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uTmmwgbb8mpHx" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uRcEHgYYOb9At" name="loss" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uzVN5uQ1a8t4S" name=":" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uzeNMCNwwjmmc" name="float" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u1KDM0II9gnUD" name="logs" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uXnl6PInJRGqz" name=":" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uSNCOv3F5BTGl" name="Dict" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uR6UzVgo6srzY" name="[" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="ukDMcoXRMds6h" name="str" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uXPShh8KWN6UI" name="Any" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="ufrkQ2cvG8ysj" name="]" visibility="private" type="u27FcBrsL7fnn" value="None"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="ue7euMpbRITNk" name="on_epoch_end" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uuBYPLoiv0wwO" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="u0KwFKjFSg43A" name="loss" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uySrCjgJBWZZv" name=":" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="ugXkZNjbGBhsu" name="float" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="usvuMFp1x5Zqh" name="logs" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uIePIATAWYZ2c" name=":" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="ues1WQ3YVVmNH" name="Dict" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uPsBmV4xD9wRZ" name="[" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uYnMObr1sLK97" name="str" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uqpTJfXOfVAl0" name="Any" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uiSTJM6lciaoN" name="]" visibility="private" type="u27FcBrsL7fnn" value="None"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="u6P7o7VQjuokz" name="on_train_end" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="umeHlFFSzAwMZ" type="uUffSdhSc9MEm" kind="return"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uVwx4FBJ2eClZ" name="TemperatureUpdater" namespace="Logical_View" visibility="public">
       <UML:Classifier.feature>
        <UML:Attribute isSpecification="false" xmi.id="uJFwz33VsHE41" name="agent" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uw5TcvlJAUiwm" name="minimum" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uKhljHtuoMhMn" name="update_frequency" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="u0lK0fP1KmxSz" name="epoch_counter" visibility="public" type="uenFS4WYhQUaR" initialValue="0"/>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="utua3ataGu0ei" name="__init__" visibility="public" stereotype="constructor" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uOuGydPPXmDTV" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uC5gNMKtC9sXA" name="agent" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="ubQZXsm5ItAY6" name="decay" visibility="private" type="uvBhCm6WK8jRM" value="0.9"/>
          <UML:Parameter isSpecification="false" xmi.id="uH0VTYj3RFgwR" name="minimum" visibility="private" type="uvBhCm6WK8jRM" value="0.1"/>
          <UML:Parameter isSpecification="false" xmi.id="uK8lvRgpHOpLw" name="update_frequency" visibility="private" type="uenFS4WYhQUaR" value="1"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="ue7jrjvXuBAd1" name="on_epoch_end" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="u7epCZ2j5rK6L" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uV4ijYRl6skHC" name="loss" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uUhgGWyc3tzrU" name=":" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="upANCavc6P3rl" name="float" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uK7QyFSpD2AXD" name="logs" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uSD9nAwPzZy0f" name=":" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u4g5x2NGDHTQ0" name="Dict" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="ug0wgsT4oS13Q" name="[" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uyqT4M7ZrTvm4" name="str" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uT3qhU3xGSVoe" name="Any" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u7LuOYOurALcj" name="]" visibility="private" type="u27FcBrsL7fnn" value="None"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uMl0cfRhAFWtl" name="Checkpoint" namespace="Logical_View" visibility="public"/>
      <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uWQfw6ePFMlTB" name="NamedTuple" namespace="Logical_View" visibility="public"/>
      <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="ujkpmbarKTBcG" name="CheckpointSaver" namespace="Logical_View" visibility="public">
       <UML:Classifier.feature>
        <UML:Attribute isSpecification="false" xmi.id="uf8P2yZyJNLi0" name="checkpoint_path" visibility="public" type="u46TEmFfRU9uz" initialValue="(checkpoint_path)"/>
        <UML:Attribute isSpecification="false" xmi.id="uLZpmVwxBEGlb" name="checkpoint_freq" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uQPb9iG4bhov4" name="prefix" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uDLEOIWHFqZM4" name="epoch_counter" visibility="public" type="uenFS4WYhQUaR" initialValue="0"/>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="u1nEGHXwKZQVZ" name="__init__" visibility="public" stereotype="constructor" ownerScope="classifier" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uXnswp3c3kuYP" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="unnnqXsfvgBT6" name=";" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uxjlnIAffCfVk" name="self" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uB2zoGEL2yn9t" name="checkpoint_path" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uNPCNO6AkgLmX" name=":" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="urrqQ9bNeGL7s" name="Union" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u7dPcCPSRGyCW" name="[" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u22ZMohqOxxL6" name="str" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u10gHQCn65DsN" name="pathlib.Path" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="ul58dmm3whHnd" name="]" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="ug17aZ5t0Ta3j" name="checkpoint_freq" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uVVsHAJwCUYiC" name=":" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u83neFMj5sRqM" name="int" visibility="private" type="uenFS4WYhQUaR" value="1"/>
          <UML:Parameter isSpecification="false" xmi.id="uRD413YULjoOX" name="prefix" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uBmHY6jhhysuE" name=":" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uP0wQQTqPqTKD" name="str" visibility="private" type="u27FcBrsL7fnn" value=""/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uj0PymOA5CuBi" name="on_epoch_end" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="urQkR8i6zIQvZ" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uBVKEAlVLFu11" name="loss" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uuR2gBBAp64po" name=":" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="umpH4snoMySKt" name="float" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u2NxJHTetJHXT" name="logs" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uia9x7gzYlxKh" name=":" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uZkOl75fyQ180" name="Dict" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uyl3V68dKs7z9" name="[" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="ulQ1vrkoTci6A" name="str" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uLpczApwqKMAs" name="Any" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uT6wSsvyEpsQy" name="]" visibility="private" type="u27FcBrsL7fnn" value="None"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uzNcGAbcngNBP" name="on_train_end" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uY4z3QXp6bGQe" type="uUffSdhSc9MEm" kind="return"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="unFplW7yfYSDw" name="save_checkpoint" comment="        Saves the game, agents, and optimizer states to the checkpointing path under `&lt;number_of_epochs&gt;.tar` name&#10;" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uhyQtuTE9ihUm" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uLhOCbhaeeqlB" name="filename" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uAEekw0ufczgz" name=":" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="ubVDLlKVoy86i" name="str" visibility="private" type="uUffSdhSc9MEm" value=""/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uBAfydLmTODGT" name="get_checkpoint" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="u7vF6BtI22JTj" type="uUffSdhSc9MEm" kind="return"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uQd6vh6nCIrfQ" name="pathlib" namespace="Logical_View" visibility="public" stereotype="class-or-package">
       <UML:Namespace.ownedElement>
        <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="u46TEmFfRU9uz" name="Path" namespace="uQd6vh6nCIrfQ" visibility="public"/>
       </UML:Namespace.ownedElement>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uK5nCihpn0o3r" name="BaseEarlyStopper" namespace="Logical_View" comment="    A base class, supports the running statistic which is could be used for early stopping&#10;" visibility="public">
       <UML:Classifier.feature>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uhQmNh8Mw1GUs" name="__init__" visibility="public" stereotype="constructor" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="u36KKGcpG8ET6" type="uUffSdhSc9MEm" kind="return"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="ukk9uJ30eY0wc" name="on_epoch_end" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="utGQ7WjUSKWj4" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="u8xhEXM4vnyhp" name="loss" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uJ8CimHq8HRkT" name=":" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uu7HQyP5st4Jy" name="float" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u5iFBAhv7d0JE" name="logs" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uhi9ZgDvl85iD" name=":" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uxPlECbQNgr4e" name="Dict" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uqrljBXBJrCAv" name="[" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="ulHMmoApMEmOd" name="str" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="umfpmlWa4Gjtt" name="Any" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uX73KoaCdMJPD" name="]" visibility="private" type="u27FcBrsL7fnn" value="None"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uH4hGELmpadbX" name="on_test_end" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uxmoCfzQkZHpF" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uudwGQF1IZi1o" name="loss" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uitC0JqmgmzVa" name=":" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uSDTmh1EfVYZj" name="float" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u5cfliIU09HC5" name="logs" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uKr9DbhWfR9bi" name=":" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uEPCvyzxuABE2" name="Dict" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uKlR8g4EH4JPF" name="[" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="upKOyNY6iOse9" name="str" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u5qJNhrSXtlVp" name="Any" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uCAKBr3J53UKm" name="]" visibility="private" type="u27FcBrsL7fnn" value="None"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uW9HHPPYMSFyA" name="should_stop" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uDtUyiK4IJ80q" type="uUffSdhSc9MEm" kind="return"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uKpu0UUOucg4K" name="EarlyStopperAccuracy" namespace="Logical_View" comment="    Implements early stopping logic that stops training when a threshold on a metric&#10;    is achieved.&#10;" visibility="public">
       <UML:Classifier.feature>
        <UML:Attribute isSpecification="false" xmi.id="uIS7KEt9a7EOY" name="threshold" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="udJReoJOrDtxH" name="field_name" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uDfBgRheQnGkl" name="__init__" comment="        :param threshold: early stopping threshold for the validation set accuracy&#10;            (assumes that the loss function returns the accuracy under name `field_name`)&#10;        :param field_name: the name of the metric return by loss function which should be evaluated against stopping&#10;            criterion (default: &quot;acc&quot;)&#10;" visibility="public" stereotype="constructor" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uqgCaKsufozvp" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uHzTFFopfcT59" name="threshold" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uzKXvbjFyxavn" name=":" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u8Cc2pTt63Gbw" name="float" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uO7wUe9tvjTmV" name="field_name" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uMJ7vFccEFRjz" name=":" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uUcFAZamlaQn2" name="str" visibility="private" type="u27FcBrsL7fnn" value=""/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uqOXYhpSim2dI" name="should_stop" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uMAS2yyR8ZHY7" type="uUffSdhSc9MEm" kind="return"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uksLh76IlxOt4" name="GumbelSoftmaxWrapper" namespace="Logical_View" comment="    Gumbel-Softmax Wrapper for an agent that outputs a single symbol. Assumes that during the forward pass,&#10;    the agent returns log-probabilities over the potential output symbols. During training, the wrapper&#10;    transforms them into a sample from the Gumbel Softmax (GS) distribution; eval-time it returns greedy one-hot encoding&#10;    of the same shape.&#10;    The temperature of the GS distribution can be annealed using `update_temp`.&#10;" visibility="public">
       <UML:Classifier.feature>
        <UML:Attribute isSpecification="false" xmi.id="umsI76PiWNGvh" name="agent" comment=":param agent: The agent to be wrapped. agent.forward() has to output log-probabilities over the vocabulary&#10;:param temperature: The temperature of the Gumbel Softmax distribution&#10;:param trainable_temperature: If set to True, the temperature becomes a trainable parameter of the model&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="u6XsCpaVI4Yel" name="__init__" comment="        :param agent: The agent to be wrapped. agent.forward() has to output log-probabilities over the vocabulary&#10;        :param temperature: The temperature of the Gumbel Softmax distribution&#10;        :param trainable_temperature: If set to True, the temperature becomes a trainable parameter of the model&#10;" visibility="public" stereotype="constructor" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uB5Hp5sfqX5mD" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uR2pGAUUdE3Uk" name="agent" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u7sI8Ppkt7nWW" name="temperature" visibility="private" type="uvBhCm6WK8jRM" value="1.0"/>
          <UML:Parameter isSpecification="false" xmi.id="urHmzXZhEE5y0" name="trainable_temperature" visibility="private" type="uR4u51QglJUwu" value="False"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="urOdmLASe968d" name="forward" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="u6Fn4E0XnltvK" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uo0THF7h7mbFo" name="*" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uC8qIun7vDJEP" name="args" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="upxghzGeKcf4J" name="*" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="ufLapc3rB2azQ" name="*" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="ubF1eHdDgr1H8" name="kwargs" visibility="private" type="uUffSdhSc9MEm" value=""/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Package isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uaeGzR62tBbZ3" name="nn" namespace="Logical_View" visibility="public">
       <UML:Namespace.ownedElement>
        <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uZR4U8ojDO78p" name="Module" namespace="uaeGzR62tBbZ3" visibility="public"/>
        <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="u6yY1L4Y2wb9q" name="Embedding" namespace="uaeGzR62tBbZ3" visibility="public"/>
        <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="utQukrcRZuKrY" name="Linear" namespace="uaeGzR62tBbZ3" visibility="public"/>
        <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uGEkuv3vwMzHp" name="Parameter" namespace="uaeGzR62tBbZ3" visibility="public"/>
        <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="u0YeaWHYOPbYg" name="ModuleList" namespace="uaeGzR62tBbZ3" visibility="public"/>
       </UML:Namespace.ownedElement>
      </UML:Package>
      <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="ueh6gSzgKDAHa" name="SymbolGameGS" namespace="Logical_View" comment="    Implements one-symbol Sender/Receiver game. The loss must be differentiable wrt the parameters of the agents.&#10;    Typically, this assumes Gumbel Softmax relaxation of the communication channel.&#10;    &gt;&gt;&gt; class Receiver(nn.Module):&#10;    ...     def forward(self, x, _input=None):&#10;    ...         return x&#10;    &gt;&gt;&gt; receiver = Receiver()&#10;    &gt;&gt;&gt; sender = nn.Sequential(nn.Linear(10, 10), nn.LogSoftmax(dim=1))&#10;    &gt;&gt;&gt; def mse_loss(sender_input, _1, _2, receiver_output, _3):&#10;    ...     return (sender_input - receiver_output).pow(2.0).mean(dim=1), {}&#10;    &gt;&gt;&gt; game = SymbolGameGS(sender=sender, receiver=Receiver(), loss=mse_loss)&#10;    &gt;&gt;&gt; forward_result = game(torch.ones((2, 10)), None) #  the second argument is labels, we don't need any&#10;    &gt;&gt;&gt; forward_result[1]&#10;    {}&#10;    &gt;&gt;&gt; (forward_result[0] &gt; 0).item()&#10;    1&#10;" visibility="public">
       <UML:Classifier.feature>
        <UML:Attribute isSpecification="false" xmi.id="uKNOgaar8Rxja" name="sender" comment=":param sender: Sender agent. sender.forward() has to output log-probabilities over the vocabulary.&#10;:param receiver: Receiver agent. receiver.forward() has to accept two parameters: message and receiver_input.&#10;`message` is shaped as (batch_size, vocab_size).&#10;:param loss: Callable that outputs differentiable loss, takes the following parameters:&#10;sender_input: input to Sender (comes from dataset)&#10;message: message sent from Sender&#10;receiver_input: input to Receiver from dataset&#10;receiver_output: output of Receiver&#10;labels: labels that come from dataset&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uC8ivDVstF4BC" name="receiver" comment=":param sender: Sender agent. sender.forward() has to output log-probabilities over the vocabulary.&#10;:param receiver: Receiver agent. receiver.forward() has to accept two parameters: message and receiver_input.&#10;`message` is shaped as (batch_size, vocab_size).&#10;:param loss: Callable that outputs differentiable loss, takes the following parameters:&#10;sender_input: input to Sender (comes from dataset)&#10;message: message sent from Sender&#10;receiver_input: input to Receiver from dataset&#10;receiver_output: output of Receiver&#10;labels: labels that come from dataset&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="ulgQ967lxU2dC" name="loss" comment=":param sender: Sender agent. sender.forward() has to output log-probabilities over the vocabulary.&#10;:param receiver: Receiver agent. receiver.forward() has to accept two parameters: message and receiver_input.&#10;`message` is shaped as (batch_size, vocab_size).&#10;:param loss: Callable that outputs differentiable loss, takes the following parameters:&#10;sender_input: input to Sender (comes from dataset)&#10;message: message sent from Sender&#10;receiver_input: input to Receiver from dataset&#10;receiver_output: output of Receiver&#10;labels: labels that come from dataset&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uDLsqwWJ2vehc" name="__init__" comment="        :param sender: Sender agent. sender.forward() has to output log-probabilities over the vocabulary.&#10;        :param receiver: Receiver agent. receiver.forward() has to accept two parameters: message and receiver_input.&#10;        `message` is shaped as (batch_size, vocab_size).&#10;        :param loss: Callable that outputs differentiable loss, takes the following parameters:&#10;          * sender_input: input to Sender (comes from dataset)&#10;          * message: message sent from Sender&#10;          * receiver_input: input to Receiver from dataset&#10;          * receiver_output: output of Receiver&#10;          * labels: labels that come from dataset&#10;" visibility="public" stereotype="constructor" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="ugJQ05o2s6qgH" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="ujLpgDgFxlUHi" name="sender" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u4gpYl4fB105o" name="receiver" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="ulFTVl5YCWaLt" name="loss" visibility="private" type="uUffSdhSc9MEm" value=""/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uokUwMDdoI6Qb" name="forward" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uQur3K3Kdu4in" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uAUvDFW6KOG4O" name="sender_input" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uYhemul7hhDnF" name="labels" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="um7s4uct1I9D8" name="receiver_input" visibility="private" type="u27FcBrsL7fnn" value="None"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="u75adEKBvrc6n" name="RelaxedEmbedding" namespace="Logical_View" comment="    A drop-in replacement for `nn.Embedding` such that it can be used _both_ with Reinforce-based training&#10;    and with Gumbel-Softmax one.&#10;    Important: nn.Linear and nn.Embedding have different initialization strategies, hence replacing nn.Linear with&#10;    `RelaxedEmbedding` might change results.&#10;    &gt;&gt;&gt; emb = RelaxedEmbedding(15, 10)  # vocab size 15, embedding dim 10&#10;    &gt;&gt;&gt; long_query = torch.tensor([[1], [2], [3]]).long()&#10;    &gt;&gt;&gt; long_query.size()&#10;    torch.Size([3, 1])&#10;    &gt;&gt;&gt; emb(long_query).size()&#10;    torch.Size([3, 1, 10])&#10;    &gt;&gt;&gt; float_query = torch.zeros((3, 15)).scatter_(-1, long_query, 1.0).float().unsqueeze(1)&#10;    &gt;&gt;&gt; float_query.size()&#10;    torch.Size([3, 1, 15])&#10;    &gt;&gt;&gt; emb(float_query).size()&#10;    torch.Size([3, 1, 10])&#10;    # make sure it's the same query, one-hot and symbol-id encoded&#10;    &gt;&gt;&gt; (float_query.argmax(dim=-1) == long_query).all().item()&#10;    1&#10;    &gt;&gt;&gt; (emb(float_query) == emb(long_query)).all().item()&#10;    1&#10;" visibility="public">
       <UML:Classifier.feature>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="urSCGMjeM2YUG" name="forward" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uKhF94cdDCJ2p" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uFDmuKhQljMA0" name="x" visibility="private" type="uUffSdhSc9MEm" value=""/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="u0vcc7HEx8M7Q" name="SymbolReceiverWrapper" namespace="Logical_View" comment="    An optional wrapper for single-symbol Receiver, both Gumbel-Softmax and Reinforce. Receives a message, embeds it,&#10;    and passes to the wrapped agent.&#10;" visibility="public">
       <UML:Classifier.feature>
        <UML:Attribute isSpecification="false" xmi.id="uw8Q1rvGpQC0q" name="agent" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="u3mcOF2lnwben" name="embedding" visibility="public" type="u75adEKBvrc6n" initialValue="(vocab_size,agent_input_size)"/>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="u2ZPaBV3ncf3B" name="__init__" visibility="public" stereotype="constructor" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uBhtUwdoHqyBJ" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uUWPcZV0dgKsf" name="agent" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uikLgZA5YDXhS" name="vocab_size" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uqVTIiSdg6fp5" name="agent_input_size" visibility="private" type="uUffSdhSc9MEm" value=""/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uDGP5BiTrKtRG" name="forward" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uV41ovOmebDYT" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uccq9ES7XtHyA" name="message" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="ubn9awir9lHDn" name="input" visibility="private" type="u27FcBrsL7fnn" value="None"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="u9mu8ucbZlzgF" name="RnnSenderGS" namespace="Logical_View" comment="    Gumbel Softmax wrapper for Sender that outputs variable-length sequence of symbols.&#10;    The user-defined `agent` takes an input and outputs an initial hidden state vector for the RNN cell;&#10;    `RnnSenderGS` then unrolls this RNN for the `max_len` symbols. The end-of-sequence logic&#10;    is supposed to be handled by the game implementation. Supports vanilla RNN ('rnn'), GRU ('gru'), and LSTM ('lstm')&#10;    cells.&#10;    &gt;&gt;&gt; agent = nn.Linear(10, 5) #  input size 10, the RNN's hidden size is 5&#10;    &gt;&gt;&gt; agent = RnnSenderGS(agent, vocab_size=2, embed_dim=10, hidden_size=5, max_len=3, temperature=1.0, cell='lstm')&#10;    &gt;&gt;&gt; output = agent(torch.ones((1, 10)))&#10;    &gt;&gt;&gt; output.size()  # batch size x max_len x vocab_size&#10;    torch.Size([1, 3, 2])&#10;" visibility="public">
       <UML:Classifier.feature>
        <UML:Attribute isSpecification="false" xmi.id="uqohdYf7oBDrl" name="agent" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uFgZ0d1MNf3f0" name="force_eos" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uk448xMRhc6b3" name="max_len" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="umLboCYrTw25m" name="embedding" visibility="public" type="utQukrcRZuKrY" initialValue="(vocab_size,embed_dim)"/>
        <UML:Attribute isSpecification="false" xmi.id="uOkTZCPYt9zb6" name="sos_embedding" visibility="public" type="uGEkuv3vwMzHp" initialValue="(torch.zeros(embed_dim))"/>
        <UML:Attribute isSpecification="false" xmi.id="uKz0FqY1u6wCf" name="embed_dim" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uJypoQWRO7mix" name="vocab_size" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uhvP8PBxPpMjw" name="cell" visibility="public" ownerScope="classifier" type="ubO6w4XzG3guO" initialValue="()"/>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uNw2yPTqmMuVn" name="__init__" visibility="public" stereotype="constructor" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uXzUrHlGk9JTY" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uqrrMfio88NY3" name="agent" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uwDrMam1CWZP2" name="vocab_size" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uDXUExQ8pN9kt" name="embed_dim" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u7EBXZtsKexQK" name="hidden_size" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="usLZg9R29VXpe" name="max_len" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uDwwqXYMXB28C" name="temperature" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="ukJBwqPNmWX97" name="cell" visibility="private" type="u27FcBrsL7fnn" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="ulSknL23pIhyT" name="force_eos" visibility="private" type="uR4u51QglJUwu" value="True"/>
          <UML:Parameter isSpecification="false" xmi.id="umcYZdcDQgeug" name=";" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uPzM7C9F651yV" name="trainable_temperature" visibility="private" type="uR4u51QglJUwu" value="False"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uFDNAZEeWlpFy" name="reset_parameters" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="u01N1YyeYJByB" type="uUffSdhSc9MEm" kind="return"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="up4V3vUdWDGaU" name="forward" comment=" only for LSTM" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="ukNlFDa5PH0MZ" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uVCp0YlTEy1UX" name="x" visibility="private" type="uUffSdhSc9MEm" value=""/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uzgT8SvroWkkt" name="cell" namespace="Logical_View" visibility="public" stereotype="class-or-package">
       <UML:Namespace.ownedElement>
        <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="ubO6w4XzG3guO" name="lower" namespace="uzgT8SvroWkkt" visibility="public"/>
       </UML:Namespace.ownedElement>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uBHGfxfNCFIgc" name="RnnReceiverGS" namespace="Logical_View" comment="    Gumbel Softmax-based wrapper for Receiver agent in variable-length communication game. The user implemented logic&#10;    is passed in `agent` and is responsible for mapping (RNN's hidden state + Receiver's optional input)&#10;    into the output vector. Since, due to the relaxation, end-of-sequence symbol might have non-zero probability at&#10;    each timestep of the message, `RnnReceiverGS` is applied for each timestep. The corresponding EOS logic is handled by&#10;    `SenderReceiverRnnGS`.&#10;" visibility="public">
       <UML:Classifier.feature>
        <UML:Attribute isSpecification="false" xmi.id="uaiuh0mADL3qi" name="agent" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uHjxZc2RGxQGO" name="cell" visibility="public" ownerScope="classifier" type="u27FcBrsL7fnn" initialValue="()"/>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="u2prdWFnY8gqh" name="__init__" visibility="public" stereotype="constructor" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="u4HA8Ogwy2X5K" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uI3MEzhxekftn" name="agent" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uutzSUJkGJmY7" name="vocab_size" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uI8jLUWPgzJq2" name="embed_dim" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u3Z70RdpxCRJC" name="hidden_size" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uNX5Dcx6jXVkk" name="cell" visibility="private" type="u27FcBrsL7fnn" value=""/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uV9TUOpqIB9MG" name="forward" comment=" to get an access to the hidden states, we have to unroll the cell ourselves" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="u01WLduPdqB2o" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="upax2w6kq5aLc" name="message" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uEtkKGzuVAYAB" name="input" visibility="private" type="u27FcBrsL7fnn" value="None"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uTyahUt3MfYmK" name="SenderReceiverRnnGS" namespace="Logical_View" comment="    This class implements the Sender/Receiver game mechanics for the Sender/Receiver game with variable-length&#10;    communication messages and Gumber-Softmax relaxation of the channel. The vocabulary term with id `0` is assumed&#10;    to the end-of-sequence symbol. It is assumed that communication is stopped either after all the message is processed&#10;    or when the end-of-sequence symbol is met.&#10;    &gt;&gt;&gt; sender = nn.Linear(10, 5)&#10;    &gt;&gt;&gt; sender = RnnSenderGS(sender, vocab_size=2, embed_dim=3, hidden_size=5, max_len=3, temperature=5.0, cell='gru')&#10;    &gt;&gt;&gt; class Receiver(nn.Module):&#10;    ...     def __init__(self):&#10;    ...         super().__init__()&#10;    ...         self.fc = nn.Linear(7, 10)&#10;    ...     def forward(self, x, _input):&#10;    ...         return self.fc(x)&#10;    &gt;&gt;&gt; receiver = RnnReceiverGS(Receiver(), vocab_size=2, embed_dim=4, hidden_size=7, cell='rnn')&#10;    &gt;&gt;&gt; def loss(sender_input, _message, _receiver_input, receiver_output, labels):&#10;    ...     return (sender_input - receiver_output).pow(2.0).mean(dim=1), {'aux' : 0}&#10;    &gt;&gt;&gt; game = SenderReceiverRnnGS(sender, receiver, loss)&#10;    &gt;&gt;&gt; output = game.forward(torch.ones((3, 10)), None, None)  # batch of 3 10d vectors&#10;    &gt;&gt;&gt; output[1]['aux'].item()&#10;    0.0&#10;    &gt;&gt;&gt; output[0].item() &gt; 0&#10;    True&#10;" visibility="public">
       <UML:Classifier.feature>
        <UML:Attribute isSpecification="false" xmi.id="uZMWuwHjlLwHG" name="sender" comment=":param sender: sender agent&#10;:param receiver: receiver agent&#10;:param loss:  the optimized loss that accepts&#10;sender_input: input of Sender&#10;message: the is sent by Sender&#10;receiver_input: input of Receiver from the dataset&#10;receiver_output: output of Receiver&#10;labels: labels assigned to Sender's input data&#10;and outputs a tuple of (1) a loss tensor of shape (batch size, 1) (2) the dict with auxiliary information&#10;of the same shape. The loss will be minimized during training, and the auxiliary information aggregated over&#10;all batches in the dataset.&#10;:param length_cost: the penalty applied to Sender for each symbol produced&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uSB8mndvxlzug" name="receiver" comment=":param sender: sender agent&#10;:param receiver: receiver agent&#10;:param loss:  the optimized loss that accepts&#10;sender_input: input of Sender&#10;message: the is sent by Sender&#10;receiver_input: input of Receiver from the dataset&#10;receiver_output: output of Receiver&#10;labels: labels assigned to Sender's input data&#10;and outputs a tuple of (1) a loss tensor of shape (batch size, 1) (2) the dict with auxiliary information&#10;of the same shape. The loss will be minimized during training, and the auxiliary information aggregated over&#10;all batches in the dataset.&#10;:param length_cost: the penalty applied to Sender for each symbol produced&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="unYRCfotZKjCt" name="loss" comment=":param sender: sender agent&#10;:param receiver: receiver agent&#10;:param loss:  the optimized loss that accepts&#10;sender_input: input of Sender&#10;message: the is sent by Sender&#10;receiver_input: input of Receiver from the dataset&#10;receiver_output: output of Receiver&#10;labels: labels assigned to Sender's input data&#10;and outputs a tuple of (1) a loss tensor of shape (batch size, 1) (2) the dict with auxiliary information&#10;of the same shape. The loss will be minimized during training, and the auxiliary information aggregated over&#10;all batches in the dataset.&#10;:param length_cost: the penalty applied to Sender for each symbol produced&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uXfMPMXI9mh2U" name="length_cost" comment=":param sender: sender agent&#10;:param receiver: receiver agent&#10;:param loss:  the optimized loss that accepts&#10;sender_input: input of Sender&#10;message: the is sent by Sender&#10;receiver_input: input of Receiver from the dataset&#10;receiver_output: output of Receiver&#10;labels: labels assigned to Sender's input data&#10;and outputs a tuple of (1) a loss tensor of shape (batch size, 1) (2) the dict with auxiliary information&#10;of the same shape. The loss will be minimized during training, and the auxiliary information aggregated over&#10;all batches in the dataset.&#10;:param length_cost: the penalty applied to Sender for each symbol produced&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="ueG3s4YsOavpk" name="__init__" comment="        :param sender: sender agent&#10;        :param receiver: receiver agent&#10;        :param loss:  the optimized loss that accepts&#10;            sender_input: input of Sender&#10;            message: the is sent by Sender&#10;            receiver_input: input of Receiver from the dataset&#10;            receiver_output: output of Receiver&#10;            labels: labels assigned to Sender's input data&#10;          and outputs a tuple of (1) a loss tensor of shape (batch size, 1) (2) the dict with auxiliary information&#10;          of the same shape. The loss will be minimized during training, and the auxiliary information aggregated over&#10;          all batches in the dataset.&#10;        :param length_cost: the penalty applied to Sender for each symbol produced&#10;" visibility="public" stereotype="constructor" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="ubSr5VOIPvuMy" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uyy9ukt1X7lOY" name="sender" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uK5Z02zb3aFkG" name="receiver" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="umL31XiDku83J" name="loss" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uG12xXAxStvxI" name="length_cost" visibility="private" type="uvBhCm6WK8jRM" value="0.0"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="u7FIAsL3BWpTL" name="forward" comment=" always eos == 0 the remainder of the probability mass" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uKVtzh4kmo3lg" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uT2CHzZHQ7k6w" name="sender_input" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="ufSiTfQ8Fcxin" name="labels" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u0oMGrkW3mi9G" name="receiver_input" visibility="private" type="u27FcBrsL7fnn" value="None"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uLvRsomVYD7Lu" name="ReinforceWrapper" namespace="Logical_View" comment="    Reinforce Wrapper for an agent. Assumes that the during the forward,&#10;    the wrapped agent returns log-probabilities over the potential outputs. During training, the wrapper&#10;    transforms them into a tuple of (sample from the multinomial, log-prob of the sample, entropy for the multinomial).&#10;    Eval-time the sample is replaced with argmax.&#10;    &gt;&gt;&gt; agent = nn.Sequential(nn.Linear(10, 3), nn.LogSoftmax(dim=1))&#10;    &gt;&gt;&gt; agent = ReinforceWrapper(agent)&#10;    &gt;&gt;&gt; sample, log_prob, entropy = agent(torch.ones(4, 10))&#10;    &gt;&gt;&gt; sample.size()&#10;    torch.Size([4])&#10;    &gt;&gt;&gt; (log_prob &lt; 0).all().item()&#10;    1&#10;    &gt;&gt;&gt; (entropy &gt; 0).all().item()&#10;    1&#10;" visibility="public">
       <UML:Classifier.feature>
        <UML:Attribute isSpecification="false" xmi.id="uHcCflr4lhBBV" name="agent" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uaH9VJNQpfOpT" name="__init__" visibility="public" stereotype="constructor" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uPkymjGifi1gB" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="urA4jWZMmI549" name="agent" visibility="private" type="uUffSdhSc9MEm" value=""/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uSdIx6Ea11QPZ" name="forward" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="urNk5g901k1Ql" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uoNujuBdm4jmV" name="*" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uRvi34IqxCnIi" name="args" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u3SFS9xIKF9Lz" name="*" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="unFOoEwAvy8EB" name="*" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uI37vGoKd2xYG" name="kwargs" visibility="private" type="uUffSdhSc9MEm" value=""/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uX23VKsBI7APb" name="ReinforceDeterministicWrapper" namespace="Logical_View" comment="    Simple wrapper that makes a deterministic agent (without sampling) compatible with Reinforce-based game, by&#10;    adding zero log-probability and entropy values to the output. No sampling is run on top of the wrapped agent,&#10;    it is passed as is.&#10;    &gt;&gt;&gt; agent = nn.Sequential(nn.Linear(10, 3), nn.LogSoftmax(dim=1))&#10;    &gt;&gt;&gt; agent = ReinforceDeterministicWrapper(agent)&#10;    &gt;&gt;&gt; sample, log_prob, entropy = agent(torch.ones(4, 10))&#10;    &gt;&gt;&gt; sample.size()&#10;    torch.Size([4, 3])&#10;    &gt;&gt;&gt; (log_prob == 0).all().item()&#10;    1&#10;    &gt;&gt;&gt; (entropy == 0).all().item()&#10;    1&#10;" visibility="public">
       <UML:Classifier.feature>
        <UML:Attribute isSpecification="false" xmi.id="uTBJnRPha3nXl" name="agent" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uk8CvJquxYuHj" name="__init__" visibility="public" stereotype="constructor" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="ueTiW4iDcxUYt" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uzvbh7Jzezhct" name="agent" visibility="private" type="uUffSdhSc9MEm" value=""/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uxDaCYKVW1vgT" name="forward" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="u5fgudCLMp5lA" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="u8YXwsCYH3bpm" name="*" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uqRRkqFZ5cIif" name="args" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="udHStmh71JlNA" name="*" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uZ3rjLxJGgO9i" name="*" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uUi7zSK8Y2P7P" name="kwargs" visibility="private" type="uUffSdhSc9MEm" value=""/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="u51ebs4Agyot8" name="SymbolGameReinforce" namespace="Logical_View" comment="    A single-symbol Sender/Receiver game implemented with Reinforce.&#10;" visibility="public">
       <UML:Classifier.feature>
        <UML:Attribute isSpecification="false" xmi.id="ukmUlAKYFTVNS" name="sender" comment=":param sender: Sender agent. On forward, returns a tuple of (message, log-prob of the message, entropy).&#10;:param receiver: Receiver agent. On forward, accepts a message and the dedicated receiver input. Returns&#10;a tuple of (output, log-probs, entropy).&#10;:param loss: The loss function that accepts:&#10;sender_input: input of Sender&#10;message: the is sent by Sender&#10;receiver_input: input of Receiver from the dataset&#10;receiver_output: output of Receiver&#10;labels: labels assigned to Sender's input data&#10;and outputs the end-to-end loss. Can be non-differentiable; if it is differentiable, this will be leveraged&#10;:param sender_entropy_coeff: The entropy regularization coefficient for Sender&#10;:param receiver_entropy_coeff: The entropy regularizatino coefficient for Receiver&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uXxPpQn0mc07C" name="receiver" comment=":param sender: Sender agent. On forward, returns a tuple of (message, log-prob of the message, entropy).&#10;:param receiver: Receiver agent. On forward, accepts a message and the dedicated receiver input. Returns&#10;a tuple of (output, log-probs, entropy).&#10;:param loss: The loss function that accepts:&#10;sender_input: input of Sender&#10;message: the is sent by Sender&#10;receiver_input: input of Receiver from the dataset&#10;receiver_output: output of Receiver&#10;labels: labels assigned to Sender's input data&#10;and outputs the end-to-end loss. Can be non-differentiable; if it is differentiable, this will be leveraged&#10;:param sender_entropy_coeff: The entropy regularization coefficient for Sender&#10;:param receiver_entropy_coeff: The entropy regularizatino coefficient for Receiver&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="u8JqVsKr7YFvq" name="loss" comment=":param sender: Sender agent. On forward, returns a tuple of (message, log-prob of the message, entropy).&#10;:param receiver: Receiver agent. On forward, accepts a message and the dedicated receiver input. Returns&#10;a tuple of (output, log-probs, entropy).&#10;:param loss: The loss function that accepts:&#10;sender_input: input of Sender&#10;message: the is sent by Sender&#10;receiver_input: input of Receiver from the dataset&#10;receiver_output: output of Receiver&#10;labels: labels assigned to Sender's input data&#10;and outputs the end-to-end loss. Can be non-differentiable; if it is differentiable, this will be leveraged&#10;:param sender_entropy_coeff: The entropy regularization coefficient for Sender&#10;:param receiver_entropy_coeff: The entropy regularizatino coefficient for Receiver&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="u9LtAikg8SpV1" name="receiver_entropy_coeff" comment=":param sender: Sender agent. On forward, returns a tuple of (message, log-prob of the message, entropy).&#10;:param receiver: Receiver agent. On forward, accepts a message and the dedicated receiver input. Returns&#10;a tuple of (output, log-probs, entropy).&#10;:param loss: The loss function that accepts:&#10;sender_input: input of Sender&#10;message: the is sent by Sender&#10;receiver_input: input of Receiver from the dataset&#10;receiver_output: output of Receiver&#10;labels: labels assigned to Sender's input data&#10;and outputs the end-to-end loss. Can be non-differentiable; if it is differentiable, this will be leveraged&#10;:param sender_entropy_coeff: The entropy regularization coefficient for Sender&#10;:param receiver_entropy_coeff: The entropy regularizatino coefficient for Receiver&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uFf2F65J0gZqP" name="sender_entropy_coeff" comment=":param sender: Sender agent. On forward, returns a tuple of (message, log-prob of the message, entropy).&#10;:param receiver: Receiver agent. On forward, accepts a message and the dedicated receiver input. Returns&#10;a tuple of (output, log-probs, entropy).&#10;:param loss: The loss function that accepts:&#10;sender_input: input of Sender&#10;message: the is sent by Sender&#10;receiver_input: input of Receiver from the dataset&#10;receiver_output: output of Receiver&#10;labels: labels assigned to Sender's input data&#10;and outputs the end-to-end loss. Can be non-differentiable; if it is differentiable, this will be leveraged&#10;:param sender_entropy_coeff: The entropy regularization coefficient for Sender&#10;:param receiver_entropy_coeff: The entropy regularizatino coefficient for Receiver&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uKbuN2OhqN0DX" name="mean_baseline" comment=":param sender: Sender agent. On forward, returns a tuple of (message, log-prob of the message, entropy).&#10;:param receiver: Receiver agent. On forward, accepts a message and the dedicated receiver input. Returns&#10;a tuple of (output, log-probs, entropy).&#10;:param loss: The loss function that accepts:&#10;sender_input: input of Sender&#10;message: the is sent by Sender&#10;receiver_input: input of Receiver from the dataset&#10;receiver_output: output of Receiver&#10;labels: labels assigned to Sender's input data&#10;and outputs the end-to-end loss. Can be non-differentiable; if it is differentiable, this will be leveraged&#10;:param sender_entropy_coeff: The entropy regularization coefficient for Sender&#10;:param receiver_entropy_coeff: The entropy regularizatino coefficient for Receiver&#10;" visibility="public" type="uvBhCm6WK8jRM" initialValue="0.0"/>
        <UML:Attribute isSpecification="false" xmi.id="utdIGCL92tjOc" name="n_points" comment=":param sender: Sender agent. On forward, returns a tuple of (message, log-prob of the message, entropy).&#10;:param receiver: Receiver agent. On forward, accepts a message and the dedicated receiver input. Returns&#10;a tuple of (output, log-probs, entropy).&#10;:param loss: The loss function that accepts:&#10;sender_input: input of Sender&#10;message: the is sent by Sender&#10;receiver_input: input of Receiver from the dataset&#10;receiver_output: output of Receiver&#10;labels: labels assigned to Sender's input data&#10;and outputs the end-to-end loss. Can be non-differentiable; if it is differentiable, this will be leveraged&#10;:param sender_entropy_coeff: The entropy regularization coefficient for Sender&#10;:param receiver_entropy_coeff: The entropy regularizatino coefficient for Receiver&#10;" visibility="public" type="uvBhCm6WK8jRM" initialValue="0.0"/>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uoktgALmuhkiF" name="__init__" comment="        :param sender: Sender agent. On forward, returns a tuple of (message, log-prob of the message, entropy).&#10;        :param receiver: Receiver agent. On forward, accepts a message and the dedicated receiver input. Returns&#10;            a tuple of (output, log-probs, entropy).&#10;        :param loss: The loss function that accepts:&#10;            sender_input: input of Sender&#10;            message: the is sent by Sender&#10;            receiver_input: input of Receiver from the dataset&#10;            receiver_output: output of Receiver&#10;            labels: labels assigned to Sender's input data&#10;          and outputs the end-to-end loss. Can be non-differentiable; if it is differentiable, this will be leveraged&#10;        :param sender_entropy_coeff: The entropy regularization coefficient for Sender&#10;        :param receiver_entropy_coeff: The entropy regularizatino coefficient for Receiver&#10;" visibility="public" stereotype="constructor" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uq6rpy8d1akPO" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="ujUuf59UpPHIy" name="sender" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uENzvVlptCTKK" name="receiver" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="ulDXJQU8bF0qa" name="loss" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uoDoUxd9G9gjY" name="sender_entropy_coeff" visibility="private" type="uvBhCm6WK8jRM" value="0.0"/>
          <UML:Parameter isSpecification="false" xmi.id="ue31Hy2nALLEX" name="receiver_entropy_coeff" visibility="private" type="uvBhCm6WK8jRM" value="0.0"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uqEiINF9pkRrd" name="forward" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uvcWtZhTNhPsq" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="u6MmEMfmTC1MG" name="sender_input" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uuwg9lqiSjQS9" name="labels" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="ukE9hcVWMwG6H" name="receiver_input" visibility="private" type="u27FcBrsL7fnn" value="None"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uCyRkXQjDFtyh" name="RnnSenderReinforce" namespace="Logical_View" comment="    Reinforce Wrapper for Sender in variable-length message game. Assumes that during the forward,&#10;    the wrapped agent returns the initial hidden state for a RNN cell. This cell is the unrolled by the wrapper.&#10;    During training, the wrapper samples from the cell, getting the output message. Evaluation-time, the sampling&#10;    is replaced by argmax.&#10;    &gt;&gt;&gt; agent = nn.Linear(10, 3)&#10;    &gt;&gt;&gt; agent = RnnSenderReinforce(agent, vocab_size=5, embed_dim=5, hidden_size=3, max_len=10, cell='lstm', force_eos=False)&#10;    &gt;&gt;&gt; input = torch.FloatTensor(16, 10).uniform_(-0.1, 0.1)&#10;    &gt;&gt;&gt; message, logprob, entropy = agent(input)&#10;    &gt;&gt;&gt; message.size()&#10;    torch.Size([16, 10])&#10;    &gt;&gt;&gt; (entropy &gt; 0).all().item()&#10;    1&#10;    &gt;&gt;&gt; message.size()  # batch size x max_len&#10;    torch.Size([16, 10])&#10;" visibility="public">
       <UML:Classifier.feature>
        <UML:Attribute isSpecification="false" xmi.id="uCBqNXvrCXUA5" name="agent" comment=":param agent: the agent to be wrapped&#10;:param vocab_size: the communication vocabulary size&#10;:param embed_dim: the size of the embedding used to embed the output symbols&#10;:param hidden_size: the RNN cell's hidden state size&#10;:param max_len: maximal length of the output messages&#10;:param cell: type of the cell used (rnn, gru, lstm)&#10;:param force_eos: if set to True, each message is extended by an EOS symbol. To ensure that no message goes&#10;beyond `max_len`, Sender only generates `max_len - 1` symbols from an RNN cell and appends EOS.&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uD9wQ78hgQTfG" name="force_eos" comment=":param agent: the agent to be wrapped&#10;:param vocab_size: the communication vocabulary size&#10;:param embed_dim: the size of the embedding used to embed the output symbols&#10;:param hidden_size: the RNN cell's hidden state size&#10;:param max_len: maximal length of the output messages&#10;:param cell: type of the cell used (rnn, gru, lstm)&#10;:param force_eos: if set to True, each message is extended by an EOS symbol. To ensure that no message goes&#10;beyond `max_len`, Sender only generates `max_len - 1` symbols from an RNN cell and appends EOS.&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uZ1ajaM7Si2a7" name="max_len" comment=":param agent: the agent to be wrapped&#10;:param vocab_size: the communication vocabulary size&#10;:param embed_dim: the size of the embedding used to embed the output symbols&#10;:param hidden_size: the RNN cell's hidden state size&#10;:param max_len: maximal length of the output messages&#10;:param cell: type of the cell used (rnn, gru, lstm)&#10;:param force_eos: if set to True, each message is extended by an EOS symbol. To ensure that no message goes&#10;beyond `max_len`, Sender only generates `max_len - 1` symbols from an RNN cell and appends EOS.&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="ur9Z1pdT8cm64" name="embedding" comment=":param agent: the agent to be wrapped&#10;:param vocab_size: the communication vocabulary size&#10;:param embed_dim: the size of the embedding used to embed the output symbols&#10;:param hidden_size: the RNN cell's hidden state size&#10;:param max_len: maximal length of the output messages&#10;:param cell: type of the cell used (rnn, gru, lstm)&#10;:param force_eos: if set to True, each message is extended by an EOS symbol. To ensure that no message goes&#10;beyond `max_len`, Sender only generates `max_len - 1` symbols from an RNN cell and appends EOS.&#10;" visibility="public" type="u6yY1L4Y2wb9q" initialValue="(vocab_size,embed_dim)"/>
        <UML:Attribute isSpecification="false" xmi.id="uZmVkEKewHr3B" name="sos_embedding" comment=":param agent: the agent to be wrapped&#10;:param vocab_size: the communication vocabulary size&#10;:param embed_dim: the size of the embedding used to embed the output symbols&#10;:param hidden_size: the RNN cell's hidden state size&#10;:param max_len: maximal length of the output messages&#10;:param cell: type of the cell used (rnn, gru, lstm)&#10;:param force_eos: if set to True, each message is extended by an EOS symbol. To ensure that no message goes&#10;beyond `max_len`, Sender only generates `max_len - 1` symbols from an RNN cell and appends EOS.&#10;" visibility="public" type="uGEkuv3vwMzHp" initialValue="(torch.zeros(embed_dim))"/>
        <UML:Attribute isSpecification="false" xmi.id="uszMx1SzAFt3m" name="embed_dim" comment=":param agent: the agent to be wrapped&#10;:param vocab_size: the communication vocabulary size&#10;:param embed_dim: the size of the embedding used to embed the output symbols&#10;:param hidden_size: the RNN cell's hidden state size&#10;:param max_len: maximal length of the output messages&#10;:param cell: type of the cell used (rnn, gru, lstm)&#10;:param force_eos: if set to True, each message is extended by an EOS symbol. To ensure that no message goes&#10;beyond `max_len`, Sender only generates `max_len - 1` symbols from an RNN cell and appends EOS.&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uyYWDtTGrC4cM" name="vocab_size" comment=":param agent: the agent to be wrapped&#10;:param vocab_size: the communication vocabulary size&#10;:param embed_dim: the size of the embedding used to embed the output symbols&#10;:param hidden_size: the RNN cell's hidden state size&#10;:param max_len: maximal length of the output messages&#10;:param cell: type of the cell used (rnn, gru, lstm)&#10;:param force_eos: if set to True, each message is extended by an EOS symbol. To ensure that no message goes&#10;beyond `max_len`, Sender only generates `max_len - 1` symbols from an RNN cell and appends EOS.&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uJTrY4YBpzMAg" name="num_layers" comment=":param agent: the agent to be wrapped&#10;:param vocab_size: the communication vocabulary size&#10;:param embed_dim: the size of the embedding used to embed the output symbols&#10;:param hidden_size: the RNN cell's hidden state size&#10;:param max_len: maximal length of the output messages&#10;:param cell: type of the cell used (rnn, gru, lstm)&#10;:param force_eos: if set to True, each message is extended by an EOS symbol. To ensure that no message goes&#10;beyond `max_len`, Sender only generates `max_len - 1` symbols from an RNN cell and appends EOS.&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="unU9axl6o0FT2" name="cells" comment=":param agent: the agent to be wrapped&#10;:param vocab_size: the communication vocabulary size&#10;:param embed_dim: the size of the embedding used to embed the output symbols&#10;:param hidden_size: the RNN cell's hidden state size&#10;:param max_len: maximal length of the output messages&#10;:param cell: type of the cell used (rnn, gru, lstm)&#10;:param force_eos: if set to True, each message is extended by an EOS symbol. To ensure that no message goes&#10;beyond `max_len`, Sender only generates `max_len - 1` symbols from an RNN cell and appends EOS.&#10;" visibility="public" type="u27FcBrsL7fnn" initialValue="([;cell_type(input_size=embed_dim,hidden_size=hidden_size)ifi==0else\cell_type(input_size=hidden_size,hidden_size=hidden_size)foriinrange(self.num_layers)])"/>
        <UML:Attribute isSpecification="false" xmi.id="udeJccykTGEFr" name="cell" comment=":param agent: the agent to be wrapped&#10;:param vocab_size: the communication vocabulary size&#10;:param embed_dim: the size of the embedding used to embed the output symbols&#10;:param hidden_size: the RNN cell's hidden state size&#10;:param max_len: maximal length of the output messages&#10;:param cell: type of the cell used (rnn, gru, lstm)&#10;:param force_eos: if set to True, each message is extended by an EOS symbol. To ensure that no message goes&#10;beyond `max_len`, Sender only generates `max_len - 1` symbols from an RNN cell and appends EOS.&#10;" visibility="public" ownerScope="classifier" type="ubO6w4XzG3guO" initialValue="()"/>
        <UML:Attribute isSpecification="false" xmi.id="ud76W2ZeD6oI0" name="cell_types" comment=":param agent: the agent to be wrapped&#10;:param vocab_size: the communication vocabulary size&#10;:param embed_dim: the size of the embedding used to embed the output symbols&#10;:param hidden_size: the RNN cell's hidden state size&#10;:param max_len: maximal length of the output messages&#10;:param cell: type of the cell used (rnn, gru, lstm)&#10;:param force_eos: if set to True, each message is extended by an EOS symbol. To ensure that no message goes&#10;beyond `max_len`, Sender only generates `max_len - 1` symbols from an RNN cell and appends EOS.&#10;" visibility="public" ownerScope="classifier" type="u9ApBEDyvrqN5" initialValue="{'rnn':nn.RNNCell,'gru':nn.GRUCell,'lstm':nn.LSTMCell}"/>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uAucjhQ2GRu8K" name="__init__" comment="        :param agent: the agent to be wrapped&#10;        :param vocab_size: the communication vocabulary size&#10;        :param embed_dim: the size of the embedding used to embed the output symbols&#10;        :param hidden_size: the RNN cell's hidden state size&#10;        :param max_len: maximal length of the output messages&#10;        :param cell: type of the cell used (rnn, gru, lstm)&#10;        :param force_eos: if set to True, each message is extended by an EOS symbol. To ensure that no message goes&#10;        beyond `max_len`, Sender only generates `max_len - 1` symbols from an RNN cell and appends EOS.&#10;" visibility="public" stereotype="constructor" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uFyNAXNtqSVzc" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="u8xRCmgRolcvz" name="agent" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u9Ro7V9AvPFu6" name="vocab_size" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uZF7R4mwAR87k" name="embed_dim" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u3PnvE6A8IwZ5" name="hidden_size" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="ugZzCrB3crOts" name="max_len" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uVpKmp4Ab7gCf" name="num_layers" visibility="private" type="uenFS4WYhQUaR" value="1"/>
          <UML:Parameter isSpecification="false" xmi.id="uwuoBRf0XVvgo" name="cell" visibility="private" type="u27FcBrsL7fnn" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u4zz3E8KlvgXY" name="force_eos" visibility="private" type="uR4u51QglJUwu" value="True"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="unXZcsuqPSZBZ" name="reset_parameters" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uO3mdHDAKsbw9" type="uUffSdhSc9MEm" kind="return"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uvXf0vmv0seSO" name="forward" comment=" only used for LSTM ATTENTION ENLEVER LAJOUTif step==0:    step_logits = F.log_softmax(self.hidden_to_output(h_t), dim=1)-1000*torch.cat((torch.zeros((h_t.size(0),1)),torch.ones((h_t.size(0),int(self.vocab_size/2))),torch.zeros((h_t.size(0),int(self.vocab_size/2)))),dim=1).to(&quot;cuda&quot;)else:    step_logits = F.log_softmax(self.hidden_to_output(h_t), dim=1)-1000*torch.cat((torch.zeros((h_t.size(0),1)),torch.zeros((h_t.size(0),int(self.vocab_size/2))),torch.ones((h_t.size(0),int(self.vocab_size/2)))),dim=1).to(&quot;cuda&quot;)" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uUU5mOvvvcMtC" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="ui5bGit7lSKyw" name="x" visibility="private" type="uUffSdhSc9MEm" value=""/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uXYedYOcc5LRM" name="RnnReceiverReinforce" namespace="Logical_View" comment="    Reinforce Wrapper for Receiver in variable-length message game. The wrapper logic feeds the message into the cell&#10;    and calls the wrapped agent on the hidden state vector for the step that either corresponds to the EOS input to the&#10;    input that reaches the maximal length of the sequence.&#10;    This output is assumed to be the tuple of (output, logprob, entropy).&#10;" visibility="public">
       <UML:Classifier.feature>
        <UML:Attribute isSpecification="false" xmi.id="usLnh3M9iA47J" name="agent" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uB1Z55rg7PxR7" name="encoder" visibility="public" type="urXSNZJSY4yaS" initialValue="(vocab_size,embed_dim,hidden_size,cell,num_layers)"/>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uk1DhOXeGzNV1" name="__init__" visibility="public" stereotype="constructor" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uw3JLcD3j5D3y" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uw88gUSuyLykN" name="agent" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uWbZ2zrJOGFq1" name="vocab_size" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uUOFaDSGc9FEC" name="embed_dim" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uoPIwswrKLEji" name="hidden_size" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uIJ4TEWxzVDNa" name="cell" visibility="private" type="u27FcBrsL7fnn" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uwVIcgYcJAl9r" name="num_layers" visibility="private" type="uenFS4WYhQUaR" value="1"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="ucQ6b1QYiT6EW" name="forward" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="um3ggIpNEVygS" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="unJQrtkVhed36" name="message" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u5grK2cUZLCkn" name="input" visibility="private" type="u27FcBrsL7fnn" value="None"/>
          <UML:Parameter isSpecification="false" xmi.id="uiX5JpuJIl4XR" name="lengths" visibility="private" type="u27FcBrsL7fnn" value="None"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="urXSNZJSY4yaS" name="RnnEncoder" namespace="Logical_View" comment="Feeds a sequence into an RNN (vanilla RNN, GRU, LSTM) cell and returns a vector representation&#10;    of it, which is found as the last hidden state of the last RNN layer. Assumes that the eos token has the id equal to 0.&#10;" visibility="public">
       <UML:Classifier.feature>
        <UML:Attribute isSpecification="false" xmi.id="ujLhCI3n9hCoN" name="cell" visibility="public" ownerScope="classifier" type="ubO6w4XzG3guO" initialValue="()"/>
        <UML:Attribute isSpecification="false" xmi.id="uxmlNkV2FJhXg" name="cell_types" visibility="public" ownerScope="classifier" type="u9ApBEDyvrqN5" initialValue="{'rnn':nn.RNN,'gru':nn.GRU,'lstm':nn.LSTM}"/>
        <UML:Attribute isSpecification="false" xmi.id="uueEOn9Hpy7u1" name="hidden_size" visibility="public" ownerScope="classifier" type="u27FcBrsL7fnn"/>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="ujRTo7NEJ5jGx" name="__init__" comment="        Arguments:&#10;            vocab_size {int} -- The size of the input vocabulary (including eos)&#10;            embed_dim {int} -- Dimensionality of the embeddings&#10;            n_hidden {int} -- Dimensionality of the cell's hidden state&#10;        Keyword Arguments:&#10;            cell {str} -- Type of the cell ('rnn', 'gru', or 'lstm') (default: {'rnn'})&#10;            num_layers {int} -- Number of the stacked RNN layers (default: {1})&#10;" visibility="public" stereotype="constructor" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uCAeZgbPaNPEF" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uV9bVFoxMOdrx" name="vocab_size" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uE9RNDRyubTwM" name=":" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uIjbEoG7mYZUO" name="int" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uRow54ZT8RYI5" name="embed_dim" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uRgtVeG6SvtDx" name=":" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uPzJHKctE3JKY" name="int" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uQvQUXEK6Lx0Y" name="n_hidden" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uApgG5Ayy7ctq" name=":" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="ujRFcJHyczWub" name="int" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uEIQYbcxZlnPz" name="cell" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uJakifAnuRdRW" name=":" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="ucWrGT7qBtPO1" name="str" visibility="private" type="u27FcBrsL7fnn" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uWvN3VQyl4PqF" name="num_layers" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u4LX1H5436Ipj" name=":" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uPEtJMsqnAlGE" name="int" visibility="private" type="uenFS4WYhQUaR" value="1"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="u7XSup9UYWwOm" name="forward" comment="Feeds a sequence into an RNN cell and returns the last hidden state of the last layer.&#10;        Arguments:&#10;            message {torch.Tensor} -- A sequence to be processed, a torch.Tensor of type Long, dimensions [B, T]&#10;        Keyword Arguments:&#10;            lengths {Optional[torch.Tensor]} -- An optional Long tensor with messages' lengths. (default: {None})&#10;        Returns:&#10;            torch.Tensor -- A float tensor of [B, H]&#10;" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uUCs08zCjUhuo" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uzu7CA7uMvyZt" name="message" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u9VTbWeW1mnTh" name=":" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uMogUfqNEBE3t" name="torch.Tensor" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uxXrzX91qFpVf" name="lengths" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u7SwgUQus4Cx2" name=":" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uZ56cOUkQryL7" name="Optional" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uOZutpjZgpkiE" name="[" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="ut2H4o4OBEGuT" name="torch.Tensor" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="umZBc4U3Q269L" name="]" visibility="private" type="u27FcBrsL7fnn" value="None"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uiqRYRR53ZeU4" name="RnnReceiverCompositionality" namespace="Logical_View" comment="    Reinforce Wrapper for Receiver in variable-length message game with several attributes (for compositionality experiments).&#10;    RnnReceiverCompositionality is equivalent to RnnReceiverReinforce but treated each attribute independently.&#10;    This output is assumed to be the tuple of (output, logprob, entropy).&#10;" visibility="public">
       <UML:Classifier.feature>
        <UML:Attribute isSpecification="false" xmi.id="u9R73tXtGh9ZX" name="agent" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uwNvkSc6TfO78" name="n_attributes" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="u2cmDkgys1ewy" name="n_values" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="ugA7gEyIfB3cR" name="encoder" visibility="public" type="urXSNZJSY4yaS" initialValue="(vocab_size,embed_dim,hidden_size,cell,num_layers)"/>
        <UML:Attribute isSpecification="false" xmi.id="us2TXrG2ui6hS" name="hidden_to_output" visibility="public" type="utQukrcRZuKrY" initialValue="(hidden_size,n_attributes*n_values)"/>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uQZwLPFXq0OVt" name="__init__" visibility="public" stereotype="constructor" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uL7TdHQuNs5r7" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uM5Zsf0uHfEL0" name="agent" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uz78UXXDqF8mk" name="vocab_size" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uW9I8ba7hbPJQ" name="embed_dim" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uFWGTtb8ZvB5b" name="hidden_size" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uQjJLuOACKx1G" name="max_len" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u0AR0shlXON06" name="n_attributes" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uSWfsKpNqErvP" name="n_values" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="usNtG74akjbSf" name="cell" visibility="private" type="u27FcBrsL7fnn" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="ueygYPUf7HdIP" name="num_layers" visibility="private" type="uenFS4WYhQUaR" value="1"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uq5eJ7RHx0tjZ" name="forward" comment="entropy=-torch.exp(logits)*logits" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uijSrUwFQDgGd" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uQibg1FcFJGuH" name="message" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u5kowr091CJYP" name="input" visibility="private" type="u27FcBrsL7fnn" value="None"/>
          <UML:Parameter isSpecification="false" xmi.id="uKfUBTWcmoEtr" name="lengths" visibility="private" type="u27FcBrsL7fnn" value="None"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="upvTFWYeRouE9" name="RnnReceiverDeterministic" namespace="Logical_View" comment="    Reinforce Wrapper for a deterministic Receiver in variable-length message game. The wrapper logic feeds the message&#10;    into the cell and calls the wrapped agent with the hidden state that either corresponds to the end-of-sequence&#10;    term or to the end of the sequence. The wrapper extends it with zero-valued log-prob and entropy tensors so that&#10;    the agent becomes compatible with the SenderReceiverRnnReinforce game.&#10;    As the wrapped agent does not sample, it has to be trained via regular back-propagation. This requires that both the&#10;    the agent's output and  loss function and the wrapped agent are differentiable.&#10;    &gt;&gt;&gt; class Agent(nn.Module):&#10;    ...     def __init__(self):&#10;    ...         super().__init__()&#10;    ...         self.fc = nn.Linear(5, 3)&#10;    ...     def forward(self, rnn_output, _input = None):&#10;    ...         return self.fc(rnn_output)&#10;    &gt;&gt;&gt; agent = RnnReceiverDeterministic(Agent(), vocab_size=10, embed_dim=10, hidden_size=5)&#10;    &gt;&gt;&gt; message = torch.zeros((16, 10)).long().random_(0, 10)  # batch of 16, 10 symbol length&#10;    &gt;&gt;&gt; output, logits, entropy = agent(message)&#10;    &gt;&gt;&gt; (logits == 0).all().item()&#10;    1&#10;    &gt;&gt;&gt; (entropy == 0).all().item()&#10;    1&#10;    &gt;&gt;&gt; output.size()&#10;    torch.Size([16, 3])&#10;" visibility="public">
       <UML:Classifier.feature>
        <UML:Attribute isSpecification="false" xmi.id="uXq3c78f1eoI2" name="agent" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uQt3XrfugNU0d" name="encoder" visibility="public" type="urXSNZJSY4yaS" initialValue="(vocab_size,embed_dim,hidden_size,cell,num_layers)"/>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="u86PitKDIgk0j" name="__init__" visibility="public" stereotype="constructor" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uEWjA8VNkiqJF" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uh6tu4nR7UHML" name="agent" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uShi3R7tbQt07" name="vocab_size" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="ukzbjdVM0B1dX" name="embed_dim" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u77qRuy8h5cv4" name="hidden_size" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uX1cKlkazHqLy" name="cell" visibility="private" type="u27FcBrsL7fnn" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uOFOr7P0Ji6lY" name="num_layers" visibility="private" type="uenFS4WYhQUaR" value="1"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uktbhV0onRhy0" name="forward" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="ujuW40PSmbzQP" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uX4soXvRGXE4a" name="message" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uYwg9RIXA9bmd" name="input" visibility="private" type="u27FcBrsL7fnn" value="None"/>
          <UML:Parameter isSpecification="false" xmi.id="ugQGzhjpbr28E" name="lengths" visibility="private" type="u27FcBrsL7fnn" value="None"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="u640GIhdzSsWO" name="RnnReceiverImpatient" namespace="Logical_View" comment="    Impatient Listener.&#10;    The wrapper logic feeds the message into the cell and calls the wrapped agent.&#10;    The wrapped agent has to returns the intermediate hidden states for every position.&#10;    All the hidden states are mapped to a categorical distribution with a single&#10;    Linear layer (hidden_to_ouput) followed by a softmax.&#10;    Thess categorical probabilities (step_logits) will then be used to compute the Impatient loss function.&#10;" visibility="public">
       <UML:Classifier.feature>
        <UML:Attribute isSpecification="false" xmi.id="uu65kpluWSQ7f" name="max_len" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uGFb8k2ICTF57" name="hidden_to_output" visibility="public" type="utQukrcRZuKrY" initialValue="(hidden_size,n_features)"/>
        <UML:Attribute isSpecification="false" xmi.id="uaFzV41iJxZw1" name="encoder" visibility="public" type="u08XfPKrjDA8q" initialValue="(vocab_size,embed_dim,hidden_size,cell,num_layers)"/>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uyw22tiH9iV38" name="__init__" visibility="public" stereotype="constructor" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="urJ7obo6NrjPp" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="u5e8VdFtJVx4O" name="agent" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uYqSF7iqxAqG8" name="vocab_size" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u0clZwWJeny3A" name="embed_dim" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uk2xLkwzA52S4" name="hidden_size" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uAxW0m2drOkle" name="max_len" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uvEfudGNwtRvn" name="n_features" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u908U6AamPrdr" name="cell" visibility="private" type="u27FcBrsL7fnn" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uGNogmrFCocGq" name="num_layers" visibility="private" type="uenFS4WYhQUaR" value="1"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="u6GikOriDlwYR" name="forward" comment=" Sampling useless ?" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uQZQ7gyj6M1WL" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uiE8MqD5LesNS" name="message" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uZ8CUgiRZbAnB" name="input" visibility="private" type="u27FcBrsL7fnn" value="None"/>
          <UML:Parameter isSpecification="false" xmi.id="uoxFRhCL7Lkxo" name="lengths" visibility="private" type="u27FcBrsL7fnn" value="None"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="u08XfPKrjDA8q" name="RnnEncoderImpatient" namespace="Logical_View" comment="    RNN implementation that returns all the intermediate input states (used for Impatient Listener).&#10;    &#10;    Feeds a sequence into an RNN (vanilla RNN, GRU, LSTM) cell and returns a vector representation&#10;    of it for each reading position: it returns the hidden states of all the intermediate positions.&#10;    Assumes that the eos token has the id equal to 0.&#10;" visibility="public">
       <UML:Classifier.feature>
        <UML:Attribute isSpecification="false" xmi.id="u4fLcT7M9giuI" name="cell" visibility="public" ownerScope="classifier" type="ubO6w4XzG3guO" initialValue="()"/>
        <UML:Attribute isSpecification="false" xmi.id="uOuXTi0N0zMlH" name="cell_types" visibility="public" ownerScope="classifier" type="u9ApBEDyvrqN5" initialValue="{'rnn':nn.RNN,'gru':nn.GRU,'lstm':nn.LSTM}"/>
        <UML:Attribute isSpecification="false" xmi.id="uUnwOlZayxrQw" name="hidden_size" visibility="public" ownerScope="classifier" type="u27FcBrsL7fnn"/>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uyyl4Mq8SFadV" name="__init__" comment="        Arguments:&#10;            vocab_size {int} -- The size of the input vocabulary (including eos)&#10;            embed_dim {int} -- Dimensionality of the embeddings&#10;            n_hidden {int} -- Dimensionality of the cell's hidden state&#10;        Keyword Arguments:&#10;            cell {str} -- Type of the cell ('rnn', 'gru', or 'lstm') (default: {'rnn'})&#10;            num_layers {int} -- Number of the stacked RNN layers (default: {1})&#10;" visibility="public" stereotype="constructor" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uXqnFXK3B8lBe" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="ufGEO1Q8N7GbF" name="vocab_size" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uoZlFMfgo1lGb" name=":" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uMN89Jynuu2E9" name="int" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uQayQqQQlrwTU" name="embed_dim" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="ucygF3lRMuwzn" name=":" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="udeyrltNhleLT" name="int" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uMGpi6wLt0DbV" name="n_hidden" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uhERFZpHHaOzF" name=":" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u5jpEA0CdaAM6" name="int" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uggyk1glZ26Fo" name="cell" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uvyDRZHvtfaOb" name=":" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uPB9ifbFJwJ6y" name="str" visibility="private" type="u27FcBrsL7fnn" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uT8rdKDyGgyH4" name="num_layers" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u1iRYAq8uoQB9" name=":" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u6sX2e0xwcncb" name="int" visibility="private" type="uenFS4WYhQUaR" value="1"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uRctgwpofpAXg" name="forward" comment="Feeds a sequence into an RNN cell and returns the sequence of hidden states.&#10;        Arguments:&#10;            message {torch.Tensor} -- A sequence to be processed, a torch.Tensor of type Long, dimensions [B, T]&#10;        Keyword Arguments:&#10;            lengths {Optional[torch.Tensor]} -- An optional Long tensor with messages' lengths. (default: {None})&#10;        Returns:&#10;            torch.Tensor -- A float tensor of [B, H]&#10;" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uWSyNHdftAE4N" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uoxtdVo16huyV" name="message" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="utlqG5iK4aNJR" name=":" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uSPttbyFxlUvt" name="torch.Tensor" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uwHj4u8nb0H7w" name="lengths" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="udtaUsRaCJ4m8" name=":" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uDLtwyUmt7EYq" name="Optional" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uf0rifnmvBShb" name="[" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="udWdWzp3kyLWb" name="torch.Tensor" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uyGRMm8JtDeqk" name="]" visibility="private" type="u27FcBrsL7fnn" value="None"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="u6rwxJLAnReBm" name="RnnReceiverImpatientCompositionality" namespace="Logical_View" comment="    RnnReceiverImpatientCompositionality is an adaptation of RnnReceiverImpatientCompositionality&#10;    for inputs with several attributes (compositionality experiments).&#10;    Each attribute is treated independently.&#10;" visibility="public">
       <UML:Classifier.feature>
        <UML:Attribute isSpecification="false" xmi.id="uVZAhOH8CrAvf" name="max_len" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uLX7Go7akIK6X" name="n_attributes" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="u9YyqfMxyiIwc" name="n_values" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uoukzjiUdnyUT" name="hidden_to_output" visibility="public" type="utQukrcRZuKrY" initialValue="(hidden_size,n_attributes*n_values)"/>
        <UML:Attribute isSpecification="false" xmi.id="u9vLKmUyfU90k" name="encoder" visibility="public" type="u08XfPKrjDA8q" initialValue="(vocab_size,embed_dim,hidden_size,cell,num_layers)"/>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uoCLIy5drMOFM" name="__init__" visibility="public" stereotype="constructor" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uFN72JXvH01gp" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uw9aL7CPgpVXt" name="agent" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uJgKr8qUe6H4D" name="vocab_size" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="upwky7AgqLxPi" name="embed_dim" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="ugyQ0CdSOl7Ew" name="hidden_size" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uOvEGpDbCbThi" name="max_len" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="ucDReHuvsRqoS" name="n_attributes" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uhK8oUQV2K2Mv" name="n_values" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u3sRx87ulxZJh" name="cell" visibility="private" type="u27FcBrsL7fnn" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="upJeufXM1mfSD" name="num_layers" visibility="private" type="uenFS4WYhQUaR" value="1"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="ui8RoPxU6ee4f" name="forward" comment="logits = torch.stack(logits).permute(1, 0)entropy = torch.stack(entropy).permute(1, 0)class RnnReceiverImpatient2(nn.Module):    &quot;&quot;&quot;    Impatient listener    &quot;&quot;&quot;    def __init__(self, agent, vocab_size, embed_dim, hidden_size, max_len, n_features, num_layers=1, cell='rnn'):        &quot;&quot;&quot;        :param agent: the agent to be wrapped        :param vocab_size: the communication vocabulary size        :param embed_dim: the size of the embedding used to embed the output symbols        :param hidden_size: the RNN cell's hidden state size        :param max_len: maximal length of the output messages        :param cell: type of the cell used (rnn, gru, lstm)        :param force_eos: if set to True, each message is extended by an EOS symbol. To ensure that no message goes        beyond `max_len`, Sender only generates `max_len - 1` symbols from an RNN cell and appends EOS.        &quot;&quot;&quot;        super(RnnReceiverImpatient, self).__init__()        self.agent = agent        self.max_len = max_len        self.hidden_to_output = [nn.Linear(hidden_size, n_features).to(&quot;cuda&quot;)]*self.max_len        self.embedding = nn.Embedding(vocab_size, embed_dim)        self.sos_embedding = nn.Parameter(torch.zeros(embed_dim))        self.embed_dim = embed_dim        self.vocab_size = vocab_size        self.num_layers = num_layers        self.cells = None        cell = cell.lower()        cell_types = {'rnn': nn.RNNCell, 'gru': nn.GRUCell, 'lstm': nn.LSTMCell}        if cell not in cell_types:            raise ValueError(f&quot;Unknown RNN Cell: {cell}&quot;)        cell_type = cell_types[cell]        self.cells = nn.ModuleList([            cell_type(input_size=embed_dim, hidden_size=hidden_size) if i == 0 else \            cell_type(input_size=hidden_size, hidden_size=hidden_size) for i in range(self.num_layers)])        self.reset_parameters()    def reset_parameters(self):        nn.init.normal_(self.sos_embedding, 0.0, 0.01)    def forward(self, message, input, message_lengths=0):        from_sym_to_onehot=torch.eye(self.vocab_size,self.vocab_size).to(&quot;cuda&quot;)        prev_hidden = [self.agent(from_sym_to_onehot[message[:,0]],input)]        prev_hidden.extend([torch.zeros_like(prev_hidden[0]) for _ in range(self.num_layers - 1)])        prev_c = [torch.zeros_like(prev_hidden[0]) for _ in range(self.num_layers)]  # only used for LSTM        input = torch.stack([self.sos_embedding] * from_sym_to_onehot[message[0]].size(0))        sequence = []        logits = []        entropy = []        for step in range(self.max_len):            input = torch.stack([self.sos_embedding] * from_sym_to_onehot[message[:,step]].size(0))            for i, layer in enumerate(self.cells):                if isinstance(layer, nn.LSTMCell):                    h_t, c_t = layer(input, (prev_hidden[i], prev_c[i]))                    prev_c[i] = c_t                else:                    h_t = layer(input, prev_hidden[i])                prev_hidden[i] = h_t                input = h_t            step_logits = F.log_softmax(self.hidden_to_output[step](h_t), dim=1)            distr = Categorical(logits=step_logits)            entropy.append(distr.entropy())            if self.training:                x = distr.sample()            else:                x = step_logits.argmax(dim=1)            logits.append(distr.log_prob(x))            sequence.append(step_logits)        sequence = torch.stack(sequence).permute(1, 0, 2)        logits = torch.stack(logits).permute(1, 0)        entropy = torch.stack(entropy).permute(1, 0)        return sequence, logits, entropy" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uof2oYgAGn58Z" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="u9aLMggP7rsXe" name="message" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uvelsFehDJrH2" name="input" visibility="private" type="u27FcBrsL7fnn" value="None"/>
          <UML:Parameter isSpecification="false" xmi.id="uyA3JdToSQ804" name="lengths" visibility="private" type="u27FcBrsL7fnn" value="None"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uSSnPGBge6Wsv" name="SenderReceiverRnnReinforce" namespace="Logical_View" comment="    Implements Sender/Receiver game with training done via Reinforce. Both agents are supposed to&#10;    return 3-tuples of (output, log-prob of the output, entropy).&#10;    The game implementation is responsible for handling the end-of-sequence term, so that the optimized loss&#10;    corresponds either to the position of the eos term (assumed to be 0) or the end of sequence.&#10;    Sender and Receiver can be obtained by applying the corresponding wrappers.&#10;    `SenderReceiverRnnReinforce` also applies the mean baseline to the loss function to reduce the variance of the&#10;    gradient estimate.&#10;    &gt;&gt;&gt; sender = nn.Linear(3, 10)&#10;    &gt;&gt;&gt; sender = RnnSenderReinforce(sender, vocab_size=15, embed_dim=5, hidden_size=10, max_len=10, cell='lstm')&#10;    &gt;&gt;&gt; class Receiver(nn.Module):&#10;    ...     def __init__(self):&#10;    ...         super().__init__()&#10;    ...         self.fc = nn.Linear(5, 3)&#10;    ...     def forward(self, rnn_output, _input = None):&#10;    ...         return self.fc(rnn_output)&#10;    &gt;&gt;&gt; receiver = RnnReceiverDeterministic(Receiver(), vocab_size=15, embed_dim=10, hidden_size=5)&#10;    &gt;&gt;&gt; def loss(sender_input, _message, _receiver_input, receiver_output, _labels):&#10;    ...     return F.mse_loss(sender_input, receiver_output, reduction='none').mean(dim=1), {'aux': 5.0}&#10;    &gt;&gt;&gt; game = SenderReceiverRnnReinforce(sender, receiver, loss, sender_entropy_coeff=0.0, receiver_entropy_coeff=0.0,&#10;    ...                                   length_cost=1e-2)&#10;    &gt;&gt;&gt; input = torch.zeros((16, 3)).normal_()&#10;    &gt;&gt;&gt; optimized_loss, aux_info = game(input, labels=None)&#10;    &gt;&gt;&gt; sorted(list(aux_info.keys()))  # returns some debug info, such as entropies of the agents, message length etc&#10;    ['aux', 'loss', 'mean_length', 'original_loss', 'receiver_entropy', 'sender_entropy']&#10;    &gt;&gt;&gt; aux_info['aux']&#10;    5.0&#10;" visibility="public">
       <UML:Classifier.feature>
        <UML:Attribute isSpecification="false" xmi.id="uf8g5P9zzvqST" name="sender" comment=":param sender: sender agent&#10;:param receiver: receiver agent&#10;:param loss:  the optimized loss that accepts&#10;sender_input: input of Sender&#10;message: the is sent by Sender&#10;receiver_input: input of Receiver from the dataset&#10;receiver_output: output of Receiver&#10;labels: labels assigned to Sender's input data&#10;and outputs a tuple of (1) a loss tensor of shape (batch size, 1) (2) the dict with auxiliary information&#10;of the same shape. The loss will be minimized during training, and the auxiliary information aggregated over&#10;all batches in the dataset.&#10;:param sender_entropy_coeff: entropy regularization coeff for sender&#10;:param receiver_entropy_coeff: entropy regularization coeff for receiver&#10;:param length_cost: the penalty applied to Sender for each symbol produced&#10;:param reg: apply the regularization scheduling (Lazy Speaker)&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="ubLrZ7tGl2ILw" name="receiver" comment=":param sender: sender agent&#10;:param receiver: receiver agent&#10;:param loss:  the optimized loss that accepts&#10;sender_input: input of Sender&#10;message: the is sent by Sender&#10;receiver_input: input of Receiver from the dataset&#10;receiver_output: output of Receiver&#10;labels: labels assigned to Sender's input data&#10;and outputs a tuple of (1) a loss tensor of shape (batch size, 1) (2) the dict with auxiliary information&#10;of the same shape. The loss will be minimized during training, and the auxiliary information aggregated over&#10;all batches in the dataset.&#10;:param sender_entropy_coeff: entropy regularization coeff for sender&#10;:param receiver_entropy_coeff: entropy regularization coeff for receiver&#10;:param length_cost: the penalty applied to Sender for each symbol produced&#10;:param reg: apply the regularization scheduling (Lazy Speaker)&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uM1Of6tFAlj7n" name="sender_entropy_coeff" comment=":param sender: sender agent&#10;:param receiver: receiver agent&#10;:param loss:  the optimized loss that accepts&#10;sender_input: input of Sender&#10;message: the is sent by Sender&#10;receiver_input: input of Receiver from the dataset&#10;receiver_output: output of Receiver&#10;labels: labels assigned to Sender's input data&#10;and outputs a tuple of (1) a loss tensor of shape (batch size, 1) (2) the dict with auxiliary information&#10;of the same shape. The loss will be minimized during training, and the auxiliary information aggregated over&#10;all batches in the dataset.&#10;:param sender_entropy_coeff: entropy regularization coeff for sender&#10;:param receiver_entropy_coeff: entropy regularization coeff for receiver&#10;:param length_cost: the penalty applied to Sender for each symbol produced&#10;:param reg: apply the regularization scheduling (Lazy Speaker)&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uRarWgAfppXIP" name="receiver_entropy_coeff" comment=":param sender: sender agent&#10;:param receiver: receiver agent&#10;:param loss:  the optimized loss that accepts&#10;sender_input: input of Sender&#10;message: the is sent by Sender&#10;receiver_input: input of Receiver from the dataset&#10;receiver_output: output of Receiver&#10;labels: labels assigned to Sender's input data&#10;and outputs a tuple of (1) a loss tensor of shape (batch size, 1) (2) the dict with auxiliary information&#10;of the same shape. The loss will be minimized during training, and the auxiliary information aggregated over&#10;all batches in the dataset.&#10;:param sender_entropy_coeff: entropy regularization coeff for sender&#10;:param receiver_entropy_coeff: entropy regularization coeff for receiver&#10;:param length_cost: the penalty applied to Sender for each symbol produced&#10;:param reg: apply the regularization scheduling (Lazy Speaker)&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uEvffrElu0sgd" name="loss" comment=":param sender: sender agent&#10;:param receiver: receiver agent&#10;:param loss:  the optimized loss that accepts&#10;sender_input: input of Sender&#10;message: the is sent by Sender&#10;receiver_input: input of Receiver from the dataset&#10;receiver_output: output of Receiver&#10;labels: labels assigned to Sender's input data&#10;and outputs a tuple of (1) a loss tensor of shape (batch size, 1) (2) the dict with auxiliary information&#10;of the same shape. The loss will be minimized during training, and the auxiliary information aggregated over&#10;all batches in the dataset.&#10;:param sender_entropy_coeff: entropy regularization coeff for sender&#10;:param receiver_entropy_coeff: entropy regularization coeff for receiver&#10;:param length_cost: the penalty applied to Sender for each symbol produced&#10;:param reg: apply the regularization scheduling (Lazy Speaker)&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="unBrxRXmAZQWW" name="length_cost" comment=":param sender: sender agent&#10;:param receiver: receiver agent&#10;:param loss:  the optimized loss that accepts&#10;sender_input: input of Sender&#10;message: the is sent by Sender&#10;receiver_input: input of Receiver from the dataset&#10;receiver_output: output of Receiver&#10;labels: labels assigned to Sender's input data&#10;and outputs a tuple of (1) a loss tensor of shape (batch size, 1) (2) the dict with auxiliary information&#10;of the same shape. The loss will be minimized during training, and the auxiliary information aggregated over&#10;all batches in the dataset.&#10;:param sender_entropy_coeff: entropy regularization coeff for sender&#10;:param receiver_entropy_coeff: entropy regularization coeff for receiver&#10;:param length_cost: the penalty applied to Sender for each symbol produced&#10;:param reg: apply the regularization scheduling (Lazy Speaker)&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="ui8EWL50Zrnkl" name="unigram_penalty" comment=":param sender: sender agent&#10;:param receiver: receiver agent&#10;:param loss:  the optimized loss that accepts&#10;sender_input: input of Sender&#10;message: the is sent by Sender&#10;receiver_input: input of Receiver from the dataset&#10;receiver_output: output of Receiver&#10;labels: labels assigned to Sender's input data&#10;and outputs a tuple of (1) a loss tensor of shape (batch size, 1) (2) the dict with auxiliary information&#10;of the same shape. The loss will be minimized during training, and the auxiliary information aggregated over&#10;all batches in the dataset.&#10;:param sender_entropy_coeff: entropy regularization coeff for sender&#10;:param receiver_entropy_coeff: entropy regularization coeff for receiver&#10;:param length_cost: the penalty applied to Sender for each symbol produced&#10;:param reg: apply the regularization scheduling (Lazy Speaker)&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uyFAqArbGBhSL" name="mean_baseline" comment=":param sender: sender agent&#10;:param receiver: receiver agent&#10;:param loss:  the optimized loss that accepts&#10;sender_input: input of Sender&#10;message: the is sent by Sender&#10;receiver_input: input of Receiver from the dataset&#10;receiver_output: output of Receiver&#10;labels: labels assigned to Sender's input data&#10;and outputs a tuple of (1) a loss tensor of shape (batch size, 1) (2) the dict with auxiliary information&#10;of the same shape. The loss will be minimized during training, and the auxiliary information aggregated over&#10;all batches in the dataset.&#10;:param sender_entropy_coeff: entropy regularization coeff for sender&#10;:param receiver_entropy_coeff: entropy regularization coeff for receiver&#10;:param length_cost: the penalty applied to Sender for each symbol produced&#10;:param reg: apply the regularization scheduling (Lazy Speaker)&#10;" visibility="public" type="us0LnAGmSsTJZ" initialValue="(float)"/>
        <UML:Attribute isSpecification="false" xmi.id="uJBzt77Meuf4F" name="n_points" comment=":param sender: sender agent&#10;:param receiver: receiver agent&#10;:param loss:  the optimized loss that accepts&#10;sender_input: input of Sender&#10;message: the is sent by Sender&#10;receiver_input: input of Receiver from the dataset&#10;receiver_output: output of Receiver&#10;labels: labels assigned to Sender's input data&#10;and outputs a tuple of (1) a loss tensor of shape (batch size, 1) (2) the dict with auxiliary information&#10;of the same shape. The loss will be minimized during training, and the auxiliary information aggregated over&#10;all batches in the dataset.&#10;:param sender_entropy_coeff: entropy regularization coeff for sender&#10;:param receiver_entropy_coeff: entropy regularization coeff for receiver&#10;:param length_cost: the penalty applied to Sender for each symbol produced&#10;:param reg: apply the regularization scheduling (Lazy Speaker)&#10;" visibility="public" type="us0LnAGmSsTJZ" initialValue="(float)"/>
        <UML:Attribute isSpecification="false" xmi.id="uhMs8q4K9OmwN" name="reg" comment=":param sender: sender agent&#10;:param receiver: receiver agent&#10;:param loss:  the optimized loss that accepts&#10;sender_input: input of Sender&#10;message: the is sent by Sender&#10;receiver_input: input of Receiver from the dataset&#10;receiver_output: output of Receiver&#10;labels: labels assigned to Sender's input data&#10;and outputs a tuple of (1) a loss tensor of shape (batch size, 1) (2) the dict with auxiliary information&#10;of the same shape. The loss will be minimized during training, and the auxiliary information aggregated over&#10;all batches in the dataset.&#10;:param sender_entropy_coeff: entropy regularization coeff for sender&#10;:param receiver_entropy_coeff: entropy regularization coeff for receiver&#10;:param length_cost: the penalty applied to Sender for each symbol produced&#10;:param reg: apply the regularization scheduling (Lazy Speaker)&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uPbJnYJDvXmMp" name="__init__" comment="        :param sender: sender agent&#10;        :param receiver: receiver agent&#10;        :param loss:  the optimized loss that accepts&#10;            sender_input: input of Sender&#10;            message: the is sent by Sender&#10;            receiver_input: input of Receiver from the dataset&#10;            receiver_output: output of Receiver&#10;            labels: labels assigned to Sender's input data&#10;          and outputs a tuple of (1) a loss tensor of shape (batch size, 1) (2) the dict with auxiliary information&#10;          of the same shape. The loss will be minimized during training, and the auxiliary information aggregated over&#10;          all batches in the dataset.&#10;        :param sender_entropy_coeff: entropy regularization coeff for sender&#10;        :param receiver_entropy_coeff: entropy regularization coeff for receiver&#10;        :param length_cost: the penalty applied to Sender for each symbol produced&#10;        :param reg: apply the regularization scheduling (Lazy Speaker)&#10;" visibility="public" stereotype="constructor" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="ull4NOdpe3tCu" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uhCtUBOM37pJB" name="sender" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u6vyewVHQyA6M" name="receiver" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="utzaECPv5a1Cj" name="loss" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="ubqw89VXGPeSz" name="sender_entropy_coeff" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uLBR6ZG0o0uuM" name="receiver_entropy_coeff" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="ueaArLs4jBjNE" name=";" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uorAXlbSiJGfJ" name="length_cost" visibility="private" type="uvBhCm6WK8jRM" value="0.0"/>
          <UML:Parameter isSpecification="false" xmi.id="u5JgOsflaNu5X" name="unigram_penalty" visibility="private" type="uvBhCm6WK8jRM" value="0.0"/>
          <UML:Parameter isSpecification="false" xmi.id="uBysDc0m0GqqB" name="reg" visibility="private" type="uR4u51QglJUwu" value="False"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="ugWK3qUzCe9Wn" name="forward" comment=" the entropy of the outputs of S before and including the eos symbol - as we don't care about what's after the log prob of the choices made by S before and including the eos symbol - again, we don't care about the rest Pour n_features=100self.length_cost= sc**(45) / 10if sc&gt;0.99:self.length_cost=(sc-0.99)*100 +0.01else:self.length_cost=0.if sc&gt;0.995:self.length_cost+=0.01if self.length_cost==0.3:      self.length_cost-=0.01print(self.length_cost)if sc&lt;0.98:self.length_cost=0. if the receiver is deterministic/differentiable, we apply the actual loss" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="urhnbOcGhDonO" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uq4yUzGYon1DH" name="sender_input" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u4ZZYuKlhiFcb" name="labels" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="utIfUkiKApMRM" name="receiver_input" visibility="private" type="u27FcBrsL7fnn" value="None"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uiUDyHUHx2bdS" name="update_baseline" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uxSUa77N8QAtV" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="ug4OEEsVb8sIK" name="name" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uSs90NtgnyOFT" name="value" visibility="private" type="uUffSdhSc9MEm" value=""/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="us0LnAGmSsTJZ" name="defaultdict" namespace="Logical_View" visibility="public"/>
      <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uBYWpuukh3wTs" name="SenderImpatientReceiverRnnReinforce" namespace="Logical_View" comment="    Implements Sender/ Impatient Receiver game with training done via Reinforce.&#10;    It is equivalent to SenderReceiverRnnReinforce but takes into account the intermediate predictions of Impatient Listener:&#10;    - the Impatient loss is used&#10;    - tensor shapes are adapted for variance reduction.&#10;    When reg is set to True, the regularization scheduling is applied (Lazy Speaker).&#10;" visibility="public">
       <UML:Classifier.feature>
        <UML:Attribute isSpecification="false" xmi.id="ulI9lQEVswYc2" name="sender" comment=":param sender: sender agent&#10;:param receiver: receiver agent&#10;:param loss:  the optimized loss that accepts&#10;sender_input: input of Sender&#10;message: the is sent by Sender&#10;receiver_input: input of Receiver from the dataset&#10;receiver_output: output of Receiver&#10;labels: labels assigned to Sender's input data&#10;and outputs a tuple of (1) a loss tensor of shape (batch size, 1) (2) the dict with auxiliary information&#10;of the same shape. The loss will be minimized during training, and the auxiliary information aggregated over&#10;all batches in the dataset.&#10;:param sender_entropy_coeff: entropy regularization coeff for sender&#10;:param receiver_entropy_coeff: entropy regularization coeff for receiver&#10;:param length_cost: the penalty applied to Sender for each symbol produced&#10;:param reg: apply the regularization scheduling (Lazy Speaker)&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="umLf5RSvmJpX0" name="receiver" comment=":param sender: sender agent&#10;:param receiver: receiver agent&#10;:param loss:  the optimized loss that accepts&#10;sender_input: input of Sender&#10;message: the is sent by Sender&#10;receiver_input: input of Receiver from the dataset&#10;receiver_output: output of Receiver&#10;labels: labels assigned to Sender's input data&#10;and outputs a tuple of (1) a loss tensor of shape (batch size, 1) (2) the dict with auxiliary information&#10;of the same shape. The loss will be minimized during training, and the auxiliary information aggregated over&#10;all batches in the dataset.&#10;:param sender_entropy_coeff: entropy regularization coeff for sender&#10;:param receiver_entropy_coeff: entropy regularization coeff for receiver&#10;:param length_cost: the penalty applied to Sender for each symbol produced&#10;:param reg: apply the regularization scheduling (Lazy Speaker)&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uWjC1VAFHIpcz" name="sender_entropy_coeff" comment=":param sender: sender agent&#10;:param receiver: receiver agent&#10;:param loss:  the optimized loss that accepts&#10;sender_input: input of Sender&#10;message: the is sent by Sender&#10;receiver_input: input of Receiver from the dataset&#10;receiver_output: output of Receiver&#10;labels: labels assigned to Sender's input data&#10;and outputs a tuple of (1) a loss tensor of shape (batch size, 1) (2) the dict with auxiliary information&#10;of the same shape. The loss will be minimized during training, and the auxiliary information aggregated over&#10;all batches in the dataset.&#10;:param sender_entropy_coeff: entropy regularization coeff for sender&#10;:param receiver_entropy_coeff: entropy regularization coeff for receiver&#10;:param length_cost: the penalty applied to Sender for each symbol produced&#10;:param reg: apply the regularization scheduling (Lazy Speaker)&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uTHdO4jMD8juX" name="receiver_entropy_coeff" comment=":param sender: sender agent&#10;:param receiver: receiver agent&#10;:param loss:  the optimized loss that accepts&#10;sender_input: input of Sender&#10;message: the is sent by Sender&#10;receiver_input: input of Receiver from the dataset&#10;receiver_output: output of Receiver&#10;labels: labels assigned to Sender's input data&#10;and outputs a tuple of (1) a loss tensor of shape (batch size, 1) (2) the dict with auxiliary information&#10;of the same shape. The loss will be minimized during training, and the auxiliary information aggregated over&#10;all batches in the dataset.&#10;:param sender_entropy_coeff: entropy regularization coeff for sender&#10;:param receiver_entropy_coeff: entropy regularization coeff for receiver&#10;:param length_cost: the penalty applied to Sender for each symbol produced&#10;:param reg: apply the regularization scheduling (Lazy Speaker)&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="umHNEtMHKHyl4" name="loss" comment=":param sender: sender agent&#10;:param receiver: receiver agent&#10;:param loss:  the optimized loss that accepts&#10;sender_input: input of Sender&#10;message: the is sent by Sender&#10;receiver_input: input of Receiver from the dataset&#10;receiver_output: output of Receiver&#10;labels: labels assigned to Sender's input data&#10;and outputs a tuple of (1) a loss tensor of shape (batch size, 1) (2) the dict with auxiliary information&#10;of the same shape. The loss will be minimized during training, and the auxiliary information aggregated over&#10;all batches in the dataset.&#10;:param sender_entropy_coeff: entropy regularization coeff for sender&#10;:param receiver_entropy_coeff: entropy regularization coeff for receiver&#10;:param length_cost: the penalty applied to Sender for each symbol produced&#10;:param reg: apply the regularization scheduling (Lazy Speaker)&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="umoCW4DfQgRLG" name="length_cost" comment=":param sender: sender agent&#10;:param receiver: receiver agent&#10;:param loss:  the optimized loss that accepts&#10;sender_input: input of Sender&#10;message: the is sent by Sender&#10;receiver_input: input of Receiver from the dataset&#10;receiver_output: output of Receiver&#10;labels: labels assigned to Sender's input data&#10;and outputs a tuple of (1) a loss tensor of shape (batch size, 1) (2) the dict with auxiliary information&#10;of the same shape. The loss will be minimized during training, and the auxiliary information aggregated over&#10;all batches in the dataset.&#10;:param sender_entropy_coeff: entropy regularization coeff for sender&#10;:param receiver_entropy_coeff: entropy regularization coeff for receiver&#10;:param length_cost: the penalty applied to Sender for each symbol produced&#10;:param reg: apply the regularization scheduling (Lazy Speaker)&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uKyqxtvUvVF7I" name="unigram_penalty" comment=":param sender: sender agent&#10;:param receiver: receiver agent&#10;:param loss:  the optimized loss that accepts&#10;sender_input: input of Sender&#10;message: the is sent by Sender&#10;receiver_input: input of Receiver from the dataset&#10;receiver_output: output of Receiver&#10;labels: labels assigned to Sender's input data&#10;and outputs a tuple of (1) a loss tensor of shape (batch size, 1) (2) the dict with auxiliary information&#10;of the same shape. The loss will be minimized during training, and the auxiliary information aggregated over&#10;all batches in the dataset.&#10;:param sender_entropy_coeff: entropy regularization coeff for sender&#10;:param receiver_entropy_coeff: entropy regularization coeff for receiver&#10;:param length_cost: the penalty applied to Sender for each symbol produced&#10;:param reg: apply the regularization scheduling (Lazy Speaker)&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uPdzy0HRZRKI9" name="reg" comment=":param sender: sender agent&#10;:param receiver: receiver agent&#10;:param loss:  the optimized loss that accepts&#10;sender_input: input of Sender&#10;message: the is sent by Sender&#10;receiver_input: input of Receiver from the dataset&#10;receiver_output: output of Receiver&#10;labels: labels assigned to Sender's input data&#10;and outputs a tuple of (1) a loss tensor of shape (batch size, 1) (2) the dict with auxiliary information&#10;of the same shape. The loss will be minimized during training, and the auxiliary information aggregated over&#10;all batches in the dataset.&#10;:param sender_entropy_coeff: entropy regularization coeff for sender&#10;:param receiver_entropy_coeff: entropy regularization coeff for receiver&#10;:param length_cost: the penalty applied to Sender for each symbol produced&#10;:param reg: apply the regularization scheduling (Lazy Speaker)&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uURiDp3kjNZjz" name="mean_baseline" comment=":param sender: sender agent&#10;:param receiver: receiver agent&#10;:param loss:  the optimized loss that accepts&#10;sender_input: input of Sender&#10;message: the is sent by Sender&#10;receiver_input: input of Receiver from the dataset&#10;receiver_output: output of Receiver&#10;labels: labels assigned to Sender's input data&#10;and outputs a tuple of (1) a loss tensor of shape (batch size, 1) (2) the dict with auxiliary information&#10;of the same shape. The loss will be minimized during training, and the auxiliary information aggregated over&#10;all batches in the dataset.&#10;:param sender_entropy_coeff: entropy regularization coeff for sender&#10;:param receiver_entropy_coeff: entropy regularization coeff for receiver&#10;:param length_cost: the penalty applied to Sender for each symbol produced&#10;:param reg: apply the regularization scheduling (Lazy Speaker)&#10;" visibility="public" type="us0LnAGmSsTJZ" initialValue="(float)"/>
        <UML:Attribute isSpecification="false" xmi.id="ulH1d0MFIUmWs" name="n_points" comment=":param sender: sender agent&#10;:param receiver: receiver agent&#10;:param loss:  the optimized loss that accepts&#10;sender_input: input of Sender&#10;message: the is sent by Sender&#10;receiver_input: input of Receiver from the dataset&#10;receiver_output: output of Receiver&#10;labels: labels assigned to Sender's input data&#10;and outputs a tuple of (1) a loss tensor of shape (batch size, 1) (2) the dict with auxiliary information&#10;of the same shape. The loss will be minimized during training, and the auxiliary information aggregated over&#10;all batches in the dataset.&#10;:param sender_entropy_coeff: entropy regularization coeff for sender&#10;:param receiver_entropy_coeff: entropy regularization coeff for receiver&#10;:param length_cost: the penalty applied to Sender for each symbol produced&#10;:param reg: apply the regularization scheduling (Lazy Speaker)&#10;" visibility="public" type="us0LnAGmSsTJZ" initialValue="(float)"/>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="ul0bAPao7OL6f" name="__init__" comment="        :param sender: sender agent&#10;        :param receiver: receiver agent&#10;        :param loss:  the optimized loss that accepts&#10;            sender_input: input of Sender&#10;            message: the is sent by Sender&#10;            receiver_input: input of Receiver from the dataset&#10;            receiver_output: output of Receiver&#10;            labels: labels assigned to Sender's input data&#10;          and outputs a tuple of (1) a loss tensor of shape (batch size, 1) (2) the dict with auxiliary information&#10;          of the same shape. The loss will be minimized during training, and the auxiliary information aggregated over&#10;          all batches in the dataset.&#10;        :param sender_entropy_coeff: entropy regularization coeff for sender&#10;        :param receiver_entropy_coeff: entropy regularization coeff for receiver&#10;        :param length_cost: the penalty applied to Sender for each symbol produced&#10;        :param reg: apply the regularization scheduling (Lazy Speaker)&#10;" visibility="public" stereotype="constructor" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uOEI6Gw3XsbzJ" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="ugE1Pu8Dn739Y" name="sender" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uZzOVDFoUulnn" name="receiver" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uJKOroGRVuWOX" name="loss" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uDdrrH2hxc5nt" name="sender_entropy_coeff" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="ug9B7jUzjI69W" name="receiver_entropy_coeff" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uIG932bs2KudB" name=";" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uQLwJKzqD2ZIn" name="length_cost" visibility="private" type="uvBhCm6WK8jRM" value="0.0"/>
          <UML:Parameter isSpecification="false" xmi.id="uFPwRUtxREVWK" name="unigram_penalty" visibility="private" type="uvBhCm6WK8jRM" value="0.0"/>
          <UML:Parameter isSpecification="false" xmi.id="u471xwN5rqZ5k" name="reg" visibility="private" type="uR4u51QglJUwu" value="False"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="ugrENKg3r09lb" name="forward" comment=" If impatient 1NOISE VERSION&#10;        # Randomly takes a position&#10;        rand_length=np.random.randint(0,message.size(1))&#10;        # Loss by output&#10;        loss, rest = self.loss(sender_input, message, receiver_input, receiver_output[:,rand_length,:], labels)&#10;        # the entropy of the outputs of S before and including the eos symbol - as we don't care about what's after&#10;        effective_entropy_s = torch.zeros_like(entropy_r[:,rand_length])&#10;        # the log prob of the choices made by S before and including the eos symbol - again, we don't&#10;        # care about the rest&#10;        effective_log_prob_s = torch.zeros_like(log_prob_r[:,rand_length])&#10;Loss the entropy of the outputs of S before and including the eos symbol - as we don't care about what's after the log prob of the choices made by S before and including the eos symbol - again, we don't care about the rest Regularization scheduling paperself.length_cost= sc**(45) / 10 Pour n_features=100 if the receiver is deterministic/differentiable, we apply the actual loss" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="u6HmBb3W7ROqQ" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uwICyGORZ9d4X" name="sender_input" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uzG3wIAchy7Kb" name="labels" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uRQZIrBEddAIX" name="receiver_input" visibility="private" type="u27FcBrsL7fnn" value="None"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uJ8ZzVbJGFhvm" name="update_baseline" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uX7Yvkx0Z6GId" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uV80FgPIY1e5c" name="name" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uZykwfzWt2Ato" name="value" visibility="private" type="uUffSdhSc9MEm" value=""/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uQgj2DQKRlkip" name="CompositionalitySenderReceiverRnnReinforce" namespace="Logical_View" comment="    Adaptation of SenderReceiverRnnReinforce to inputs with several attributes.&#10;" visibility="public">
       <UML:Classifier.feature>
        <UML:Attribute isSpecification="false" xmi.id="uvPXbjTqV713u" name="sender" comment=":param sender: sender agent&#10;:param receiver: receiver agent&#10;:param loss:  the optimized loss that accepts&#10;sender_input: input of Sender&#10;message: the is sent by Sender&#10;receiver_input: input of Receiver from the dataset&#10;receiver_output: output of Receiver&#10;labels: labels assigned to Sender's input data&#10;and outputs a tuple of (1) a loss tensor of shape (batch size, 1) (2) the dict with auxiliary information&#10;of the same shape. The loss will be minimized during training, and the auxiliary information aggregated over&#10;all batches in the dataset.&#10;:param sender_entropy_coeff: entropy regularization coeff for sender&#10;:param receiver_entropy_coeff: entropy regularization coeff for receiver&#10;:param length_cost: the penalty applied to Sender for each symbol produced&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uqE06B0SmYPeg" name="receiver" comment=":param sender: sender agent&#10;:param receiver: receiver agent&#10;:param loss:  the optimized loss that accepts&#10;sender_input: input of Sender&#10;message: the is sent by Sender&#10;receiver_input: input of Receiver from the dataset&#10;receiver_output: output of Receiver&#10;labels: labels assigned to Sender's input data&#10;and outputs a tuple of (1) a loss tensor of shape (batch size, 1) (2) the dict with auxiliary information&#10;of the same shape. The loss will be minimized during training, and the auxiliary information aggregated over&#10;all batches in the dataset.&#10;:param sender_entropy_coeff: entropy regularization coeff for sender&#10;:param receiver_entropy_coeff: entropy regularization coeff for receiver&#10;:param length_cost: the penalty applied to Sender for each symbol produced&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uvQiwssCccxtx" name="sender_entropy_coeff" comment=":param sender: sender agent&#10;:param receiver: receiver agent&#10;:param loss:  the optimized loss that accepts&#10;sender_input: input of Sender&#10;message: the is sent by Sender&#10;receiver_input: input of Receiver from the dataset&#10;receiver_output: output of Receiver&#10;labels: labels assigned to Sender's input data&#10;and outputs a tuple of (1) a loss tensor of shape (batch size, 1) (2) the dict with auxiliary information&#10;of the same shape. The loss will be minimized during training, and the auxiliary information aggregated over&#10;all batches in the dataset.&#10;:param sender_entropy_coeff: entropy regularization coeff for sender&#10;:param receiver_entropy_coeff: entropy regularization coeff for receiver&#10;:param length_cost: the penalty applied to Sender for each symbol produced&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="ugo7YcLW3ct4M" name="receiver_entropy_coeff" comment=":param sender: sender agent&#10;:param receiver: receiver agent&#10;:param loss:  the optimized loss that accepts&#10;sender_input: input of Sender&#10;message: the is sent by Sender&#10;receiver_input: input of Receiver from the dataset&#10;receiver_output: output of Receiver&#10;labels: labels assigned to Sender's input data&#10;and outputs a tuple of (1) a loss tensor of shape (batch size, 1) (2) the dict with auxiliary information&#10;of the same shape. The loss will be minimized during training, and the auxiliary information aggregated over&#10;all batches in the dataset.&#10;:param sender_entropy_coeff: entropy regularization coeff for sender&#10;:param receiver_entropy_coeff: entropy regularization coeff for receiver&#10;:param length_cost: the penalty applied to Sender for each symbol produced&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uoESd9EHYVkG0" name="loss" comment=":param sender: sender agent&#10;:param receiver: receiver agent&#10;:param loss:  the optimized loss that accepts&#10;sender_input: input of Sender&#10;message: the is sent by Sender&#10;receiver_input: input of Receiver from the dataset&#10;receiver_output: output of Receiver&#10;labels: labels assigned to Sender's input data&#10;and outputs a tuple of (1) a loss tensor of shape (batch size, 1) (2) the dict with auxiliary information&#10;of the same shape. The loss will be minimized during training, and the auxiliary information aggregated over&#10;all batches in the dataset.&#10;:param sender_entropy_coeff: entropy regularization coeff for sender&#10;:param receiver_entropy_coeff: entropy regularization coeff for receiver&#10;:param length_cost: the penalty applied to Sender for each symbol produced&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uvkJClswRQHOz" name="length_cost" comment=":param sender: sender agent&#10;:param receiver: receiver agent&#10;:param loss:  the optimized loss that accepts&#10;sender_input: input of Sender&#10;message: the is sent by Sender&#10;receiver_input: input of Receiver from the dataset&#10;receiver_output: output of Receiver&#10;labels: labels assigned to Sender's input data&#10;and outputs a tuple of (1) a loss tensor of shape (batch size, 1) (2) the dict with auxiliary information&#10;of the same shape. The loss will be minimized during training, and the auxiliary information aggregated over&#10;all batches in the dataset.&#10;:param sender_entropy_coeff: entropy regularization coeff for sender&#10;:param receiver_entropy_coeff: entropy regularization coeff for receiver&#10;:param length_cost: the penalty applied to Sender for each symbol produced&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uxcEKizrHBnZy" name="unigram_penalty" comment=":param sender: sender agent&#10;:param receiver: receiver agent&#10;:param loss:  the optimized loss that accepts&#10;sender_input: input of Sender&#10;message: the is sent by Sender&#10;receiver_input: input of Receiver from the dataset&#10;receiver_output: output of Receiver&#10;labels: labels assigned to Sender's input data&#10;and outputs a tuple of (1) a loss tensor of shape (batch size, 1) (2) the dict with auxiliary information&#10;of the same shape. The loss will be minimized during training, and the auxiliary information aggregated over&#10;all batches in the dataset.&#10;:param sender_entropy_coeff: entropy regularization coeff for sender&#10;:param receiver_entropy_coeff: entropy regularization coeff for receiver&#10;:param length_cost: the penalty applied to Sender for each symbol produced&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uL58rxk3gkLmb" name="reg" comment=":param sender: sender agent&#10;:param receiver: receiver agent&#10;:param loss:  the optimized loss that accepts&#10;sender_input: input of Sender&#10;message: the is sent by Sender&#10;receiver_input: input of Receiver from the dataset&#10;receiver_output: output of Receiver&#10;labels: labels assigned to Sender's input data&#10;and outputs a tuple of (1) a loss tensor of shape (batch size, 1) (2) the dict with auxiliary information&#10;of the same shape. The loss will be minimized during training, and the auxiliary information aggregated over&#10;all batches in the dataset.&#10;:param sender_entropy_coeff: entropy regularization coeff for sender&#10;:param receiver_entropy_coeff: entropy regularization coeff for receiver&#10;:param length_cost: the penalty applied to Sender for each symbol produced&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="u2K2Ix87nEC4P" name="n_attributes" comment=":param sender: sender agent&#10;:param receiver: receiver agent&#10;:param loss:  the optimized loss that accepts&#10;sender_input: input of Sender&#10;message: the is sent by Sender&#10;receiver_input: input of Receiver from the dataset&#10;receiver_output: output of Receiver&#10;labels: labels assigned to Sender's input data&#10;and outputs a tuple of (1) a loss tensor of shape (batch size, 1) (2) the dict with auxiliary information&#10;of the same shape. The loss will be minimized during training, and the auxiliary information aggregated over&#10;all batches in the dataset.&#10;:param sender_entropy_coeff: entropy regularization coeff for sender&#10;:param receiver_entropy_coeff: entropy regularization coeff for receiver&#10;:param length_cost: the penalty applied to Sender for each symbol produced&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uQOWrXG7NO0st" name="n_values" comment=":param sender: sender agent&#10;:param receiver: receiver agent&#10;:param loss:  the optimized loss that accepts&#10;sender_input: input of Sender&#10;message: the is sent by Sender&#10;receiver_input: input of Receiver from the dataset&#10;receiver_output: output of Receiver&#10;labels: labels assigned to Sender's input data&#10;and outputs a tuple of (1) a loss tensor of shape (batch size, 1) (2) the dict with auxiliary information&#10;of the same shape. The loss will be minimized during training, and the auxiliary information aggregated over&#10;all batches in the dataset.&#10;:param sender_entropy_coeff: entropy regularization coeff for sender&#10;:param receiver_entropy_coeff: entropy regularization coeff for receiver&#10;:param length_cost: the penalty applied to Sender for each symbol produced&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uLCIz0mzdIlhf" name="mean_baseline" comment=":param sender: sender agent&#10;:param receiver: receiver agent&#10;:param loss:  the optimized loss that accepts&#10;sender_input: input of Sender&#10;message: the is sent by Sender&#10;receiver_input: input of Receiver from the dataset&#10;receiver_output: output of Receiver&#10;labels: labels assigned to Sender's input data&#10;and outputs a tuple of (1) a loss tensor of shape (batch size, 1) (2) the dict with auxiliary information&#10;of the same shape. The loss will be minimized during training, and the auxiliary information aggregated over&#10;all batches in the dataset.&#10;:param sender_entropy_coeff: entropy regularization coeff for sender&#10;:param receiver_entropy_coeff: entropy regularization coeff for receiver&#10;:param length_cost: the penalty applied to Sender for each symbol produced&#10;" visibility="public" type="us0LnAGmSsTJZ" initialValue="(float)"/>
        <UML:Attribute isSpecification="false" xmi.id="uGvSMELGQH78P" name="n_points" comment=":param sender: sender agent&#10;:param receiver: receiver agent&#10;:param loss:  the optimized loss that accepts&#10;sender_input: input of Sender&#10;message: the is sent by Sender&#10;receiver_input: input of Receiver from the dataset&#10;receiver_output: output of Receiver&#10;labels: labels assigned to Sender's input data&#10;and outputs a tuple of (1) a loss tensor of shape (batch size, 1) (2) the dict with auxiliary information&#10;of the same shape. The loss will be minimized during training, and the auxiliary information aggregated over&#10;all batches in the dataset.&#10;:param sender_entropy_coeff: entropy regularization coeff for sender&#10;:param receiver_entropy_coeff: entropy regularization coeff for receiver&#10;:param length_cost: the penalty applied to Sender for each symbol produced&#10;" visibility="public" type="us0LnAGmSsTJZ" initialValue="(float)"/>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="umffYpAas1z1k" name="__init__" comment="        :param sender: sender agent&#10;        :param receiver: receiver agent&#10;        :param loss:  the optimized loss that accepts&#10;            sender_input: input of Sender&#10;            message: the is sent by Sender&#10;            receiver_input: input of Receiver from the dataset&#10;            receiver_output: output of Receiver&#10;            labels: labels assigned to Sender's input data&#10;          and outputs a tuple of (1) a loss tensor of shape (batch size, 1) (2) the dict with auxiliary information&#10;          of the same shape. The loss will be minimized during training, and the auxiliary information aggregated over&#10;          all batches in the dataset.&#10;        :param sender_entropy_coeff: entropy regularization coeff for sender&#10;        :param receiver_entropy_coeff: entropy regularization coeff for receiver&#10;        :param length_cost: the penalty applied to Sender for each symbol produced&#10;" visibility="public" stereotype="constructor" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="ukCSKuPBeWdxy" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uYDo8tmt0Hy9B" name="sender" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uNAxFBGPeW88a" name="receiver" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uwJwbBrT086uY" name="loss" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="udeSg1rTCRscq" name="sender_entropy_coeff" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uwpNLd6TazzEd" name="receiver_entropy_coeff" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uDdqZeH3T8gMZ" name="n_attributes" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="ugyDQFkibAQXl" name="n_values" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uu4luDeRx5Sx7" name=";" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uORcE4B8kxvp2" name="length_cost" visibility="private" type="uvBhCm6WK8jRM" value="0.0"/>
          <UML:Parameter isSpecification="false" xmi.id="uaBxcERjcU6R2" name="unigram_penalty" visibility="private" type="uvBhCm6WK8jRM" value="0.0"/>
          <UML:Parameter isSpecification="false" xmi.id="uhWm29gTAnbuP" name="reg" visibility="private" type="uR4u51QglJUwu" value="False"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uvCWBkki1Wygw" name="forward" comment=" Noisy channel random symbols Receiver normaldim=[batch_size,n_att,n_val] regif self.reg:     for i in range(message_lengths.size(0)):      sc+=crible_acc[i,message_lengths[i]-1] the entropy of the outputs of S before and including the eos symbol - as we don't care about what's after the log prob of the choices made by S before and including the eos symbol - again, we don't care about the restif self.reg:    sc/=message_lengths.size(0)    if sc&gt;0.98:    &#9;self.length_cost+=0.1    else:    &#9;self.length_cost=0.self.length_cost= sc**(60) / 2 if the receiver is deterministic/differentiable, we apply the actual loss" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uKOQuYYLvWTCO" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="u6fgpiFCeJcxf" name="sender_input" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uvQieIN5a6cpF" name="labels" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uWxRSRycy59uB" name="receiver_input" visibility="private" type="u27FcBrsL7fnn" value="None"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uetGRvgOE3zke" name="update_baseline" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uwBqt6CUaKgDN" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uWrZmUKrkXLCY" name="name" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u9YumCLdBQipD" name="value" visibility="private" type="uUffSdhSc9MEm" value=""/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uIRwnff8JiLL7" name="CompositionalitySenderImpatientReceiverRnnReinforce" namespace="Logical_View" comment="    Implements Sender/Receiver game with training done via Reinforce. Both agents are supposed to&#10;    return 3-tuples of (output, log-prob of the output, entropy).&#10;    The game implementation is responsible for handling the end-of-sequence term, so that the optimized loss&#10;    corresponds either to the position of the eos term (assumed to be 0) or the end of sequence.&#10;    Sender and Receiver can be obtained by applying the corresponding wrappers.&#10;    `SenderReceiverRnnReinforce` also applies the mean baseline to the loss function to reduce the variance of the&#10;    gradient estimate.&#10;    &gt;&gt;&gt; sender = nn.Linear(3, 10)&#10;    &gt;&gt;&gt; sender = RnnSenderReinforce(sender, vocab_size=15, embed_dim=5, hidden_size=10, max_len=10, cell='lstm')&#10;    &gt;&gt;&gt; class Receiver(nn.Module):&#10;    ...     def __init__(self):&#10;    ...         super().__init__()&#10;    ...         self.fc = nn.Linear(5, 3)&#10;    ...     def forward(self, rnn_output, _input = None):&#10;    ...         return self.fc(rnn_output)&#10;    &gt;&gt;&gt; receiver = RnnReceiverDeterministic(Receiver(), vocab_size=15, embed_dim=10, hidden_size=5)&#10;    &gt;&gt;&gt; def loss(sender_input, _message, _receiver_input, receiver_output, _labels):&#10;    ...     return F.mse_loss(sender_input, receiver_output, reduction='none').mean(dim=1), {'aux': 5.0}&#10;    &gt;&gt;&gt; game = SenderReceiverRnnReinforce(sender, receiver, loss, sender_entropy_coeff=0.0, receiver_entropy_coeff=0.0,&#10;    ...                                   length_cost=1e-2)&#10;    &gt;&gt;&gt; input = torch.zeros((16, 3)).normal_()&#10;    &gt;&gt;&gt; optimized_loss, aux_info = game(input, labels=None)&#10;    &gt;&gt;&gt; sorted(list(aux_info.keys()))  # returns some debug info, such as entropies of the agents, message length etc&#10;    ['aux', 'loss', 'mean_length', 'original_loss', 'receiver_entropy', 'sender_entropy']&#10;    &gt;&gt;&gt; aux_info['aux']&#10;    5.0&#10;" visibility="public">
       <UML:Classifier.feature>
        <UML:Attribute isSpecification="false" xmi.id="uPLt6gWttNpTl" name="sender" comment=":param sender: sender agent&#10;:param receiver: receiver agent&#10;:param loss:  the optimized loss that accepts&#10;sender_input: input of Sender&#10;message: the is sent by Sender&#10;receiver_input: input of Receiver from the dataset&#10;receiver_output: output of Receiver&#10;labels: labels assigned to Sender's input data&#10;and outputs a tuple of (1) a loss tensor of shape (batch size, 1) (2) the dict with auxiliary information&#10;of the same shape. The loss will be minimized during training, and the auxiliary information aggregated over&#10;all batches in the dataset.&#10;:param sender_entropy_coeff: entropy regularization coeff for sender&#10;:param receiver_entropy_coeff: entropy regularization coeff for receiver&#10;:param length_cost: the penalty applied to Sender for each symbol produced&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="u6v510Ch2OCst" name="receiver" comment=":param sender: sender agent&#10;:param receiver: receiver agent&#10;:param loss:  the optimized loss that accepts&#10;sender_input: input of Sender&#10;message: the is sent by Sender&#10;receiver_input: input of Receiver from the dataset&#10;receiver_output: output of Receiver&#10;labels: labels assigned to Sender's input data&#10;and outputs a tuple of (1) a loss tensor of shape (batch size, 1) (2) the dict with auxiliary information&#10;of the same shape. The loss will be minimized during training, and the auxiliary information aggregated over&#10;all batches in the dataset.&#10;:param sender_entropy_coeff: entropy regularization coeff for sender&#10;:param receiver_entropy_coeff: entropy regularization coeff for receiver&#10;:param length_cost: the penalty applied to Sender for each symbol produced&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uy7EpkR774r24" name="sender_entropy_coeff" comment=":param sender: sender agent&#10;:param receiver: receiver agent&#10;:param loss:  the optimized loss that accepts&#10;sender_input: input of Sender&#10;message: the is sent by Sender&#10;receiver_input: input of Receiver from the dataset&#10;receiver_output: output of Receiver&#10;labels: labels assigned to Sender's input data&#10;and outputs a tuple of (1) a loss tensor of shape (batch size, 1) (2) the dict with auxiliary information&#10;of the same shape. The loss will be minimized during training, and the auxiliary information aggregated over&#10;all batches in the dataset.&#10;:param sender_entropy_coeff: entropy regularization coeff for sender&#10;:param receiver_entropy_coeff: entropy regularization coeff for receiver&#10;:param length_cost: the penalty applied to Sender for each symbol produced&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="u6vKf2AaJN4Uc" name="receiver_entropy_coeff" comment=":param sender: sender agent&#10;:param receiver: receiver agent&#10;:param loss:  the optimized loss that accepts&#10;sender_input: input of Sender&#10;message: the is sent by Sender&#10;receiver_input: input of Receiver from the dataset&#10;receiver_output: output of Receiver&#10;labels: labels assigned to Sender's input data&#10;and outputs a tuple of (1) a loss tensor of shape (batch size, 1) (2) the dict with auxiliary information&#10;of the same shape. The loss will be minimized during training, and the auxiliary information aggregated over&#10;all batches in the dataset.&#10;:param sender_entropy_coeff: entropy regularization coeff for sender&#10;:param receiver_entropy_coeff: entropy regularization coeff for receiver&#10;:param length_cost: the penalty applied to Sender for each symbol produced&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="ujC70MVhOpOVh" name="loss" comment=":param sender: sender agent&#10;:param receiver: receiver agent&#10;:param loss:  the optimized loss that accepts&#10;sender_input: input of Sender&#10;message: the is sent by Sender&#10;receiver_input: input of Receiver from the dataset&#10;receiver_output: output of Receiver&#10;labels: labels assigned to Sender's input data&#10;and outputs a tuple of (1) a loss tensor of shape (batch size, 1) (2) the dict with auxiliary information&#10;of the same shape. The loss will be minimized during training, and the auxiliary information aggregated over&#10;all batches in the dataset.&#10;:param sender_entropy_coeff: entropy regularization coeff for sender&#10;:param receiver_entropy_coeff: entropy regularization coeff for receiver&#10;:param length_cost: the penalty applied to Sender for each symbol produced&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="u77bBmngbEkDv" name="length_cost" comment=":param sender: sender agent&#10;:param receiver: receiver agent&#10;:param loss:  the optimized loss that accepts&#10;sender_input: input of Sender&#10;message: the is sent by Sender&#10;receiver_input: input of Receiver from the dataset&#10;receiver_output: output of Receiver&#10;labels: labels assigned to Sender's input data&#10;and outputs a tuple of (1) a loss tensor of shape (batch size, 1) (2) the dict with auxiliary information&#10;of the same shape. The loss will be minimized during training, and the auxiliary information aggregated over&#10;all batches in the dataset.&#10;:param sender_entropy_coeff: entropy regularization coeff for sender&#10;:param receiver_entropy_coeff: entropy regularization coeff for receiver&#10;:param length_cost: the penalty applied to Sender for each symbol produced&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uU8Qx13OAhvE2" name="unigram_penalty" comment=":param sender: sender agent&#10;:param receiver: receiver agent&#10;:param loss:  the optimized loss that accepts&#10;sender_input: input of Sender&#10;message: the is sent by Sender&#10;receiver_input: input of Receiver from the dataset&#10;receiver_output: output of Receiver&#10;labels: labels assigned to Sender's input data&#10;and outputs a tuple of (1) a loss tensor of shape (batch size, 1) (2) the dict with auxiliary information&#10;of the same shape. The loss will be minimized during training, and the auxiliary information aggregated over&#10;all batches in the dataset.&#10;:param sender_entropy_coeff: entropy regularization coeff for sender&#10;:param receiver_entropy_coeff: entropy regularization coeff for receiver&#10;:param length_cost: the penalty applied to Sender for each symbol produced&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="ucvPbIw1fTrsZ" name="reg" comment=":param sender: sender agent&#10;:param receiver: receiver agent&#10;:param loss:  the optimized loss that accepts&#10;sender_input: input of Sender&#10;message: the is sent by Sender&#10;receiver_input: input of Receiver from the dataset&#10;receiver_output: output of Receiver&#10;labels: labels assigned to Sender's input data&#10;and outputs a tuple of (1) a loss tensor of shape (batch size, 1) (2) the dict with auxiliary information&#10;of the same shape. The loss will be minimized during training, and the auxiliary information aggregated over&#10;all batches in the dataset.&#10;:param sender_entropy_coeff: entropy regularization coeff for sender&#10;:param receiver_entropy_coeff: entropy regularization coeff for receiver&#10;:param length_cost: the penalty applied to Sender for each symbol produced&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="u359ONWa8OGxe" name="n_attributes" comment=":param sender: sender agent&#10;:param receiver: receiver agent&#10;:param loss:  the optimized loss that accepts&#10;sender_input: input of Sender&#10;message: the is sent by Sender&#10;receiver_input: input of Receiver from the dataset&#10;receiver_output: output of Receiver&#10;labels: labels assigned to Sender's input data&#10;and outputs a tuple of (1) a loss tensor of shape (batch size, 1) (2) the dict with auxiliary information&#10;of the same shape. The loss will be minimized during training, and the auxiliary information aggregated over&#10;all batches in the dataset.&#10;:param sender_entropy_coeff: entropy regularization coeff for sender&#10;:param receiver_entropy_coeff: entropy regularization coeff for receiver&#10;:param length_cost: the penalty applied to Sender for each symbol produced&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uuL1rmEjedLDI" name="n_values" comment=":param sender: sender agent&#10;:param receiver: receiver agent&#10;:param loss:  the optimized loss that accepts&#10;sender_input: input of Sender&#10;message: the is sent by Sender&#10;receiver_input: input of Receiver from the dataset&#10;receiver_output: output of Receiver&#10;labels: labels assigned to Sender's input data&#10;and outputs a tuple of (1) a loss tensor of shape (batch size, 1) (2) the dict with auxiliary information&#10;of the same shape. The loss will be minimized during training, and the auxiliary information aggregated over&#10;all batches in the dataset.&#10;:param sender_entropy_coeff: entropy regularization coeff for sender&#10;:param receiver_entropy_coeff: entropy regularization coeff for receiver&#10;:param length_cost: the penalty applied to Sender for each symbol produced&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="ugX4XGq6v2PYv" name="att_weights" comment=":param sender: sender agent&#10;:param receiver: receiver agent&#10;:param loss:  the optimized loss that accepts&#10;sender_input: input of Sender&#10;message: the is sent by Sender&#10;receiver_input: input of Receiver from the dataset&#10;receiver_output: output of Receiver&#10;labels: labels assigned to Sender's input data&#10;and outputs a tuple of (1) a loss tensor of shape (batch size, 1) (2) the dict with auxiliary information&#10;of the same shape. The loss will be minimized during training, and the auxiliary information aggregated over&#10;all batches in the dataset.&#10;:param sender_entropy_coeff: entropy regularization coeff for sender&#10;:param receiver_entropy_coeff: entropy regularization coeff for receiver&#10;:param length_cost: the penalty applied to Sender for each symbol produced&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uvV8D3faxDMOD" name="mean_baseline" comment=":param sender: sender agent&#10;:param receiver: receiver agent&#10;:param loss:  the optimized loss that accepts&#10;sender_input: input of Sender&#10;message: the is sent by Sender&#10;receiver_input: input of Receiver from the dataset&#10;receiver_output: output of Receiver&#10;labels: labels assigned to Sender's input data&#10;and outputs a tuple of (1) a loss tensor of shape (batch size, 1) (2) the dict with auxiliary information&#10;of the same shape. The loss will be minimized during training, and the auxiliary information aggregated over&#10;all batches in the dataset.&#10;:param sender_entropy_coeff: entropy regularization coeff for sender&#10;:param receiver_entropy_coeff: entropy regularization coeff for receiver&#10;:param length_cost: the penalty applied to Sender for each symbol produced&#10;" visibility="public" type="us0LnAGmSsTJZ" initialValue="(float)"/>
        <UML:Attribute isSpecification="false" xmi.id="uUjvlkx7XRHlZ" name="n_points" comment=":param sender: sender agent&#10;:param receiver: receiver agent&#10;:param loss:  the optimized loss that accepts&#10;sender_input: input of Sender&#10;message: the is sent by Sender&#10;receiver_input: input of Receiver from the dataset&#10;receiver_output: output of Receiver&#10;labels: labels assigned to Sender's input data&#10;and outputs a tuple of (1) a loss tensor of shape (batch size, 1) (2) the dict with auxiliary information&#10;of the same shape. The loss will be minimized during training, and the auxiliary information aggregated over&#10;all batches in the dataset.&#10;:param sender_entropy_coeff: entropy regularization coeff for sender&#10;:param receiver_entropy_coeff: entropy regularization coeff for receiver&#10;:param length_cost: the penalty applied to Sender for each symbol produced&#10;" visibility="public" type="us0LnAGmSsTJZ" initialValue="(float)"/>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="ufOHVmy0lzRtn" name="__init__" comment="        :param sender: sender agent&#10;        :param receiver: receiver agent&#10;        :param loss:  the optimized loss that accepts&#10;            sender_input: input of Sender&#10;            message: the is sent by Sender&#10;            receiver_input: input of Receiver from the dataset&#10;            receiver_output: output of Receiver&#10;            labels: labels assigned to Sender's input data&#10;          and outputs a tuple of (1) a loss tensor of shape (batch size, 1) (2) the dict with auxiliary information&#10;          of the same shape. The loss will be minimized during training, and the auxiliary information aggregated over&#10;          all batches in the dataset.&#10;        :param sender_entropy_coeff: entropy regularization coeff for sender&#10;        :param receiver_entropy_coeff: entropy regularization coeff for receiver&#10;        :param length_cost: the penalty applied to Sender for each symbol produced&#10;" visibility="public" stereotype="constructor" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uukQDRneh4uE6" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uAECpPJWxsIZb" name="sender" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uZ5DgslyJO0cv" name="receiver" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="ubH6Spq2aNbEz" name="loss" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="unCH9s1VQVSPe" name="sender_entropy_coeff" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uBkdf4kUYT0a0" name="receiver_entropy_coeff" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u6JOuratyijc6" name="n_attributes" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uEwOt41A1Zh1H" name="n_values" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u08IArzAsMIZN" name="att_weights" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uPky01fh7nJ2O" name=";" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uaQXPKlapZsA8" name="length_cost" visibility="private" type="uvBhCm6WK8jRM" value="0.0"/>
          <UML:Parameter isSpecification="false" xmi.id="uMwWNvc7i36Co" name="unigram_penalty" visibility="private" type="uvBhCm6WK8jRM" value="0.0"/>
          <UML:Parameter isSpecification="false" xmi.id="u9MWg4mbuCrp9" name="reg" visibility="private" type="uR4u51QglJUwu" value="False"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uGm5iWBPhsmvE" name="forward" comment="print(sender_input[:,11:-1]) If impatient 1 reg Version de baseloss, rest, crible_acc = self.loss(sender_input, message, message_lengths, receiver_input, receiver_output_all_att, labels,self.n_attributes,self.n_values,self.att_weights) Take into account the fact that an attribute is not sampled the entropy of the outputs of S before and including the eos symbol - as we don't care about what's after the log prob of the choices made by S before and including the eos symbol - again, we don't care about the restif sc&lt;0.9:   self.length_cost=-0.1self.length_cost= sc**(60) / 2 Penalty redundancycounts_unigram=((message[:,1:]-message[:,:-1])==0).sum(axis=1).sum(axis=0)unigram_loss = self.unigram_penalty*counts_unigram if the receiver is deterministic/differentiable, we apply the actual loss" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="udykP5sdqPVJM" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uTG4hX9FYmeS4" name="sender_input" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="ubSez6HInN0Q5" name="labels" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uXrxf67gLi3Lp" name="receiver_input" visibility="private" type="u27FcBrsL7fnn" value="None"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uMMmABB7JX7Eb" name="update_baseline" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="ucJxygEB1sFjq" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uLCMnkJSjOyrC" name="name" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uHxXkXyU6pxA0" name="value" visibility="private" type="uUffSdhSc9MEm" value=""/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="umyiVnwmED9ET" name="TransformerReceiverDeterministic" namespace="Logical_View" visibility="public">
       <UML:Classifier.feature>
        <UML:Attribute isSpecification="false" xmi.id="um7XlMFVwRO05" name="agent" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uljguzjZnpRTc" name="encoder" visibility="public" type="udds1DELhHMYK" initialValue="(vocab_size=vocab_size,;max_len=max_len,embed_dim=embed_dim,num_heads=num_heads,num_layers=num_layers,hidden_size=hidden_size,positional_embedding=positional_emb,causal=causal)"/>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uS3Wa0dXGLXTo" name="__init__" visibility="public" stereotype="constructor" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uNqYYJSiPeUNt" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="ur6hjwdHgpf0h" name="agent" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u8Xqr8yPZ7qOo" name="vocab_size" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uN9mKmpVyxtW3" name="max_len" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="ubfENbMjbWhwv" name="embed_dim" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uBJF84v5cUc6M" name="num_heads" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uJkx0bY3RLUup" name="hidden_size" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="urKzeCTuhrbrb" name="num_layers" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="ufA4L5GOUjsC5" name="positional_emb" visibility="private" type="uR4u51QglJUwu" value="True"/>
          <UML:Parameter isSpecification="false" xmi.id="u1LXTXQaHNi9J" name=";" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u9EIwQ2ilE2bL" name="causal" visibility="private" type="uR4u51QglJUwu" value="True"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="ujjVlZMJFSbgR" name="forward" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uvEeMctnnauQx" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="udUPDYq8aAX5Q" name="message" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uc3WRpyqirTLT" name="input" visibility="private" type="u27FcBrsL7fnn" value="None"/>
          <UML:Parameter isSpecification="false" xmi.id="uD9H83ryDSlVX" name="lengths" visibility="private" type="u27FcBrsL7fnn" value="None"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="udds1DELhHMYK" name="TransformerEncoder" namespace="Logical_View" comment="Implements a Transformer Encoder. The masking is done based on the positions of the &lt;eos&gt;&#10;    token (with id 0).&#10;    Two regimes are implemented:&#10;    * 'causal' (left-to-right): the symbols are masked such that every symbol's embedding only can depend on the&#10;        symbols to the left of it. The embedding of the &lt;eos&gt; symbol is taken as the representative.&#10;    *  'non-causal': a special symbol &lt;sos&gt; is pre-pended to the input sequence, all symbols before &lt;eos&gt; are un-masked.&#10;" visibility="public">
       <UML:Classifier.feature>
        <UML:Attribute isSpecification="false" xmi.id="ulHozkF5Tg3aM" name="max_len" comment="in the non-causal case, we will use a special symbol prepended to the input messages which would have term id of `vocab_size`. Hence we increase the vocab size and the max length" visibility="public" ownerScope="classifier" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uuirSaPkUn9jK" name="sos_id" comment="in the non-causal case, we will use a special symbol prepended to the input messages which would have term id of `vocab_size`. Hence we increase the vocab size and the max length" visibility="public" type="uf4iACv1tZ80g" initialValue="([vocab_size-1])"/>
        <UML:Attribute isSpecification="false" xmi.id="uVB7Ytvizdn0v" name="causal" comment="in the non-causal case, we will use a special symbol prepended to the input messages which would have term id of `vocab_size`. Hence we increase the vocab size and the max length" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uFRfF80RbZ4xC" name="__init__" comment=" in the non-causal case, we will use a special symbol prepended to the input messages which would have term id of `vocab_size`. Hence we increase the vocab size and the max length" visibility="public" stereotype="constructor" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uuOd74WWQBUEw" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="u1W2Ws8cm8WHc" name=";" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u3u8nPYkj3B7M" name="vocab_size" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="ufTMtpncnjj2y" name=":" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u6JXHWDrP6Obz" name="int" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u02aQ6QZYVzvJ" name="max_len" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u1MVMBYZQlPtY" name=":" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="ufpsa3qsZXy9Y" name="int" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uQySPDfJM1WNI" name="embed_dim" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u0J9gaZ3dHHLT" name=":" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uhkIWvEn9TfVG" name="int" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="ueEQTs0xDeqIL" name="num_heads" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="ur82hpiI2INTX" name=":" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uj6IXB64R3sLW" name="int" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uSPNF7jWmpEop" name="hidden_size" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uZq3IdtxQN3fu" name=":" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u3kgE4zl74y3Q" name="int" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uSmPrvOu5tazE" name="num_layers" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uGf7QneIXKDkL" name=":" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uVUXDg6ruS2PZ" name="int" visibility="private" type="uenFS4WYhQUaR" value="1"/>
          <UML:Parameter isSpecification="false" xmi.id="uwrjc1ltnnRYr" name="positional_embedding" visibility="private" type="uR4u51QglJUwu" value="True"/>
          <UML:Parameter isSpecification="false" xmi.id="uxRtWIfu4R0zJ" name="causal" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uux1dfmpsfkHi" name=":" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uI1bqr5n7QC44" name="bool" visibility="private" type="uR4u51QglJUwu" value="True"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="u0vWkPwNUPTuk" name="forward" comment=" as the input to the agent, we take the embedding for the first symbol, which is always the special &lt;sos&gt; one" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uD2Wd6NQ2xdvS" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uGZGxR4xFn8eE" name="message" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="ukJVs38GO7sf0" name=":" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uh501a9bMLjK8" name="torch.Tensor" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uOt57uFX2D1Ri" name="lengths" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uuDneq97EoRSV" name=":" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uigWj4ucmXHGi" name="Optional" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uEuIFYBzgaahP" name="[" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uaGklFaTnaiXC" name="torch.Tensor" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uMVYUheiD6qeG" name="]" visibility="private" type="u27FcBrsL7fnn" value="None"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uha2A7b5LYM86" name="TransformerSenderReinforce" namespace="Logical_View" visibility="public">
       <UML:Classifier.feature>
        <UML:Attribute isSpecification="false" xmi.id="u0mopOlgAyioC" name="agent" comment=":param agent: the agent to be wrapped, returns the &quot;encoder&quot; state vector, which is the unrolled into a message&#10;:param vocab_size: vocab size of the message&#10;:param embed_dim: embedding dimensions&#10;:param max_len: maximal length of the message (including &lt;eos&gt;)&#10;:param num_layers: number of transformer layers&#10;:param num_heads: number of attention heads&#10;:param hidden_size: size of the FFN layers&#10;:param causal: whether embedding of a particular symbol should only depend on the symbols to the left&#10;:param generate_style: Two alternatives: 'standard' and 'in-place'. Suppose we are generating 4th symbol,&#10;after three symbols [s1 s2 s3] were generated.&#10;Then,&#10;'standard': [s1 s2 s3] -&gt; embeddings [[e1] [e2] [e3]] -&gt; (s4 = argmax(linear(e3)))&#10;'in-place': [s1 s2 s3] -&gt; [s1 s2 s3 &lt;need-symbol&gt;] -&gt; embeddings [[e1] [e2] [e3] [e4]] -&gt; (s4 = argmax(linear(e4)))&#10;:param force_eos: &lt;eos&gt; added to the end of each sequence&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="utBIM96ySevOg" name="force_eos" comment=":param agent: the agent to be wrapped, returns the &quot;encoder&quot; state vector, which is the unrolled into a message&#10;:param vocab_size: vocab size of the message&#10;:param embed_dim: embedding dimensions&#10;:param max_len: maximal length of the message (including &lt;eos&gt;)&#10;:param num_layers: number of transformer layers&#10;:param num_heads: number of attention heads&#10;:param hidden_size: size of the FFN layers&#10;:param causal: whether embedding of a particular symbol should only depend on the symbols to the left&#10;:param generate_style: Two alternatives: 'standard' and 'in-place'. Suppose we are generating 4th symbol,&#10;after three symbols [s1 s2 s3] were generated.&#10;Then,&#10;'standard': [s1 s2 s3] -&gt; embeddings [[e1] [e2] [e3]] -&gt; (s4 = argmax(linear(e3)))&#10;'in-place': [s1 s2 s3] -&gt; [s1 s2 s3 &lt;need-symbol&gt;] -&gt; embeddings [[e1] [e2] [e3] [e4]] -&gt; (s4 = argmax(linear(e4)))&#10;:param force_eos: &lt;eos&gt; added to the end of each sequence&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uT2EIG2jyj6qd" name="generate_style" comment=":param agent: the agent to be wrapped, returns the &quot;encoder&quot; state vector, which is the unrolled into a message&#10;:param vocab_size: vocab size of the message&#10;:param embed_dim: embedding dimensions&#10;:param max_len: maximal length of the message (including &lt;eos&gt;)&#10;:param num_layers: number of transformer layers&#10;:param num_heads: number of attention heads&#10;:param hidden_size: size of the FFN layers&#10;:param causal: whether embedding of a particular symbol should only depend on the symbols to the left&#10;:param generate_style: Two alternatives: 'standard' and 'in-place'. Suppose we are generating 4th symbol,&#10;after three symbols [s1 s2 s3] were generated.&#10;Then,&#10;'standard': [s1 s2 s3] -&gt; embeddings [[e1] [e2] [e3]] -&gt; (s4 = argmax(linear(e3)))&#10;'in-place': [s1 s2 s3] -&gt; [s1 s2 s3 &lt;need-symbol&gt;] -&gt; embeddings [[e1] [e2] [e3] [e4]] -&gt; (s4 = argmax(linear(e4)))&#10;:param force_eos: &lt;eos&gt; added to the end of each sequence&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uHBbGdrMf2GTL" name="causal" comment=":param agent: the agent to be wrapped, returns the &quot;encoder&quot; state vector, which is the unrolled into a message&#10;:param vocab_size: vocab size of the message&#10;:param embed_dim: embedding dimensions&#10;:param max_len: maximal length of the message (including &lt;eos&gt;)&#10;:param num_layers: number of transformer layers&#10;:param num_heads: number of attention heads&#10;:param hidden_size: size of the FFN layers&#10;:param causal: whether embedding of a particular symbol should only depend on the symbols to the left&#10;:param generate_style: Two alternatives: 'standard' and 'in-place'. Suppose we are generating 4th symbol,&#10;after three symbols [s1 s2 s3] were generated.&#10;Then,&#10;'standard': [s1 s2 s3] -&gt; embeddings [[e1] [e2] [e3]] -&gt; (s4 = argmax(linear(e3)))&#10;'in-place': [s1 s2 s3] -&gt; [s1 s2 s3 &lt;need-symbol&gt;] -&gt; embeddings [[e1] [e2] [e3] [e4]] -&gt; (s4 = argmax(linear(e4)))&#10;:param force_eos: &lt;eos&gt; added to the end of each sequence&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="ujdIUWtl59eFP" name="max_len" comment=":param agent: the agent to be wrapped, returns the &quot;encoder&quot; state vector, which is the unrolled into a message&#10;:param vocab_size: vocab size of the message&#10;:param embed_dim: embedding dimensions&#10;:param max_len: maximal length of the message (including &lt;eos&gt;)&#10;:param num_layers: number of transformer layers&#10;:param num_heads: number of attention heads&#10;:param hidden_size: size of the FFN layers&#10;:param causal: whether embedding of a particular symbol should only depend on the symbols to the left&#10;:param generate_style: Two alternatives: 'standard' and 'in-place'. Suppose we are generating 4th symbol,&#10;after three symbols [s1 s2 s3] were generated.&#10;Then,&#10;'standard': [s1 s2 s3] -&gt; embeddings [[e1] [e2] [e3]] -&gt; (s4 = argmax(linear(e3)))&#10;'in-place': [s1 s2 s3] -&gt; [s1 s2 s3 &lt;need-symbol&gt;] -&gt; embeddings [[e1] [e2] [e3] [e4]] -&gt; (s4 = argmax(linear(e4)))&#10;:param force_eos: &lt;eos&gt; added to the end of each sequence&#10;" visibility="public" ownerScope="classifier" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="ueoU4HpIdzSEW" name="special_symbol_embedding" comment=":param agent: the agent to be wrapped, returns the &quot;encoder&quot; state vector, which is the unrolled into a message&#10;:param vocab_size: vocab size of the message&#10;:param embed_dim: embedding dimensions&#10;:param max_len: maximal length of the message (including &lt;eos&gt;)&#10;:param num_layers: number of transformer layers&#10;:param num_heads: number of attention heads&#10;:param hidden_size: size of the FFN layers&#10;:param causal: whether embedding of a particular symbol should only depend on the symbols to the left&#10;:param generate_style: Two alternatives: 'standard' and 'in-place'. Suppose we are generating 4th symbol,&#10;after three symbols [s1 s2 s3] were generated.&#10;Then,&#10;'standard': [s1 s2 s3] -&gt; embeddings [[e1] [e2] [e3]] -&gt; (s4 = argmax(linear(e3)))&#10;'in-place': [s1 s2 s3] -&gt; [s1 s2 s3 &lt;need-symbol&gt;] -&gt; embeddings [[e1] [e2] [e3] [e4]] -&gt; (s4 = argmax(linear(e4)))&#10;:param force_eos: &lt;eos&gt; added to the end of each sequence&#10;" visibility="public" type="uGEkuv3vwMzHp" initialValue="(torch.zeros(embed_dim))"/>
        <UML:Attribute isSpecification="false" xmi.id="uNHfXxxtfF2rO" name="embed_dim" comment=":param agent: the agent to be wrapped, returns the &quot;encoder&quot; state vector, which is the unrolled into a message&#10;:param vocab_size: vocab size of the message&#10;:param embed_dim: embedding dimensions&#10;:param max_len: maximal length of the message (including &lt;eos&gt;)&#10;:param num_layers: number of transformer layers&#10;:param num_heads: number of attention heads&#10;:param hidden_size: size of the FFN layers&#10;:param causal: whether embedding of a particular symbol should only depend on the symbols to the left&#10;:param generate_style: Two alternatives: 'standard' and 'in-place'. Suppose we are generating 4th symbol,&#10;after three symbols [s1 s2 s3] were generated.&#10;Then,&#10;'standard': [s1 s2 s3] -&gt; embeddings [[e1] [e2] [e3]] -&gt; (s4 = argmax(linear(e3)))&#10;'in-place': [s1 s2 s3] -&gt; [s1 s2 s3 &lt;need-symbol&gt;] -&gt; embeddings [[e1] [e2] [e3] [e4]] -&gt; (s4 = argmax(linear(e4)))&#10;:param force_eos: &lt;eos&gt; added to the end of each sequence&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uLLVbDRRQVHfp" name="vocab_size" comment=":param agent: the agent to be wrapped, returns the &quot;encoder&quot; state vector, which is the unrolled into a message&#10;:param vocab_size: vocab size of the message&#10;:param embed_dim: embedding dimensions&#10;:param max_len: maximal length of the message (including &lt;eos&gt;)&#10;:param num_layers: number of transformer layers&#10;:param num_heads: number of attention heads&#10;:param hidden_size: size of the FFN layers&#10;:param causal: whether embedding of a particular symbol should only depend on the symbols to the left&#10;:param generate_style: Two alternatives: 'standard' and 'in-place'. Suppose we are generating 4th symbol,&#10;after three symbols [s1 s2 s3] were generated.&#10;Then,&#10;'standard': [s1 s2 s3] -&gt; embeddings [[e1] [e2] [e3]] -&gt; (s4 = argmax(linear(e3)))&#10;'in-place': [s1 s2 s3] -&gt; [s1 s2 s3 &lt;need-symbol&gt;] -&gt; embeddings [[e1] [e2] [e3] [e4]] -&gt; (s4 = argmax(linear(e4)))&#10;:param force_eos: &lt;eos&gt; added to the end of each sequence&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uXUxgVB8HHvGm" name="embed_tokens" comment=":param agent: the agent to be wrapped, returns the &quot;encoder&quot; state vector, which is the unrolled into a message&#10;:param vocab_size: vocab size of the message&#10;:param embed_dim: embedding dimensions&#10;:param max_len: maximal length of the message (including &lt;eos&gt;)&#10;:param num_layers: number of transformer layers&#10;:param num_heads: number of attention heads&#10;:param hidden_size: size of the FFN layers&#10;:param causal: whether embedding of a particular symbol should only depend on the symbols to the left&#10;:param generate_style: Two alternatives: 'standard' and 'in-place'. Suppose we are generating 4th symbol,&#10;after three symbols [s1 s2 s3] were generated.&#10;Then,&#10;'standard': [s1 s2 s3] -&gt; embeddings [[e1] [e2] [e3]] -&gt; (s4 = argmax(linear(e3)))&#10;'in-place': [s1 s2 s3] -&gt; [s1 s2 s3 &lt;need-symbol&gt;] -&gt; embeddings [[e1] [e2] [e3] [e4]] -&gt; (s4 = argmax(linear(e4)))&#10;:param force_eos: &lt;eos&gt; added to the end of each sequence&#10;" visibility="public" type="u6yY1L4Y2wb9q" initialValue="(vocab_size,embed_dim)"/>
        <UML:Attribute isSpecification="false" xmi.id="urpQbIY6G85L0" name="embed_scale" comment=":param agent: the agent to be wrapped, returns the &quot;encoder&quot; state vector, which is the unrolled into a message&#10;:param vocab_size: vocab size of the message&#10;:param embed_dim: embedding dimensions&#10;:param max_len: maximal length of the message (including &lt;eos&gt;)&#10;:param num_layers: number of transformer layers&#10;:param num_heads: number of attention heads&#10;:param hidden_size: size of the FFN layers&#10;:param causal: whether embedding of a particular symbol should only depend on the symbols to the left&#10;:param generate_style: Two alternatives: 'standard' and 'in-place'. Suppose we are generating 4th symbol,&#10;after three symbols [s1 s2 s3] were generated.&#10;Then,&#10;'standard': [s1 s2 s3] -&gt; embeddings [[e1] [e2] [e3]] -&gt; (s4 = argmax(linear(e3)))&#10;'in-place': [s1 s2 s3] -&gt; [s1 s2 s3 &lt;need-symbol&gt;] -&gt; embeddings [[e1] [e2] [e3] [e4]] -&gt; (s4 = argmax(linear(e4)))&#10;:param force_eos: &lt;eos&gt; added to the end of each sequence&#10;" visibility="public" type="uubM1MA0Z9ck0" initialValue="(embed_dim)"/>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uHDkvvZzJd14t" name="__init__" comment="        :param agent: the agent to be wrapped, returns the &quot;encoder&quot; state vector, which is the unrolled into a message&#10;        :param vocab_size: vocab size of the message&#10;        :param embed_dim: embedding dimensions&#10;        :param max_len: maximal length of the message (including &lt;eos&gt;)&#10;        :param num_layers: number of transformer layers&#10;        :param num_heads: number of attention heads&#10;        :param hidden_size: size of the FFN layers&#10;        :param causal: whether embedding of a particular symbol should only depend on the symbols to the left&#10;        :param generate_style: Two alternatives: 'standard' and 'in-place'. Suppose we are generating 4th symbol,&#10;            after three symbols [s1 s2 s3] were generated.&#10;            Then,&#10;            'standard': [s1 s2 s3] -&gt; embeddings [[e1] [e2] [e3]] -&gt; (s4 = argmax(linear(e3)))&#10;            'in-place': [s1 s2 s3] -&gt; [s1 s2 s3 &lt;need-symbol&gt;] -&gt; embeddings [[e1] [e2] [e3] [e4]] -&gt; (s4 = argmax(linear(e4)))&#10;        :param force_eos: &lt;eos&gt; added to the end of each sequence&#10;" visibility="public" stereotype="constructor" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uyyHIWnvShvdh" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="unFPEBrplNxwW" name="agent" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uJSlgZX9Kd0PX" name="vocab_size" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uzxv3epdYUW9K" name="embed_dim" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uCJyU6BLkb7B0" name="max_len" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uqCIZG97qLq8c" name="num_layers" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u1A103fwoDxco" name="num_heads" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="ulPqy4jFJ8Zrf" name="hidden_size" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uKHN57t9OgKX1" name=";" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uqzXvzIfLlIJD" name="generate_style" visibility="private" type="u27FcBrsL7fnn" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uF7OT8fe9tLTy" name="causal" visibility="private" type="uR4u51QglJUwu" value="True"/>
          <UML:Parameter isSpecification="false" xmi.id="uFS2a01E4h1Zz" name="force_eos" visibility="private" type="uR4u51QglJUwu" value="True"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uUCft2QTacg07" name="generate_standard" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uIjqbV1p7H0IH" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uhS3yFnmFMV4Y" name="encoder_state" visibility="private" type="uUffSdhSc9MEm" value=""/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uQ9Ucb5Pik3r0" name="generate_inplace" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uskdzvdoD1FPQ" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uNXxUuNU2mXBZ" name="encoder_state" visibility="private" type="uUffSdhSc9MEm" value=""/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uYDelGiCS5AUf" name="forward" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="ug6lKHxnMxgmY" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uSEdORhZTz3P4" name="x" visibility="private" type="uUffSdhSc9MEm" value=""/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="u541UKD0VLPOJ" name="torch" namespace="Logical_View" visibility="public" stereotype="class-or-package">
       <UML:Namespace.ownedElement>
        <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uIRsQNKj1NSeP" name="arange" namespace="u541UKD0VLPOJ" visibility="public"/>
        <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uJUKEf16H7kEu" name="exp" namespace="u541UKD0VLPOJ" visibility="public"/>
        <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uf4iACv1tZ80g" name="tensor" namespace="u541UKD0VLPOJ" visibility="public"/>
        <UML:Package isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uaRTqDcce8AgB" name="nn" namespace="u541UKD0VLPOJ" visibility="public">
         <UML:Namespace.ownedElement>
          <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uuIJUqK3zuajQ" name="Module" namespace="uaRTqDcce8AgB" visibility="public"/>
          <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uuBCxAtCsLAbp" name="LayerNorm" namespace="uaRTqDcce8AgB" visibility="public"/>
          <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uJGyAvdfjYAvc" name="MultiheadAttention" namespace="uaRTqDcce8AgB" visibility="public"/>
          <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="ueuFx14cpL0sm" name="Linear" namespace="uaRTqDcce8AgB" visibility="public"/>
         </UML:Namespace.ownedElement>
        </UML:Package>
        <UML:Package isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="ujgHwuH3Pqeny" name="utils" namespace="u541UKD0VLPOJ" visibility="public">
         <UML:Namespace.ownedElement>
          <UML:Package isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="u3B8QKP9woasQ" name="data" namespace="ujgHwuH3Pqeny" visibility="public">
           <UML:Namespace.ownedElement>
            <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uxgE2dlNH0IcT" name="DataLoader" namespace="u3B8QKP9woasQ" visibility="public"/>
           </UML:Namespace.ownedElement>
          </UML:Package>
         </UML:Namespace.ownedElement>
        </UML:Package>
        <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uMBljuHhnYW0H" name="eye" namespace="u541UKD0VLPOJ" visibility="public"/>
        <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="u1VOp5lW7J9Xl" name="cat" namespace="u541UKD0VLPOJ" visibility="public"/>
       </UML:Namespace.ownedElement>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uegQR6CjKapeO" name="math" namespace="Logical_View" visibility="public" stereotype="class-or-package">
       <UML:Namespace.ownedElement>
        <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uubM1MA0Z9ck0" name="sqrt" namespace="uegQR6CjKapeO" visibility="public"/>
       </UML:Namespace.ownedElement>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uY1L2WXCFAbhY" name="Trainer" namespace="Logical_View" comment="    Implements the training logic. Some common configuration (checkpointing frequency, path, validation frequency)&#10;    is done by checking util.common_opts that is set via the CL.&#10;" visibility="public">
       <UML:Classifier.feature>
        <UML:Attribute isSpecification="false" xmi.id="uS3T8mCyQvj2w" name="game" comment=":param game: A nn.Module that implements forward(); it is expected that forward returns a tuple of (loss, d),&#10;where loss is differentiable loss to be minimized and d is a dictionary (potentially empty) with auxiliary&#10;metrics that would be aggregated and reported&#10;:param optimizer: An instance of torch.optim.Optimizer&#10;:param train_data: A DataLoader for the training set&#10;:param validation_data: A DataLoader for the validation set (can be None)&#10;:param device: A torch.device on which to tensors should be stored&#10;:param callbacks: A list of egg.core.Callback objects that can encapsulate monitoring or checkpointing&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uWan65ZC461WO" name="optimizer" comment=":param game: A nn.Module that implements forward(); it is expected that forward returns a tuple of (loss, d),&#10;where loss is differentiable loss to be minimized and d is a dictionary (potentially empty) with auxiliary&#10;metrics that would be aggregated and reported&#10;:param optimizer: An instance of torch.optim.Optimizer&#10;:param train_data: A DataLoader for the training set&#10;:param validation_data: A DataLoader for the validation set (can be None)&#10;:param device: A torch.device on which to tensors should be stored&#10;:param callbacks: A list of egg.core.Callback objects that can encapsulate monitoring or checkpointing&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="u0CvrRXEsrDja" name="train_data" comment=":param game: A nn.Module that implements forward(); it is expected that forward returns a tuple of (loss, d),&#10;where loss is differentiable loss to be minimized and d is a dictionary (potentially empty) with auxiliary&#10;metrics that would be aggregated and reported&#10;:param optimizer: An instance of torch.optim.Optimizer&#10;:param train_data: A DataLoader for the training set&#10;:param validation_data: A DataLoader for the validation set (can be None)&#10;:param device: A torch.device on which to tensors should be stored&#10;:param callbacks: A list of egg.core.Callback objects that can encapsulate monitoring or checkpointing&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="u4TMuDHCQHdFb" name="validation_data" comment=":param game: A nn.Module that implements forward(); it is expected that forward returns a tuple of (loss, d),&#10;where loss is differentiable loss to be minimized and d is a dictionary (potentially empty) with auxiliary&#10;metrics that would be aggregated and reported&#10;:param optimizer: An instance of torch.optim.Optimizer&#10;:param train_data: A DataLoader for the training set&#10;:param validation_data: A DataLoader for the validation set (can be None)&#10;:param device: A torch.device on which to tensors should be stored&#10;:param callbacks: A list of egg.core.Callback objects that can encapsulate monitoring or checkpointing&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uT4sYYgGQIwRQ" name="common_opts" comment=":param game: A nn.Module that implements forward(); it is expected that forward returns a tuple of (loss, d),&#10;where loss is differentiable loss to be minimized and d is a dictionary (potentially empty) with auxiliary&#10;metrics that would be aggregated and reported&#10;:param optimizer: An instance of torch.optim.Optimizer&#10;:param train_data: A DataLoader for the training set&#10;:param validation_data: A DataLoader for the validation set (can be None)&#10;:param device: A torch.device on which to tensors should be stored&#10;:param callbacks: A list of egg.core.Callback objects that can encapsulate monitoring or checkpointing&#10;" visibility="public" ownerScope="classifier" type="utO8aXIxJjnY6" initialValue="()"/>
        <UML:Attribute isSpecification="false" xmi.id="uQ5x9ypWTd9Rd" name="validation_freq" comment=":param game: A nn.Module that implements forward(); it is expected that forward returns a tuple of (loss, d),&#10;where loss is differentiable loss to be minimized and d is a dictionary (potentially empty) with auxiliary&#10;metrics that would be aggregated and reported&#10;:param optimizer: An instance of torch.optim.Optimizer&#10;:param train_data: A DataLoader for the training set&#10;:param validation_data: A DataLoader for the validation set (can be None)&#10;:param device: A torch.device on which to tensors should be stored&#10;:param callbacks: A list of egg.core.Callback objects that can encapsulate monitoring or checkpointing&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uLFxqfAt07V9H" name="device" comment=":param game: A nn.Module that implements forward(); it is expected that forward returns a tuple of (loss, d),&#10;where loss is differentiable loss to be minimized and d is a dictionary (potentially empty) with auxiliary&#10;metrics that would be aggregated and reported&#10;:param optimizer: An instance of torch.optim.Optimizer&#10;:param train_data: A DataLoader for the training set&#10;:param validation_data: A DataLoader for the validation set (can be None)&#10;:param device: A torch.device on which to tensors should be stored&#10;:param callbacks: A list of egg.core.Callback objects that can encapsulate monitoring or checkpointing&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uxVNQwi1CJASR" name="optimizer.state" comment=":param game: A nn.Module that implements forward(); it is expected that forward returns a tuple of (loss, d),&#10;where loss is differentiable loss to be minimized and d is a dictionary (potentially empty) with auxiliary&#10;metrics that would be aggregated and reported&#10;:param optimizer: An instance of torch.optim.Optimizer&#10;:param train_data: A DataLoader for the training set&#10;:param validation_data: A DataLoader for the validation set (can be None)&#10;:param device: A torch.device on which to tensors should be stored&#10;:param callbacks: A list of egg.core.Callback objects that can encapsulate monitoring or checkpointing&#10;NB: some optimizers pre-allocate buffers before actually doing any steps since model is placed on GPU within Trainer, this leads to having optimizer's state and model parameters on different devices. Here, we protect from that by moving optimizer's internal state to the proper device" visibility="public" type="u8fxeQ02S7jWh" initialValue="(self.optimizer.state,self.device)"/>
        <UML:Attribute isSpecification="false" xmi.id="uMggQM2FDaTcf" name="should_stop" comment=":param game: A nn.Module that implements forward(); it is expected that forward returns a tuple of (loss, d),&#10;where loss is differentiable loss to be minimized and d is a dictionary (potentially empty) with auxiliary&#10;metrics that would be aggregated and reported&#10;:param optimizer: An instance of torch.optim.Optimizer&#10;:param train_data: A DataLoader for the training set&#10;:param validation_data: A DataLoader for the validation set (can be None)&#10;:param device: A torch.device on which to tensors should be stored&#10;:param callbacks: A list of egg.core.Callback objects that can encapsulate monitoring or checkpointing&#10;NB: some optimizers pre-allocate buffers before actually doing any steps since model is placed on GPU within Trainer, this leads to having optimizer's state and model parameters on different devices. Here, we protect from that by moving optimizer's internal state to the proper device" visibility="public" type="uR4u51QglJUwu" initialValue="False"/>
        <UML:Attribute isSpecification="false" xmi.id="u2agAwIKkUDTw" name="start_epoch" comment=":param game: A nn.Module that implements forward(); it is expected that forward returns a tuple of (loss, d),&#10;where loss is differentiable loss to be minimized and d is a dictionary (potentially empty) with auxiliary&#10;metrics that would be aggregated and reported&#10;:param optimizer: An instance of torch.optim.Optimizer&#10;:param train_data: A DataLoader for the training set&#10;:param validation_data: A DataLoader for the validation set (can be None)&#10;:param device: A torch.device on which to tensors should be stored&#10;:param callbacks: A list of egg.core.Callback objects that can encapsulate monitoring or checkpointing&#10;NB: some optimizers pre-allocate buffers before actually doing any steps since model is placed on GPU within Trainer, this leads to having optimizer's state and model parameters on different devices. Here, we protect from that by moving optimizer's internal state to the proper device Can be overwritten by checkpoint loader" visibility="public" type="uenFS4WYhQUaR" initialValue="0"/>
        <UML:Attribute isSpecification="false" xmi.id="u76wym6ECHnYS" name="callbacks" comment=":param game: A nn.Module that implements forward(); it is expected that forward returns a tuple of (loss, d),&#10;where loss is differentiable loss to be minimized and d is a dictionary (potentially empty) with auxiliary&#10;metrics that would be aggregated and reported&#10;:param optimizer: An instance of torch.optim.Optimizer&#10;:param train_data: A DataLoader for the training set&#10;:param validation_data: A DataLoader for the validation set (can be None)&#10;:param device: A torch.device on which to tensors should be stored&#10;:param callbacks: A list of egg.core.Callback objects that can encapsulate monitoring or checkpointing&#10;NB: some optimizers pre-allocate buffers before actually doing any steps since model is placed on GPU within Trainer, this leads to having optimizer's state and model parameters on different devices. Here, we protect from that by moving optimizer's internal state to the proper device Can be overwritten by checkpoint loader" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="u4OIongQxYctM" name="d" comment=":param game: A nn.Module that implements forward(); it is expected that forward returns a tuple of (loss, d),&#10;where loss is differentiable loss to be minimized and d is a dictionary (potentially empty) with auxiliary&#10;metrics that would be aggregated and reported&#10;:param optimizer: An instance of torch.optim.Optimizer&#10;:param train_data: A DataLoader for the training set&#10;:param validation_data: A DataLoader for the validation set (can be None)&#10;:param device: A torch.device on which to tensors should be stored&#10;:param callbacks: A list of egg.core.Callback objects that can encapsulate monitoring or checkpointing&#10;NB: some optimizers pre-allocate buffers before actually doing any steps since model is placed on GPU within Trainer, this leads to having optimizer's state and model parameters on different devices. Here, we protect from that by moving optimizer's internal state to the proper device Can be overwritten by checkpoint loader" visibility="public" ownerScope="classifier" type="uMZ7W6Cxuel17" initialValue="(common_opts.checkpoint_dir)"/>
        <UML:Attribute isSpecification="false" xmi.id="uMY0S6EXBawht" name="checkpoint_path" comment=":param game: A nn.Module that implements forward(); it is expected that forward returns a tuple of (loss, d),&#10;where loss is differentiable loss to be minimized and d is a dictionary (potentially empty) with auxiliary&#10;metrics that would be aggregated and reported&#10;:param optimizer: An instance of torch.optim.Optimizer&#10;:param train_data: A DataLoader for the training set&#10;:param validation_data: A DataLoader for the validation set (can be None)&#10;:param device: A torch.device on which to tensors should be stored&#10;:param callbacks: A list of egg.core.Callback objects that can encapsulate monitoring or checkpointing&#10;NB: some optimizers pre-allocate buffers before actually doing any steps since model is placed on GPU within Trainer, this leads to having optimizer's state and model parameters on different devices. Here, we protect from that by moving optimizer's internal state to the proper device Can be overwritten by checkpoint loader" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uV9QiZUJrAKpA" name="checkpointer" comment=":param game: A nn.Module that implements forward(); it is expected that forward returns a tuple of (loss, d),&#10;where loss is differentiable loss to be minimized and d is a dictionary (potentially empty) with auxiliary&#10;metrics that would be aggregated and reported&#10;:param optimizer: An instance of torch.optim.Optimizer&#10;:param train_data: A DataLoader for the training set&#10;:param validation_data: A DataLoader for the validation set (can be None)&#10;:param device: A torch.device on which to tensors should be stored&#10;:param callbacks: A list of egg.core.Callback objects that can encapsulate monitoring or checkpointing&#10;NB: some optimizers pre-allocate buffers before actually doing any steps since model is placed on GPU within Trainer, this leads to having optimizer's state and model parameters on different devices. Here, we protect from that by moving optimizer's internal state to the proper device Can be overwritten by checkpoint loader" visibility="public" ownerScope="classifier" type="ujkpmbarKTBcG" initialValue="(self.checkpoint_path)"/>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uk99kgKFK4GZ7" name="__init__" comment="        :param game: A nn.Module that implements forward(); it is expected that forward returns a tuple of (loss, d),&#10;            where loss is differentiable loss to be minimized and d is a dictionary (potentially empty) with auxiliary&#10;            metrics that would be aggregated and reported&#10;        :param optimizer: An instance of torch.optim.Optimizer&#10;        :param train_data: A DataLoader for the training set&#10;        :param validation_data: A DataLoader for the validation set (can be None)&#10;        :param device: A torch.device on which to tensors should be stored&#10;        :param callbacks: A list of egg.core.Callback objects that can encapsulate monitoring or checkpointing&#10; NB: some optimizers pre-allocate buffers before actually doing any steps since model is placed on GPU within Trainer, this leads to having optimizer's state and model parameters on different devices. Here, we protect from that by moving optimizer's internal state to the proper device Can be overwritten by checkpoint loader Initializing model, trainer, and optimizer from {common_opts.load_from_checkpoint}&quot;)" visibility="public" stereotype="constructor" ownerScope="classifier" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uJ8bHR84TM0EF" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="u21SmhJvxHlJU" name=";" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="ufKcxJVsOhACC" name="self" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uR8tFFm6oYGbD" name="game" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="ufEigTBPkcqBH" name=":" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uEXM11Mh9wJtf" name="torch.nn.Module" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uhVpQTAm6qvKM" name="optimizer" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="udi63jNZ35YuK" name=":" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u4qqr1OToi0DH" name="torch.optim.Optimizer" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u6TFh8Hzt4qPa" name="train_data" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uKedGJJ2OMuRs" name=":" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uGw2yET8PV3ps" name="DataLoader" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u8egyHRkggCJw" name="validation_data" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="ujILXqjsl3sS2" name=":" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uD0uA26zsnkXo" name="Optional" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uoTSMbB1NjbAu" name="[" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uQeE96GinTRgI" name="DataLoader" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uhOUQJJ27zUHu" name="]" visibility="private" type="u27FcBrsL7fnn" value="None"/>
          <UML:Parameter isSpecification="false" xmi.id="uyQjPyGOhjgUY" name="device" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uJYBNf4kJ6OSJ" name=":" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u1Zuv8hcy1r4b" name="torch.device" visibility="private" type="u27FcBrsL7fnn" value="None"/>
          <UML:Parameter isSpecification="false" xmi.id="uNE7v8OxkWKMP" name="callbacks" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uOudOYtD7KPTc" name=":" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uGrRwU7U3NRly" name="Optional" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uAY0sGGEmUjM2" name="[" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uKATgZyki9GFZ" name="List" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="ulFGnwZCdwykL" name="[" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uvf05ekLAm0lk" name="Callback" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uvA0cmxStvNnv" name="]" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uzIucP18kjAbA" name="]" visibility="private" type="u27FcBrsL7fnn" value="None"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uLsigaAswLLq3" name="get_preemptive_checkpoint_dir" visibility="protected" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="ujmWD4uZoCEwe" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="u009eMWDxLp69" name="checkpoint_root" visibility="private" type="uUffSdhSc9MEm" value=""/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uHGsluzRpqC1i" name="eval" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="ujE0vaaetNg3V" type="uUffSdhSc9MEm" kind="return"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uLLJBTCwt5Zwl" name="train_epoch" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="ugPgBPcaPG1Nl" type="uUffSdhSc9MEm" kind="return"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uSPMHFrv0LQCZ" name="train" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uqIOIBT6cp8DU" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uy5ws59RFs2HN" name="n_epochs" visibility="private" type="uUffSdhSc9MEm" value=""/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uKIJsgDn7vB9M" name="load" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="u5gt9EVXhfP3R" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uqYrl69y9uosx" name="checkpoint" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uRclbdzzW1jzn" name=":" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uj1Moce6NDv8P" name="Checkpoint" visibility="private" type="uUffSdhSc9MEm" value=""/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uxkzYIcJMAl8T" name="load_from_checkpoint" comment="        Loads the game, agents, and optimizer state from a file&#10;        :param path: Path to the file&#10; loading trainer state from {path}')" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="usatDcmLzLkPu" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uJuTFAe4XPIJY" name="path" visibility="private" type="uUffSdhSc9MEm" value=""/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="ux9yg7V72AKb3" name="load_from_latest" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="umCnELqm7xh50" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="u5UZWZQGad6E4" name="path" visibility="private" type="uUffSdhSc9MEm" value=""/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="utO8aXIxJjnY6" name="get_opts" namespace="Logical_View" visibility="public"/>
      <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="u8fxeQ02S7jWh" name="move_to" namespace="Logical_View" visibility="public"/>
      <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uZj2u0fFpekHt" name="self" namespace="Logical_View" visibility="public" stereotype="class-or-package">
       <UML:Namespace.ownedElement>
        <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uMZ7W6Cxuel17" name="_get_preemptive_checkpoint_dir" namespace="uZj2u0fFpekHt" visibility="public"/>
       </UML:Namespace.ownedElement>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uUHH0cierxHxT" name="CompoTrainer" namespace="Logical_View" comment="    Implements the training logic. Some common configuration (checkpointing frequency, path, validation frequency)&#10;    is done by checking util.common_opts that is set via the CL.&#10;" visibility="public">
       <UML:Classifier.feature>
        <UML:Attribute isSpecification="false" xmi.id="uxr2EvFs2Ej6J" name="game" comment=":param game: A nn.Module that implements forward(); it is expected that forward returns a tuple of (loss, d),&#10;where loss is differentiable loss to be minimized and d is a dictionary (potentially empty) with auxiliary&#10;metrics that would be aggregated and reported&#10;:param optimizer: An instance of torch.optim.Optimizer&#10;:param train_data: A DataLoader for the training set&#10;:param validation_data: A DataLoader for the validation set (can be None)&#10;:param device: A torch.device on which to tensors should be stored&#10;:param callbacks: A list of egg.core.Callback objects that can encapsulate monitoring or checkpointing&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uO5DAzTBzQPRE" name="optimizer" comment=":param game: A nn.Module that implements forward(); it is expected that forward returns a tuple of (loss, d),&#10;where loss is differentiable loss to be minimized and d is a dictionary (potentially empty) with auxiliary&#10;metrics that would be aggregated and reported&#10;:param optimizer: An instance of torch.optim.Optimizer&#10;:param train_data: A DataLoader for the training set&#10;:param validation_data: A DataLoader for the validation set (can be None)&#10;:param device: A torch.device on which to tensors should be stored&#10;:param callbacks: A list of egg.core.Callback objects that can encapsulate monitoring or checkpointing&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="unflzhYkpGcJd" name="train_data" comment=":param game: A nn.Module that implements forward(); it is expected that forward returns a tuple of (loss, d),&#10;where loss is differentiable loss to be minimized and d is a dictionary (potentially empty) with auxiliary&#10;metrics that would be aggregated and reported&#10;:param optimizer: An instance of torch.optim.Optimizer&#10;:param train_data: A DataLoader for the training set&#10;:param validation_data: A DataLoader for the validation set (can be None)&#10;:param device: A torch.device on which to tensors should be stored&#10;:param callbacks: A list of egg.core.Callback objects that can encapsulate monitoring or checkpointing&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uYE4xqZYt2OqY" name="validation_data" comment=":param game: A nn.Module that implements forward(); it is expected that forward returns a tuple of (loss, d),&#10;where loss is differentiable loss to be minimized and d is a dictionary (potentially empty) with auxiliary&#10;metrics that would be aggregated and reported&#10;:param optimizer: An instance of torch.optim.Optimizer&#10;:param train_data: A DataLoader for the training set&#10;:param validation_data: A DataLoader for the validation set (can be None)&#10;:param device: A torch.device on which to tensors should be stored&#10;:param callbacks: A list of egg.core.Callback objects that can encapsulate monitoring or checkpointing&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uQFwbBjhkvq9J" name="common_opts" comment=":param game: A nn.Module that implements forward(); it is expected that forward returns a tuple of (loss, d),&#10;where loss is differentiable loss to be minimized and d is a dictionary (potentially empty) with auxiliary&#10;metrics that would be aggregated and reported&#10;:param optimizer: An instance of torch.optim.Optimizer&#10;:param train_data: A DataLoader for the training set&#10;:param validation_data: A DataLoader for the validation set (can be None)&#10;:param device: A torch.device on which to tensors should be stored&#10;:param callbacks: A list of egg.core.Callback objects that can encapsulate monitoring or checkpointing&#10;" visibility="public" ownerScope="classifier" type="utO8aXIxJjnY6" initialValue="()"/>
        <UML:Attribute isSpecification="false" xmi.id="uEHw2CixClgNa" name="validation_freq" comment=":param game: A nn.Module that implements forward(); it is expected that forward returns a tuple of (loss, d),&#10;where loss is differentiable loss to be minimized and d is a dictionary (potentially empty) with auxiliary&#10;metrics that would be aggregated and reported&#10;:param optimizer: An instance of torch.optim.Optimizer&#10;:param train_data: A DataLoader for the training set&#10;:param validation_data: A DataLoader for the validation set (can be None)&#10;:param device: A torch.device on which to tensors should be stored&#10;:param callbacks: A list of egg.core.Callback objects that can encapsulate monitoring or checkpointing&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="ueEd3b2osT9Rz" name="device" comment=":param game: A nn.Module that implements forward(); it is expected that forward returns a tuple of (loss, d),&#10;where loss is differentiable loss to be minimized and d is a dictionary (potentially empty) with auxiliary&#10;metrics that would be aggregated and reported&#10;:param optimizer: An instance of torch.optim.Optimizer&#10;:param train_data: A DataLoader for the training set&#10;:param validation_data: A DataLoader for the validation set (can be None)&#10;:param device: A torch.device on which to tensors should be stored&#10;:param callbacks: A list of egg.core.Callback objects that can encapsulate monitoring or checkpointing&#10;" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uyAy386rzvkQ1" name="optimizer.state" comment=":param game: A nn.Module that implements forward(); it is expected that forward returns a tuple of (loss, d),&#10;where loss is differentiable loss to be minimized and d is a dictionary (potentially empty) with auxiliary&#10;metrics that would be aggregated and reported&#10;:param optimizer: An instance of torch.optim.Optimizer&#10;:param train_data: A DataLoader for the training set&#10;:param validation_data: A DataLoader for the validation set (can be None)&#10;:param device: A torch.device on which to tensors should be stored&#10;:param callbacks: A list of egg.core.Callback objects that can encapsulate monitoring or checkpointing&#10;NB: some optimizers pre-allocate buffers before actually doing any steps since model is placed on GPU within Trainer, this leads to having optimizer's state and model parameters on different devices. Here, we protect from that by moving optimizer's internal state to the proper device" visibility="public" type="u8fxeQ02S7jWh" initialValue="(self.optimizer.state,self.device)"/>
        <UML:Attribute isSpecification="false" xmi.id="uEFsXtPrcjCUG" name="should_stop" comment=":param game: A nn.Module that implements forward(); it is expected that forward returns a tuple of (loss, d),&#10;where loss is differentiable loss to be minimized and d is a dictionary (potentially empty) with auxiliary&#10;metrics that would be aggregated and reported&#10;:param optimizer: An instance of torch.optim.Optimizer&#10;:param train_data: A DataLoader for the training set&#10;:param validation_data: A DataLoader for the validation set (can be None)&#10;:param device: A torch.device on which to tensors should be stored&#10;:param callbacks: A list of egg.core.Callback objects that can encapsulate monitoring or checkpointing&#10;NB: some optimizers pre-allocate buffers before actually doing any steps since model is placed on GPU within Trainer, this leads to having optimizer's state and model parameters on different devices. Here, we protect from that by moving optimizer's internal state to the proper device" visibility="public" type="uR4u51QglJUwu" initialValue="False"/>
        <UML:Attribute isSpecification="false" xmi.id="udlKcc2qra9Mn" name="start_epoch" comment=":param game: A nn.Module that implements forward(); it is expected that forward returns a tuple of (loss, d),&#10;where loss is differentiable loss to be minimized and d is a dictionary (potentially empty) with auxiliary&#10;metrics that would be aggregated and reported&#10;:param optimizer: An instance of torch.optim.Optimizer&#10;:param train_data: A DataLoader for the training set&#10;:param validation_data: A DataLoader for the validation set (can be None)&#10;:param device: A torch.device on which to tensors should be stored&#10;:param callbacks: A list of egg.core.Callback objects that can encapsulate monitoring or checkpointing&#10;NB: some optimizers pre-allocate buffers before actually doing any steps since model is placed on GPU within Trainer, this leads to having optimizer's state and model parameters on different devices. Here, we protect from that by moving optimizer's internal state to the proper device Can be overwritten by checkpoint loader" visibility="public" type="uenFS4WYhQUaR" initialValue="0"/>
        <UML:Attribute isSpecification="false" xmi.id="uGqX3dAF6Ds91" name="callbacks" comment=":param game: A nn.Module that implements forward(); it is expected that forward returns a tuple of (loss, d),&#10;where loss is differentiable loss to be minimized and d is a dictionary (potentially empty) with auxiliary&#10;metrics that would be aggregated and reported&#10;:param optimizer: An instance of torch.optim.Optimizer&#10;:param train_data: A DataLoader for the training set&#10;:param validation_data: A DataLoader for the validation set (can be None)&#10;:param device: A torch.device on which to tensors should be stored&#10;:param callbacks: A list of egg.core.Callback objects that can encapsulate monitoring or checkpointing&#10;NB: some optimizers pre-allocate buffers before actually doing any steps since model is placed on GPU within Trainer, this leads to having optimizer's state and model parameters on different devices. Here, we protect from that by moving optimizer's internal state to the proper device Can be overwritten by checkpoint loader" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uXF9SkMSDi5s5" name="n_attributes" comment=":param game: A nn.Module that implements forward(); it is expected that forward returns a tuple of (loss, d),&#10;where loss is differentiable loss to be minimized and d is a dictionary (potentially empty) with auxiliary&#10;metrics that would be aggregated and reported&#10;:param optimizer: An instance of torch.optim.Optimizer&#10;:param train_data: A DataLoader for the training set&#10;:param validation_data: A DataLoader for the validation set (can be None)&#10;:param device: A torch.device on which to tensors should be stored&#10;:param callbacks: A list of egg.core.Callback objects that can encapsulate monitoring or checkpointing&#10;NB: some optimizers pre-allocate buffers before actually doing any steps since model is placed on GPU within Trainer, this leads to having optimizer's state and model parameters on different devices. Here, we protect from that by moving optimizer's internal state to the proper device Can be overwritten by checkpoint loader" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uEAKaKgF326V2" name="n_values" comment=":param game: A nn.Module that implements forward(); it is expected that forward returns a tuple of (loss, d),&#10;where loss is differentiable loss to be minimized and d is a dictionary (potentially empty) with auxiliary&#10;metrics that would be aggregated and reported&#10;:param optimizer: An instance of torch.optim.Optimizer&#10;:param train_data: A DataLoader for the training set&#10;:param validation_data: A DataLoader for the validation set (can be None)&#10;:param device: A torch.device on which to tensors should be stored&#10;:param callbacks: A list of egg.core.Callback objects that can encapsulate monitoring or checkpointing&#10;NB: some optimizers pre-allocate buffers before actually doing any steps since model is placed on GPU within Trainer, this leads to having optimizer's state and model parameters on different devices. Here, we protect from that by moving optimizer's internal state to the proper device Can be overwritten by checkpoint loader" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uvLS1yARnfuvS" name="d" comment=":param game: A nn.Module that implements forward(); it is expected that forward returns a tuple of (loss, d),&#10;where loss is differentiable loss to be minimized and d is a dictionary (potentially empty) with auxiliary&#10;metrics that would be aggregated and reported&#10;:param optimizer: An instance of torch.optim.Optimizer&#10;:param train_data: A DataLoader for the training set&#10;:param validation_data: A DataLoader for the validation set (can be None)&#10;:param device: A torch.device on which to tensors should be stored&#10;:param callbacks: A list of egg.core.Callback objects that can encapsulate monitoring or checkpointing&#10;NB: some optimizers pre-allocate buffers before actually doing any steps since model is placed on GPU within Trainer, this leads to having optimizer's state and model parameters on different devices. Here, we protect from that by moving optimizer's internal state to the proper device Can be overwritten by checkpoint loader" visibility="public" ownerScope="classifier" type="uMZ7W6Cxuel17" initialValue="(common_opts.checkpoint_dir)"/>
        <UML:Attribute isSpecification="false" xmi.id="uXYimEkGwgnNv" name="checkpoint_path" comment=":param game: A nn.Module that implements forward(); it is expected that forward returns a tuple of (loss, d),&#10;where loss is differentiable loss to be minimized and d is a dictionary (potentially empty) with auxiliary&#10;metrics that would be aggregated and reported&#10;:param optimizer: An instance of torch.optim.Optimizer&#10;:param train_data: A DataLoader for the training set&#10;:param validation_data: A DataLoader for the validation set (can be None)&#10;:param device: A torch.device on which to tensors should be stored&#10;:param callbacks: A list of egg.core.Callback objects that can encapsulate monitoring or checkpointing&#10;NB: some optimizers pre-allocate buffers before actually doing any steps since model is placed on GPU within Trainer, this leads to having optimizer's state and model parameters on different devices. Here, we protect from that by moving optimizer's internal state to the proper device Can be overwritten by checkpoint loader" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="u1qNGQhBImImG" name="checkpointer" comment=":param game: A nn.Module that implements forward(); it is expected that forward returns a tuple of (loss, d),&#10;where loss is differentiable loss to be minimized and d is a dictionary (potentially empty) with auxiliary&#10;metrics that would be aggregated and reported&#10;:param optimizer: An instance of torch.optim.Optimizer&#10;:param train_data: A DataLoader for the training set&#10;:param validation_data: A DataLoader for the validation set (can be None)&#10;:param device: A torch.device on which to tensors should be stored&#10;:param callbacks: A list of egg.core.Callback objects that can encapsulate monitoring or checkpointing&#10;NB: some optimizers pre-allocate buffers before actually doing any steps since model is placed on GPU within Trainer, this leads to having optimizer's state and model parameters on different devices. Here, we protect from that by moving optimizer's internal state to the proper device Can be overwritten by checkpoint loader" visibility="public" ownerScope="classifier" type="ujkpmbarKTBcG" initialValue="(self.checkpoint_path)"/>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uusgMv44KZuVE" name="__init__" comment="        :param game: A nn.Module that implements forward(); it is expected that forward returns a tuple of (loss, d),&#10;            where loss is differentiable loss to be minimized and d is a dictionary (potentially empty) with auxiliary&#10;            metrics that would be aggregated and reported&#10;        :param optimizer: An instance of torch.optim.Optimizer&#10;        :param train_data: A DataLoader for the training set&#10;        :param validation_data: A DataLoader for the validation set (can be None)&#10;        :param device: A torch.device on which to tensors should be stored&#10;        :param callbacks: A list of egg.core.Callback objects that can encapsulate monitoring or checkpointing&#10; NB: some optimizers pre-allocate buffers before actually doing any steps since model is placed on GPU within Trainer, this leads to having optimizer's state and model parameters on different devices. Here, we protect from that by moving optimizer's internal state to the proper device Can be overwritten by checkpoint loader Initializing model, trainer, and optimizer from {common_opts.load_from_checkpoint}&quot;)" visibility="public" stereotype="constructor" ownerScope="classifier" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uRCXHvzmyk3TD" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uUpX7tEJumMAB" name=";" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="umcL41VHhcsKT" name="self" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="ukyDMwYCKGarx" name="n_attributes" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uUVv3xgA0KxOM" name=":" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uVtyDQXTVtuCt" name="int" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uVTmg9vYlyVdk" name="n_values" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uXTLCyy5OCXjg" name=":" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u25HEDPPuEB3g" name="int" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="usa2dUEeQboDs" name="game" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uXMtyAMTFa3wX" name=":" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uJM7ZeboAnTlz" name="torch.nn.Module" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="ut9vRXnt05Zmu" name="optimizer" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uT1aHnhxNcMOB" name=":" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uW9EYvx2g33M0" name="torch.optim.Optimizer" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uPoow7SdAomS5" name="train_data" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uZ1Dh5fCfyjmc" name=":" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uymEFlzJLRBgS" name="DataLoader" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u9tE8io8Rtf5y" name="validation_data" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uNrYVDWZLnhA8" name=":" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="umz1tBuNpO9ko" name="Optional" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="utnN3R8kZIFP3" name="[" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="ualRDBlbxP4W9" name="DataLoader" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uPBzco0V0ibhf" name="]" visibility="private" type="u27FcBrsL7fnn" value="None"/>
          <UML:Parameter isSpecification="false" xmi.id="ufwbfIiR0wugr" name="device" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="ui0PHcJ816g6M" name=":" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uXcDwmTAe9kcf" name="torch.device" visibility="private" type="u27FcBrsL7fnn" value="None"/>
          <UML:Parameter isSpecification="false" xmi.id="uMeM1V3SeWJha" name="callbacks" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uQYkZI6aew2LL" name=":" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uha5lfvNAV3D7" name="Optional" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u5k5WmPmGWxZV" name="[" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="upmzNONBodcBH" name="List" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u7F76Uk5ASVud" name="[" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uRHp7zFsoPWXR" name="Callback" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uEyqHYdj1ix10" name="]" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uzlblOGCLxoUY" name="]" visibility="private" type="u27FcBrsL7fnn" value="None"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uoBIfROj6Dby1" name="get_preemptive_checkpoint_dir" visibility="protected" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="u4ntR7F9keSNx" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uDRvDx1xMYCg1" name="checkpoint_root" visibility="private" type="uUffSdhSc9MEm" value=""/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uS92hutAlw7dE" name="eval" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="unlzdIb0TZqWz" type="uUffSdhSc9MEm" kind="return"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="udIfg8RRquJIJ" name="train_epoch" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="u0PyoCXRH2FNo" type="uUffSdhSc9MEm" kind="return"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uK34Iw6RCtxON" name="train" comment="scheduler = ReduceLROnPlateau(self.optimizer, 'min', patience=5, threshold=10**(-2))" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uDIUUMXrFOw9v" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uTGxdsi9nWk0L" name="n_epochs" visibility="private" type="uUffSdhSc9MEm" value=""/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uObiVqnT70K6x" name="load" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="usSGU3bvAnuND" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uhIF9io9YfTCX" name="checkpoint" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uXmTnK6W8TU4v" name=":" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uBlUjc1nuovYu" name="Checkpoint" visibility="private" type="uUffSdhSc9MEm" value=""/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="u8keLUDkSIFhx" name="load_from_checkpoint" comment="        Loads the game, agents, and optimizer state from a file&#10;        :param path: Path to the file&#10; loading trainer state from {path}')" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uCcT7HpqvUhNX" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="u6XUarku0AZHj" name="path" visibility="private" type="uUffSdhSc9MEm" value=""/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="u1jD1OkDnc6cH" name="load_from_latest" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="ucGmCHNAYmj2w" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uy0srALeqNCRI" name="path" visibility="private" type="uUffSdhSc9MEm" value=""/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uxBt1LkDZZbmJ" name="SinusoidalPositionEmbedding" namespace="Logical_View" comment="Implements sinusoidal positional embeddings" visibility="public">
       <UML:Classifier.feature>
        <UML:Attribute isSpecification="false" xmi.id="uRc9T40wZsPDs" name="pos" visibility="public" ownerScope="classifier" type="uIRsQNKj1NSeP" initialValue="(0.,max_len)"/>
        <UML:Attribute isSpecification="false" xmi.id="uKOMi1RFTz2z5" name="dim" visibility="public" ownerScope="classifier" type="uIRsQNKj1NSeP" initialValue="(0.,model_dim)"/>
        <UML:Attribute isSpecification="false" xmi.id="uZuAMOiJNrAi9" name="div" visibility="public" ownerScope="classifier" type="uJUKEf16H7kEu" initialValue="(-math.log(10000)*(2*(dim//2)/model_dim))"/>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uImbAmjwK9cK0" name="__init__" visibility="public" stereotype="constructor" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="urcmPuEc6pHhB" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uchOqAcjRJeyZ" name="max_len" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="unqAXDKBSYKaa" name=":" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uGEOtEOcMvdGT" name="int" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="ugGmbwIm481H2" name="model_dim" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uuuWvY0AyPGfk" name=":" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uRfepRV8iEGEA" name="int" visibility="private" type="uUffSdhSc9MEm" value=""/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="u5zz3DJx4AWH6" name="forward" comment="Updates the input embedding with positional embedding&#10;        Arguments:&#10;            x {torch.Tensor} -- Input tensor&#10;        Returns:&#10;            torch.Tensor -- Input updated with positional embeddings&#10;" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="unIwBIa0ht6Ko" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="u3yFASLLSzHuP" name="x" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="ueT8YA4VelsUo" name=":" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u6Ag0FwrSvOBA" name="torch.Tensor" visibility="private" type="uUffSdhSc9MEm" value=""/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uZfJjhXIXk7j0" name="TransformerBaseEncoder" namespace="Logical_View" comment="    Implements a basic Transformer Encoder module with fixed Sinusoidal embeddings.&#10;    Initializations of the parameters are adopted from fairseq.&#10;    Does not handle the masking w.r.t. message lengths, left-to-right order, etc.&#10;    This is supposed to be done on a higher level.&#10;" visibility="public">
       <UML:Classifier.feature>
        <UML:Attribute isSpecification="false" xmi.id="uBjQ6M12H7UQt" name="embedding" comment="NB: they use a different one" visibility="public" type="u6yY1L4Y2wb9q" initialValue="(vocab_size,embed_dim)"/>
        <UML:Attribute isSpecification="false" xmi.id="uszTqkRFqKWDC" name="embed_dim" comment="NB: they use a different one" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uWx3JoJuiDHnJ" name="max_source_positions" comment="NB: they use a different one" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uJAoP5hV6Cw4a" name="embed_scale" comment="NB: they use a different one" visibility="public" type="uubM1MA0Z9ck0" initialValue="(embed_dim)"/>
        <UML:Attribute isSpecification="false" xmi.id="uvRzwGTfM6bxf" name="embed_positions" comment="NB: they use a different one" visibility="public" type="uxBt1LkDZZbmJ" initialValue="(;max_len,embed_dim)"/>
        <UML:Attribute isSpecification="false" xmi.id="ucTtFPIyiPNvV" name="dropout" comment="NB: they use a different one" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uEkbhisszGUWS" name="layer_norm" comment="NB: they use a different one" visibility="public" type="uuBCxAtCsLAbp" initialValue="(embed_dim)"/>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uwCZsk4IX0MuS" name="__init__" comment=" NB: they use a different one" visibility="public" stereotype="constructor" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="urgLnNroUW8yH" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uyRCXp8KemX2C" name="vocab_size" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uGjpBUMIobWqn" name="max_len" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uN6KaquwwszGS" name="embed_dim" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="ukC7q2JU0bIbP" name="num_heads" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uJkMzoYFK9dMJ" name="num_layers" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uIqcRhaGE9Fyl" name="hidden_size" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u9ORANBhuxf5P" name=";" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uB4hBZOpSYUi0" name="p_dropout" visibility="private" type="uvBhCm6WK8jRM" value="0.0"/>
          <UML:Parameter isSpecification="false" xmi.id="uZrIg35JC0aTe" name="positional_embedding" visibility="private" type="uR4u51QglJUwu" value="True"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uIzWx7KRh9AKh" name="init_parameters" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uXfle4IX2i30d" type="uUffSdhSc9MEm" kind="return"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="u26NLWbXDGhaE" name="forward" comment=" embed tokens and positions B x T x C -&gt; T x B x C encoder layers  T x B x C -&gt; B x T x C" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="u8uLQb9F3HAuj" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uDpJOEH0C6m0C" name="src_tokens" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uIgZdODjMzoUT" name="key_padding_mask" visibility="private" type="u27FcBrsL7fnn" value="None"/>
          <UML:Parameter isSpecification="false" xmi.id="uNQENzkJgbjVX" name="attn_mask" visibility="private" type="u27FcBrsL7fnn" value="None"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uA6Ay2ZfrZ3B2" name="TransformerEncoderLayer" namespace="Logical_View" visibility="public">
       <UML:Classifier.feature>
        <UML:Attribute isSpecification="false" xmi.id="uW9K9NC9jO8aa" name="embed_dim" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uEWLT09DMkheT" name="self_attn" visibility="public" type="uJGyAvdfjYAvc" initialValue="(embed_dim=self.embed_dim,num_heads=num_heads,;dropout=attention_dropout)"/>
        <UML:Attribute isSpecification="false" xmi.id="uy4dmA1SW9qhE" name="dropout" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uXnJPmPOznkCo" name="activation_dropout" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uLIy4cXhGW71d" name="normalize_before" visibility="public" type="uR4u51QglJUwu" initialValue="True"/>
        <UML:Attribute isSpecification="false" xmi.id="ui8SoRKDpRlsL" name="fc1" visibility="public" type="ueuFx14cpL0sm" initialValue="(self.embed_dim,hidden_size)"/>
        <UML:Attribute isSpecification="false" xmi.id="uhJ7mgQ3XHIp6" name="fc2" visibility="public" type="ueuFx14cpL0sm" initialValue="(hidden_size,self.embed_dim)"/>
        <UML:Attribute isSpecification="false" xmi.id="uU77esmEevWWh" name="layer_norm" comment="it seems there are two ways to apply layer norm - before (in tensor2tensor code) or after (the original paper). We resort to the first as it is suggested to be more robust" visibility="public" type="uuBCxAtCsLAbp" initialValue="(self.embed_dim)"/>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uPSQr4q3LlF76" name="__init__" comment=" it seems there are two ways to apply layer norm - before (in tensor2tensor code) or after (the original paper). We resort to the first as it is suggested to be more robust" visibility="public" stereotype="constructor" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uuBYaOeOby880" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="upT77NMJjGyhk" name="embed_dim" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u6ze1I8DRSkCH" name="num_heads" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uIp8YUR9Hx7tf" name="hidden_size" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uMpPfQY7Io51w" name="dropout" visibility="private" type="uvBhCm6WK8jRM" value="0.0"/>
          <UML:Parameter isSpecification="false" xmi.id="uMV0AeQjkfz17" name="attention_dropout" visibility="private" type="uvBhCm6WK8jRM" value="0.0"/>
          <UML:Parameter isSpecification="false" xmi.id="uNUBPr9mBKZDa" name="activation_dropout" visibility="private" type="uvBhCm6WK8jRM" value="0.0"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uHgbGWhGGG7OF" name="forward" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uXn5X4V6LGtSl" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uIKRmY3y3EokD" name="x" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uICLQEAApmrCW" name="key_padding_mask" visibility="private" type="u27FcBrsL7fnn" value="None"/>
          <UML:Parameter isSpecification="false" xmi.id="uVc198DbhGtYa" name="attn_mask" visibility="private" type="u27FcBrsL7fnn" value="None"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="u4R2akylRtClF" name="init_parameters" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="usWv8TbOKemLV" type="uUffSdhSc9MEm" kind="return"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uZtkehQDEYodk" name="TransformerDecoder" namespace="Logical_View" comment="    Does not handle the masking w.r.t. message lengths, left-to-right order, etc.&#10;    This is supposed to be done on a higher level.&#10;" visibility="public">
       <UML:Classifier.feature>
        <UML:Attribute isSpecification="false" xmi.id="uY10YmBabReCQ" name="dropout" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="upTdSETGdTqr4" name="embed_positions" visibility="public" type="uxBt1LkDZZbmJ" initialValue="(max_len,embed_dim)"/>
        <UML:Attribute isSpecification="false" xmi.id="uqKMmNTbAKFgZ" name="layers" visibility="public" type="u0YeaWHYOPbYg" initialValue="([])"/>
        <UML:Attribute isSpecification="false" xmi.id="uX8FoLSwAmmSq" name="layer_norm" visibility="public" type="uuBCxAtCsLAbp" initialValue="(embed_dim)"/>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="un61vAWLODBbR" name="__init__" visibility="public" stereotype="constructor" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uY4PvGbyRirSs" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uPZhh5DjGJDI9" name="embed_dim" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uQZTaepQuwgnQ" name="max_len" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u8lw2IvbNKDh8" name="num_layers" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u3h0Ij71nwzrp" name=";" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u7bwJhlThf20r" name="num_heads" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uTj0B4CDpguHP" name="hidden_size" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uJGYGOSkXbtLk" name="dropout" visibility="private" type="uvBhCm6WK8jRM" value="0.0"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uNwi5H2JRItre" name="forward" comment=" embed positions B x T x C -&gt; T x B x C decoder layers T x B x C -&gt; B x T x C" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uIpTZeQm6W4gd" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uj5mOquJzlagi" name="embedded_input" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uolh7o6M2L5fM" name="encoder_out" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uoSIASsCCpfbr" name="key_mask" visibility="private" type="u27FcBrsL7fnn" value="None"/>
          <UML:Parameter isSpecification="false" xmi.id="u4XilwoN2odHC" name="attn_mask" visibility="private" type="u27FcBrsL7fnn" value="None"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="u3eoTHLFYDGeC" name="TransformerDecoderLayer" namespace="Logical_View" comment="Decoder layer block. Follows an implementation in fairseq with args.decoder_normalize_before=True,&#10;    i.e. order of operations is different from those in the original paper.&#10;" visibility="public">
       <UML:Classifier.feature>
        <UML:Attribute isSpecification="false" xmi.id="ukmPEUi4SxyKz" name="embed_dim" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uZT4CXkxH8y4M" name="self_attn" comment="self-attn?" visibility="public" type="uJGyAvdfjYAvc" initialValue="(;embed_dim=self.embed_dim,num_heads=num_heads,dropout=attention_dropout# self-attn?)"/>
        <UML:Attribute isSpecification="false" xmi.id="uWLginBOy8KZ8" name="dropout" comment="self-attn?" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uVPrBYQPEsURu" name="activation_dropout" comment="self-attn?" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uMdqYIi3e8Dwl" name="self_attn_layer_norm" comment="self-attn?" visibility="public" type="uuBCxAtCsLAbp" initialValue="(self.embed_dim)"/>
        <UML:Attribute isSpecification="false" xmi.id="uLjlh2njcZnsW" name="encoder_attn" comment="self-attn? NB: we pass encoder state as a single vector at the moment (form the user-defined module) hence this attention layer is somewhat degenerate/redundant. Nonetherless, we'll have it for (a) proper compatibility (b) in case we'll decide to pass multipel states" visibility="public" type="uJGyAvdfjYAvc" initialValue="(;embed_dim=self.embed_dim,num_heads=num_heads,dropout=attention_dropout)"/>
        <UML:Attribute isSpecification="false" xmi.id="uo3nWlxnD83dP" name="fc1" comment="self-attn? NB: we pass encoder state as a single vector at the moment (form the user-defined module) hence this attention layer is somewhat degenerate/redundant. Nonetherless, we'll have it for (a) proper compatibility (b) in case we'll decide to pass multipel states" visibility="public" type="ueuFx14cpL0sm" initialValue="(self.embed_dim,hidden_size)"/>
        <UML:Attribute isSpecification="false" xmi.id="uHk5q8RMniAkd" name="fc2" comment="self-attn? NB: we pass encoder state as a single vector at the moment (form the user-defined module) hence this attention layer is somewhat degenerate/redundant. Nonetherless, we'll have it for (a) proper compatibility (b) in case we'll decide to pass multipel states" visibility="public" type="ueuFx14cpL0sm" initialValue="(hidden_size,self.embed_dim)"/>
        <UML:Attribute isSpecification="false" xmi.id="umAgGJ1NCL0H5" name="layer_norm" comment="self-attn? NB: we pass encoder state as a single vector at the moment (form the user-defined module) hence this attention layer is somewhat degenerate/redundant. Nonetherless, we'll have it for (a) proper compatibility (b) in case we'll decide to pass multipel states" visibility="public" type="uuBCxAtCsLAbp" initialValue="(self.embed_dim)"/>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uS0fSSj7OtQGS" name="__init__" comment=" self-attn? NB: we pass encoder state as a single vector at the moment (form the user-defined module) hence this attention layer is somewhat degenerate/redundant. Nonetherless, we'll have it for (a) proper compatibility (b) in case we'll decide to pass multipel states" visibility="public" stereotype="constructor" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uOtWK7oIypskn" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="u4XxAieTAmptj" name="num_heads" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="us4YtWSnFEq7M" name="embed_dim" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uG1QuVvDfvBQL" name="hidden_size" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u17QtkMVRbDSx" name="dropout" visibility="private" type="uvBhCm6WK8jRM" value="0.0"/>
          <UML:Parameter isSpecification="false" xmi.id="ub4i5GA2brCRJ" name="attention_dropout" visibility="private" type="uvBhCm6WK8jRM" value="0.0"/>
          <UML:Parameter isSpecification="false" xmi.id="ux8qx1v7V1jmx" name="activation_dropout" visibility="private" type="uvBhCm6WK8jRM" value="0.0"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uVUjvNIBbwJq4" name="init_parameters" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uUt7fds3JqB7d" type="uUffSdhSc9MEm" kind="return"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uppRg8AbV3QnK" name="forward" comment=" would be a single vector, so no point in attention at all" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uvYZhNtyga4Ly" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uj6OzWCJ57ouq" name=";" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uKsUVxZhYpqP4" name="x" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uCWEU8j1BGH3l" name="encoder_out" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uyEwSHj8c4IeT" name="key_mask" visibility="private" type="u27FcBrsL7fnn" value="None"/>
          <UML:Parameter isSpecification="false" xmi.id="uQBSMeanltjkP" name="attn_mask" visibility="private" type="u27FcBrsL7fnn" value="None"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="u6FbX7ciLBRbw" name="Receiver" namespace="Logical_View" visibility="public">
       <UML:Classifier.feature>
        <UML:Attribute isSpecification="false" xmi.id="uRXgSyhFacIZ9" name="output" visibility="public" type="utQukrcRZuKrY" initialValue="(n_hidden,n_features)"/>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uhHQoNDabGcX5" name="__init__" visibility="public" stereotype="constructor" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uyr5HrTXKYNl9" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uJQ24z8HBDjwH" name="n_features" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="udCNSRmObYso1" name="n_hidden" visibility="private" type="uUffSdhSc9MEm" value=""/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uwYDaP50pYAqM" name="forward" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uRKIk6aNv41Jr" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="u0ihepe4PWzxE" name="x" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uVHs5ns90co7K" name="_input" visibility="private" type="uUffSdhSc9MEm" value=""/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="urkvoAMir0kfK" name="Sender" namespace="Logical_View" visibility="public">
       <UML:Classifier.feature>
        <UML:Attribute isSpecification="false" xmi.id="uhK3GwjkfLT5A" name="fc1" visibility="public" type="utQukrcRZuKrY" initialValue="(n_features,n_hidden)"/>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="usxIbFlSlPLW9" name="__init__" visibility="public" stereotype="constructor" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uC8rkzTBnv6AH" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="u9LG0o0XMu2D3" name="n_hidden" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uoEmZeV9PsFTP" name="n_features" visibility="private" type="uUffSdhSc9MEm" value=""/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="u65L5GxceEvrr" name="forward" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="ubaYH7pXwJRYn" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uBMdPUtT27I92" name="x" visibility="private" type="uUffSdhSc9MEm" value=""/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uGSnFwCy0ArWZ" name="_OneHotIterator" namespace="Logical_View" comment="    &gt;&gt;&gt; it_1 = _OneHotIterator(n_features=128, n_batches_per_epoch=2, batch_size=64, probs=np.ones(128)/128, seed=1)&#10;    &gt;&gt;&gt; it_2 = _OneHotIterator(n_features=128, n_batches_per_epoch=2, batch_size=64, probs=np.ones(128)/128, seed=1)&#10;    &gt;&gt;&gt; list(it_1)[0][0].allclose(list(it_2)[0][0])&#10;    True&#10;    &gt;&gt;&gt; it = _OneHotIterator(n_features=8, n_batches_per_epoch=1, batch_size=4, probs=np.ones(8)/8)&#10;    &gt;&gt;&gt; data = list(it)&#10;    &gt;&gt;&gt; len(data)&#10;    1&#10;    &gt;&gt;&gt; batch = data[0]&#10;    &gt;&gt;&gt; x, y = batch&#10;    &gt;&gt;&gt; x.size()&#10;    torch.Size([4, 8])&#10;    &gt;&gt;&gt; x.sum(dim=1)&#10;    tensor([1., 1., 1., 1.])&#10;    &gt;&gt;&gt; probs = np.zeros(128)&#10;    &gt;&gt;&gt; probs[0] = probs[1] = 0.5&#10;    &gt;&gt;&gt; it = _OneHotIterator(n_features=128, n_batches_per_epoch=1, batch_size=256, probs=probs, seed=1)&#10;    &gt;&gt;&gt; batch = list(it)[0][0]&#10;    &gt;&gt;&gt; batch[:, 0:2].sum().item()&#10;    256.0&#10;    &gt;&gt;&gt; batch[:, 2:].sum().item()&#10;    0.0&#10;" visibility="public">
       <UML:Classifier.feature>
        <UML:Attribute isSpecification="false" xmi.id="uOZ8SKCMbAgK2" name="n_batches_per_epoch" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uuiS4KMXG99lY" name="n_features" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uVn1v9Q69Juvo" name="batch_size" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uQdo3kQ96OZ6j" name="probs" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="upi10mTOKE9he" name="batches_generated" visibility="public" type="uenFS4WYhQUaR" initialValue="0"/>
        <UML:Attribute isSpecification="false" xmi.id="uBZmjMb6jnpO0" name="random_state" visibility="public" type="uZi2k1Wngh2tt" initialValue="(seed)"/>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uhnT3LjRGh8JI" name="__init__" visibility="public" stereotype="constructor" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uHq0hCO8F78Ck" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="upwPUy9VHpAGz" name="n_features" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u9CJOhjALYoiE" name="n_batches_per_epoch" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="ubJLaZxA3h22j" name="batch_size" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="upMCrhNEG50sJ" name="probs" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uVbBeGnzXFCWn" name="seed" visibility="private" type="u27FcBrsL7fnn" value="None"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uaHbv5l0Miz0q" name="iter__" visibility="private" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="udBurdBTPNomA" type="uUffSdhSc9MEm" kind="return"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uhjYnof5fNfau" name="next__" visibility="private" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uxDfN5PaB2SOf" type="uUffSdhSc9MEm" kind="return"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uza5z51id0aXe" name="np" namespace="Logical_View" visibility="public" stereotype="class-or-package">
       <UML:Namespace.ownedElement>
        <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uUazugxeV6SO6" name="random" namespace="uza5z51id0aXe" visibility="public" stereotype="class-or-package">
         <UML:Namespace.ownedElement>
          <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uZi2k1Wngh2tt" name="RandomState" namespace="uUazugxeV6SO6" visibility="public"/>
         </UML:Namespace.ownedElement>
        </UML:Class>
        <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="umwKupApBMz12" name="arange" namespace="uza5z51id0aXe" visibility="public"/>
       </UML:Namespace.ownedElement>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="u0OFlntDBwjDP" name="OneHotLoader" namespace="Logical_View" comment="    &gt;&gt;&gt; probs = np.ones(8) / 8&#10;    &gt;&gt;&gt; data_loader = OneHotLoader(n_features=8, batches_per_epoch=3, batch_size=2, probs=probs, seed=1)&#10;    &gt;&gt;&gt; epoch_1 = []&#10;    &gt;&gt;&gt; for batch in data_loader:&#10;    ...     epoch_1.append(batch)&#10;    &gt;&gt;&gt; [b[0].size() for b in epoch_1]&#10;    [torch.Size([2, 8]), torch.Size([2, 8]), torch.Size([2, 8])]&#10;    &gt;&gt;&gt; data_loader_other = OneHotLoader(n_features=8, batches_per_epoch=3, batch_size=2, probs=probs)&#10;    &gt;&gt;&gt; all_equal = True&#10;    &gt;&gt;&gt; for a, b in zip(data_loader, data_loader_other):&#10;    ...     all_equal = all_equal and (a[0] == b[0]).all()&#10;    &gt;&gt;&gt; all_equal.item()&#10;    0&#10;" visibility="public">
       <UML:Classifier.feature>
        <UML:Attribute isSpecification="false" xmi.id="u7D6hq4muAArB" name="seed" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="un1NEAEcmfujG" name="batches_per_epoch" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uyntmkzCrIEva" name="n_features" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uViBj21dhl6Sz" name="batch_size" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uXxY9Lb8ApFzO" name="probs" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="utCdQS76Pifzi" name="__init__" visibility="public" stereotype="constructor" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uaDLNo8zWzrJa" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uQA9wI30jul3O" name="n_features" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uhhmdiqKIZxyu" name="batches_per_epoch" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="umYuqcRzg8m7S" name="batch_size" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uDdTSU9VilQ7R" name="probs" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uPoly6NpJJK7J" name="seed" visibility="private" type="u27FcBrsL7fnn" value="None"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uLL7YYnd1UhQY" name="iter__" visibility="private" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="u9PnrjasOXDEn" type="uUffSdhSc9MEm" kind="return"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uP2PAkC0vGNIu" name="UniformLoader" namespace="Logical_View" visibility="public">
       <UML:Classifier.feature>
        <UML:Attribute isSpecification="false" xmi.id="uLEFwAlvnvWXN" name="batch" visibility="public" type="uMBljuHhnYW0H" initialValue="(n_features)"/>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uS7Yczg7CtDit" name="__init__" visibility="public" stereotype="constructor" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uLDNTvJmKoSug" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uumIyW602KRQO" name="n_features" visibility="private" type="uUffSdhSc9MEm" value=""/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uM9gcabMZtWLu" name="iter__" comment=" COMPOSITIONALITY" visibility="private" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="usrSS5G36RfX6" type="uUffSdhSc9MEm" kind="return"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uOVXpozitVXSN" name="_OneHotIteratorCompositionality" namespace="Logical_View" comment="    &gt;&gt;&gt; it_1 = _OneHotIterator(n_features=128, n_batches_per_epoch=2, batch_size=64, probs=np.ones(128)/128, seed=1)&#10;    &gt;&gt;&gt; it_2 = _OneHotIterator(n_features=128, n_batches_per_epoch=2, batch_size=64, probs=np.ones(128)/128, seed=1)&#10;    &gt;&gt;&gt; list(it_1)[0][0].allclose(list(it_2)[0][0])&#10;    True&#10;    &gt;&gt;&gt; it = _OneHotIterator(n_features=8, n_batches_per_epoch=1, batch_size=4, probs=np.ones(8)/8)&#10;    &gt;&gt;&gt; data = list(it)&#10;    &gt;&gt;&gt; len(data)&#10;    1&#10;    &gt;&gt;&gt; batch = data[0]&#10;    &gt;&gt;&gt; x, y = batch&#10;    &gt;&gt;&gt; x.size()&#10;    torch.Size([4, 8])&#10;    &gt;&gt;&gt; x.sum(dim=1)&#10;    tensor([1., 1., 1., 1.])&#10;    &gt;&gt;&gt; probs = np.zeros(128)&#10;    &gt;&gt;&gt; probs[0] = probs[1] = 0.5&#10;    &gt;&gt;&gt; it = _OneHotIterator(n_features=128, n_batches_per_epoch=1, batch_size=256, probs=probs, seed=1)&#10;    &gt;&gt;&gt; batch = list(it)[0][0]&#10;    &gt;&gt;&gt; batch[:, 0:2].sum().item()&#10;    256.0&#10;    &gt;&gt;&gt; batch[:, 2:].sum().item()&#10;    0.0&#10;" visibility="public">
       <UML:Classifier.feature>
        <UML:Attribute isSpecification="false" xmi.id="ujb8FYloVDoNo" name="n_batches_per_epoch" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uXjKMrlHpgdGK" name="batch_size" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="u0353Jth4pMHg" name="n_values" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uboP9F8Ebi0yZ" name="n_attributes" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uCzw0itRuj7Bo" name="probs_attributes" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uihktdmAtW8U4" name="probs" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uEOhw1ClMiVig" name="batches_generated" visibility="public" type="uenFS4WYhQUaR" initialValue="0"/>
        <UML:Attribute isSpecification="false" xmi.id="uLSk9coVEjzmO" name="random_state" visibility="public" type="uZi2k1Wngh2tt" initialValue="(seed)"/>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="u9lTGNXm0ZuT9" name="__init__" visibility="public" stereotype="constructor" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uzAcaLX5uAHUe" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uV4MgbSml5huB" name="n_values" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="um890nd5UVo07" name="n_attributes" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u24RidttdmX8Y" name="n_batches_per_epoch" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uHoQSDviT7uQR" name="batch_size" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uepeVSpPzAOLT" name="probs" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uyRZtz6wKm9bD" name="probs_attributes" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uqiP0cNrH14bw" name="seed" visibility="private" type="u27FcBrsL7fnn" value="None"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="ueT8EBzbXFgUc" name="iter__" visibility="private" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uKzUznDrZpGsf" type="uUffSdhSc9MEm" kind="return"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="u8l2sgNtwouIq" name="next__" comment=" Simple Ici on implemente le fait qu un attribut peut ne pas etre sampleif np.random.rand()&lt;self.probs_attributes[i]:    batch_data_att.append(self.random_state.multinomial(1, self.probs[i], size=self.batch_size).astype(float))else:    batch_data_att.append(0*self.random_state.multinomial(1, self.probs[i], size=self.batch_size).astype(float)) On gÃ¨re les couplesrd=np.random.rand(self.batch_size)onezero=(rd&lt;(0.4))*1zeroone=(rd&gt;(0.6))*1oneone=(rd&lt;(0.6))*1-(rd&lt;(0.4))*1i=0tirage1=self.random_state.multinomial(1, self.probs[i], size=self.batch_size).astype(float)tirage2=self.random_state.multinomial(1, self.probs[i], size=self.batch_size).astype(float)batch_data_att.append(np.expand_dims(onezero,1)*tirage1+np.expand_dims(oneone,1)*tirage1)batch_data_att.append(np.expand_dims(zeroone,1)*tirage2+np.expand_dims(oneone,1)*tirage2)if rd&lt;0.2:    batch_data_att.append(self.random_state.multinomial(1, self.probs[i], size=self.batch_size).astype(float))    batch_data_att.append(self.random_state.multinomial(1, self.probs[i], size=self.batch_size).astype(float))if rd&gt;0.2 and rd&lt;0.6:    batch_data_att.append(self.random_state.multinomial(1, self.probs[i], size=self.batch_size).astype(float))    batch_data_att.append(0*self.random_state.multinomial(1, self.probs[i], size=self.batch_size).astype(float))if rd&gt;0.6:    batch_data_att.append(0*self.random_state.multinomial(1, self.probs[i], size=self.batch_size).astype(float))    batch_data_att.append(self.random_state.multinomial(1, self.probs[i], size=self.batch_size).astype(float))" visibility="private" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uUhENbuF8F9QC" type="uUffSdhSc9MEm" kind="return"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="un7aE5R6hbALf" name="OneHotLoaderCompositionality" namespace="Logical_View" comment="    &gt;&gt;&gt; probs = np.ones(8) / 8&#10;    &gt;&gt;&gt; data_loader = OneHotLoader(n_features=8, batches_per_epoch=3, batch_size=2, probs=probs, seed=1)&#10;    &gt;&gt;&gt; epoch_1 = []&#10;    &gt;&gt;&gt; for batch in data_loader:&#10;    ...     epoch_1.append(batch)&#10;    &gt;&gt;&gt; [b[0].size() for b in epoch_1]&#10;    [torch.Size([2, 8]), torch.Size([2, 8]), torch.Size([2, 8])]&#10;    &gt;&gt;&gt; data_loader_other = OneHotLoader(n_features=8, batches_per_epoch=3, batch_size=2, probs=probs)&#10;    &gt;&gt;&gt; all_equal = True&#10;    &gt;&gt;&gt; for a, b in zip(data_loader, data_loader_other):&#10;    ...     all_equal = all_equal and (a[0] == b[0]).all()&#10;    &gt;&gt;&gt; all_equal.item()&#10;    0&#10;" visibility="public">
       <UML:Classifier.feature>
        <UML:Attribute isSpecification="false" xmi.id="uoRriiXAwQFbN" name="seed" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uXOztHhcdNmXE" name="batches_per_epoch" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uFXt9BSBJoETv" name="n_values" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uVfpEmNeI7fwe" name="n_attributes" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uXvR4gRdg9mzN" name="batch_size" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uTyeb04iHXMkS" name="probs_attributes" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="udyK836qwyb4j" name="probs" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="u6EOkUprYWgKe" name="__init__" visibility="public" stereotype="constructor" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uZMKNo4oiuQqB" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uk9Fj4jHNZAo6" name="n_values" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="ukkqwq7DKWL2L" name="n_attributes" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uKt1J56wIaoCE" name="batches_per_epoch" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uUe7D2rw3BewZ" name="batch_size" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u8uDewaSSQxR5" name="probs" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uVvwmCyZ2YiVD" name="probs_attributes" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="ugRDBBlBoKOfm" name="seed" visibility="private" type="u27FcBrsL7fnn" value="None"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uglePotyMTOCU" name="iter__" visibility="private" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uDorFFwSSep9t" type="uUffSdhSc9MEm" kind="return"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uhkx18OqixFht" name="TestLoaderCompositionality" namespace="Logical_View" visibility="public">
       <UML:Classifier.feature>
        <UML:Attribute isSpecification="false" xmi.id="ux8uuHDExaAIR" name="one_hots" visibility="public" ownerScope="classifier" type="uMBljuHhnYW0H" initialValue="(n_values)"/>
        <UML:Attribute isSpecification="false" xmi.id="ubk76Ce3DOLb6" name="val" visibility="public" ownerScope="classifier" type="umwKupApBMz12" initialValue="(n_values)"/>
        <UML:Attribute isSpecification="false" xmi.id="u0059Ykk4rW2P" name="combination" visibility="public" ownerScope="classifier" type="uskCRuNINri1y" initialValue="(itertools.product(val,repeat=n_attributes))"/>
        <UML:Attribute isSpecification="false" xmi.id="uehoQZU1aJU6V" name="dataset" visibility="public" ownerScope="classifier" type="uskCRuNINri1y" initialValue="[]"/>
        <UML:Attribute isSpecification="false" xmi.id="uben6oq26mrpT" name="batch" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="ucOLzomLyCpOk" name="__init__" visibility="public" stereotype="constructor" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uy1iMyLLXYXj3" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uSDN3Qd4nuuS6" name="n_values" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u3pWC69BYdLqZ" name="n_attributes" visibility="private" type="uUffSdhSc9MEm" value=""/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uY7OvpCeoJmRk" name="iter__" visibility="private" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="us9xpqSbllVMt" type="uUffSdhSc9MEm" kind="return"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uNPPKJL9lq9mG" name="SlurmWrapper" namespace="Logical_View" comment="    We assume that checkpointing is done within trainer, each epoch.&#10;" visibility="public">
       <UML:Classifier.feature>
        <UML:Attribute isSpecification="false" xmi.id="uK39kcXOXPckH" name="runnable" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uLWXfbjfBeYLt" name="args" visibility="public" type="u27FcBrsL7fnn" initialValue="None"/>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="ufaQyJFbZXeaf" name="__init__" visibility="public" stereotype="constructor" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uKrSjfBm7O8p9" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uT9RBT22DkQs4" name="runnable" visibility="private" type="uUffSdhSc9MEm" value=""/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uvHnowAjeIEJ2" name="call__" comment=" launching {json.dumps(args)}', flush=True)" visibility="private" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="u7BfgSKWu5dko" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="ulmG32rrJbw6P" name="args" visibility="private" type="uUffSdhSc9MEm" value=""/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uU7ZqnZwPOgzk" name="checkpoint" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uqgQUB1WRoLwi" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uG5qjAKTn1Maa" name="_something" visibility="private" type="uUffSdhSc9MEm" value=""/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uLHv0wRO9A8cu" name="ConcurrentWrapper" namespace="Logical_View" visibility="public">
       <UML:Classifier.feature>
        <UML:Attribute isSpecification="false" xmi.id="uG6T1ujTRxhLu" name="runnable" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="u5uXP6SIB4S2X" name="args" visibility="public" type="u27FcBrsL7fnn" initialValue="None"/>
        <UML:Attribute isSpecification="false" xmi.id="uffXCCo9wTEVv" name="log_dir" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="u2S1lRsRBmHrw" name="job_id" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="ujMElLunscJhe" name="__init__" visibility="public" stereotype="constructor" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uIr7SZ6baFxry" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uyZRKvOLmIjpI" name="runnable" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="ubkKU70PsKMAe" name="log_dir" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uqm1sb3yPqUre" name="job_id" visibility="private" type="uUffSdhSc9MEm" value=""/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="ufNDioo1K7rQi" name="call__" comment=" {json.dumps(args)}', flush=True)" visibility="private" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="utTKYBWqxPQtV" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uzQx6KfcgZnhM" name="args" visibility="private" type="uUffSdhSc9MEm" value=""/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uetd1S3U0L4zA" name="CallbackEvaluator" namespace="Logical_View" visibility="public">
       <UML:Classifier.feature>
        <UML:Attribute isSpecification="false" xmi.id="un4fKQc7IoAe5" name="dataset" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="ulWNGt14hxxDj" name="is_gs" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="u4dZwisNkFMq4" name="device" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="ugoJguW44Zeg5" name="loss" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uNmRR8JcZbUJL" name="var_length" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uo9QP6FpP3qpM" name="input_intervention" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="ucyAGkjgnGFc4" name="epoch" visibility="public" type="uenFS4WYhQUaR" initialValue="0"/>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="u5EzkVoWpfdoA" name="__init__" visibility="public" stereotype="constructor" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="ub6LwUoOZ3AED" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="unL42yoGLuYqC" name="dataset" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u62ir4gzVY8De" name="device" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="urmOQNe7xhhqt" name="is_gs" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uUSiFDcj5IvT0" name="loss" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u3Sb8EgvjVbWH" name="var_length" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uxdiQljMHpk8P" name="input_intervention" visibility="private" type="uR4u51QglJUwu" value="False"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="u0wpHraZ6Hxy1" name="intervention_message" comment=" if Reinforce, agents return tuples" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uXeAvpk6yhoOK" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="u8eKIJlB3FVbd" name="game" visibility="private" type="uUffSdhSc9MEm" value=""/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="utSANffpcsRKT" name="intervention_input" comment=" if Reinforce, agents return tuples" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="u9Yej4ly69qse" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="ujPo0JjYw0yR3" name="game" visibility="private" type="uUffSdhSc9MEm" value=""/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uWaIgkT8MWpTq" name="on_epoch_end" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="u0DSduSnG9x3o" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uMwWUYqY8YBcX" name="loss" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u0Ku6br0jFiqG" name=":" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uvFo75fuX76qr" name="float" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u465RaHywwQqX" name="logs" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uhJwZYeHun3kI" name=":" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uP7ACyTUl7rdF" name="Dict" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="ua55L3J0Cepoa" name="[" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="ujzCVhuibZuUJ" name="str" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uaIqKeuqzB4N7" name="Any" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="ujukEZpsKl9yi" name="]" visibility="private" type="u27FcBrsL7fnn" value="None"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uJnhlpe7bwIg3" name="validation" comment=" majority vote per message" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uVMIXM8bpQp2w" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uAZFHLLnDMV8U" name="game" visibility="private" type="uUffSdhSc9MEm" value=""/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Package isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uEgGMDwjxWoO1" name="core" namespace="Logical_View" visibility="public">
       <UML:Namespace.ownedElement>
        <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="udoHdslCCSR8U" name="Callback" namespace="uEgGMDwjxWoO1" visibility="public"/>
       </UML:Namespace.ownedElement>
      </UML:Package>
      <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uCa9BroQdqC5Z" name="AlwaysRelaxedWrapper" namespace="Logical_View" visibility="public">
       <UML:Classifier.feature>
        <UML:Attribute isSpecification="false" xmi.id="u7lWwWJKh8XXo" name="agent" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="um13ZuTnVkRV6" name="temperature" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uBjDfkaXpwWin" name="__init__" visibility="public" stereotype="constructor" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uuIJgce8YxcDE" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uhD1pkUA812jR" name="agent" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="urEr88hFZ4rY6" name="temperature" visibility="private" type="uvBhCm6WK8jRM" value="1.0"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uG0QwyZPn0SK7" name="forward" visibility="public" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="u4iH2qM45MvJY" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="ukxzPi9OE21Mv" name="*" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="ugvwTJojRSdnp" name="args" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="ucKIKX61xKvkF" name="*" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="umDPIegvihQKM" name="*" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="ulo4RFIIIMcl1" name="kwargs" visibility="private" type="uUffSdhSc9MEm" value=""/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uCdFnk9M6H2JO" name="TakeFirstLoader" namespace="Logical_View" visibility="public">
       <UML:Classifier.feature>
        <UML:Attribute isSpecification="false" xmi.id="uc5bxtLiqY67U" name="batches" visibility="public" ownerScope="classifier" type="uskCRuNINri1y" initialValue="[]"/>
        <UML:Attribute isSpecification="false" xmi.id="uc4BJQJFnf2sA" name="labels" visibility="public" type="u1VOp5lW7J9Xl" initialValue="([x[1]forxinbatches])"/>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uG1uUiW4XGmCL" name="__init__" visibility="public" stereotype="constructor" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="u3h1jAgNVRnHR" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uhXFfgKQbfwwM" name="loader" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u54mfXFCwer6b" name="n" visibility="private" type="uUffSdhSc9MEm" value=""/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="ulfAPFPuzbO6T" name="iter__" visibility="private" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uskjxF74GV37M" type="uUffSdhSc9MEm" kind="return"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="ukUvOmN2u1kJX" name="_SplitIterator" namespace="Logical_View" visibility="public">
       <UML:Classifier.feature>
        <UML:Attribute isSpecification="false" xmi.id="uYxUljfjwEkn9" name="iter" visibility="public" type="ukHAqstrYvZX6" initialValue="()"/>
        <UML:Attribute isSpecification="false" xmi.id="uURTQHLht4pHG" name="rows_sender" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uwdGnlpNtCIDs" name="rows_receiver" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uMF5OfQT9COR8" name="binarize" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uGB9lzqMmPo3T" name="receiver_bottom" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uUQFDVCh3j05c" name="__init__" visibility="public" stereotype="constructor" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uPFDxCyczq4lY" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="udpn2rl0HBJsO" name="loader" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uQ4Ozg5FEoiva" name="rows_sender" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="u4VQXuXDNBTTR" name="rows_receiver" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uiMcpmpNSuugT" name="binarize" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uAEugChhKwEgq" name="receiver_bottom" visibility="private" type="uUffSdhSc9MEm" value=""/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uvWB3bJFLY8c9" name="next__" visibility="private" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uZLMmVnTnXa8w" type="uUffSdhSc9MEm" kind="return"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uawdYNITEybST" name="loader" namespace="Logical_View" visibility="public" stereotype="class-or-package">
       <UML:Namespace.ownedElement>
        <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="ukHAqstrYvZX6" name="__iter__" namespace="uawdYNITEybST" visibility="public"/>
       </UML:Namespace.ownedElement>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="u3Sk7o1CVLk9F" name="SplitImages" namespace="Logical_View" visibility="public">
       <UML:Classifier.feature>
        <UML:Attribute isSpecification="false" xmi.id="uTCdDoZd6Rs6j" name="loader" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="u0AHD7LqPYqqF" name="rows_sender" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="uenapBdtvDt3e" name="rows_receiver" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="ugloiqwsxgbzg" name="binarize" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Attribute isSpecification="false" xmi.id="u9sewZFxiWY3K" name="receiver_bottom" visibility="public" type="u27FcBrsL7fnn"/>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uc8CPWDeWXTjd" name="__init__" visibility="public" stereotype="constructor" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uznjTtIdGFKqq" type="uUffSdhSc9MEm" kind="return"/>
          <UML:Parameter isSpecification="false" xmi.id="uT44PjuDrxTJT" name="loader" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uxxuCZuU0zQUq" name="rows_sender" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uJRn7tXPDkaPw" name="rows_receiver" visibility="private" type="uUffSdhSc9MEm" value=""/>
          <UML:Parameter isSpecification="false" xmi.id="uimUQ8tvyjrCL" name="binarize" visibility="private" type="uR4u51QglJUwu" value="False"/>
          <UML:Parameter isSpecification="false" xmi.id="uM4zSo3lWOi5N" name="receiver_bottom" visibility="private" type="uR4u51QglJUwu" value="True"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="u2Be3QLL4RnKZ" name="iter__" visibility="private" isQuery="false" isOverride="false" isVirtual="false" isInline="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uwTNh41cfdpNU" type="uUffSdhSc9MEm" kind="return"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="uvy4amTpq3oCo" name="Checkpoint_1" namespace="Logical_View" visibility="public"/>
     </UML:Namespace.ownedElement>
     <XMI.extension xmi.extender="umbrello">
      <diagrams resolution="96">
       <diagram xmi.id="uJ6BuoF4byGed" name="Diagramme de classes" type="1" documentation="" backgroundcolor="#ffffff" fillcolor="#ffffc0" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" griddotcolor="#f7f7f7" linecolor="#990000" linewidth="0" textcolor="#000000" usefillcolor="1" showattribassocs="1" showatts="1" showattsig="1" showops="1" showopsig="1" showpackage="1" showpubliconly="0" showscope="1" showstereotype="2" localid="-1" showgrid="0" snapgrid="0" snapcsgrid="0" snapx="25" snapy="25" zoom="20" canvasheight="3957.96" canvaswidth="6200" isopen="1">
        <widgets>
         <classwidget xmi.id="uGSnFwCy0ArWZ" localid="uJwf5bDD0UIJA" textcolor="#000000" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="0" usesdiagramusefillcolor="0" fillcolor="#ffffc0" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="496" y="-212" width="674" height="140" isinstance="0" showstereotype="2" showoperations="1" showpubliconly="0" showopsigs="601" showpackage="1" showscope="1" showattributes="1" showattsigs="601" showstereotype="2"/>
         <classwidget xmi.id="uK5nCihpn0o3r" localid="uO75GerxU3Jyo" textcolor="#000000" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="0" usesdiagramusefillcolor="0" fillcolor="#ffffc0" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="1318.58" y="1662.65" width="724" height="77" isinstance="0" showstereotype="2" showoperations="1" showpubliconly="0" showopsigs="601" showpackage="1" showscope="1" showattributes="1" showattsigs="601" showstereotype="2"/>
         <classwidget xmi.id="u1xe170GOaaMh" localid="uyXoqlxtVXWVd" textcolor="#000000" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="0" usesdiagramusefillcolor="0" fillcolor="#ffffc0" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="2164.74" y="1435.45" width="724" height="105" isinstance="0" showstereotype="2" showoperations="1" showpubliconly="0" showopsigs="601" showpackage="1" showscope="1" showattributes="1" showattsigs="601" showstereotype="2"/>
         <classwidget xmi.id="uOVXpozitVXSN" localid="ujb6lDg5GhnpW" textcolor="#000000" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="0" usesdiagramusefillcolor="0" fillcolor="#ffffc0" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="907" y="-498" width="886" height="168" isinstance="0" showstereotype="2" showoperations="1" showpubliconly="0" showopsigs="601" showpackage="1" showscope="1" showattributes="1" showattsigs="601" showstereotype="2"/>
         <classwidget xmi.id="uetd1S3U0L4zA" localid="u8F5AgpejHVoq" textcolor="#000000" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="0" usesdiagramusefillcolor="0" fillcolor="#ffffc0" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="-1755.81" y="1651.61" width="724" height="182" isinstance="0" showstereotype="2" showoperations="1" showpubliconly="0" showopsigs="601" showpackage="1" showscope="1" showattributes="1" showattsigs="601" showstereotype="2"/>
         <classwidget xmi.id="us0LnAGmSsTJZ" localid="uKzg4krbjUOQI" textcolor="#000000" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="0" usesdiagramusefillcolor="0" fillcolor="#ffffc0" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="-1260" y="-1390" width="63" height="28" isinstance="0" showstereotype="2" showoperations="1" showpubliconly="0" showopsigs="601" showpackage="1" showscope="1" showattributes="1" showattsigs="601" showstereotype="2"/>
         <classwidget xmi.id="ukUvOmN2u1kJX" localid="uYrWtfVUd2u3p" textcolor="#000000" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="0" usesdiagramusefillcolor="0" fillcolor="#ffffc0" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="-1742.81" y="-1980.87" width="656" height="112" isinstance="0" showstereotype="2" showoperations="1" showpubliconly="0" showopsigs="601" showpackage="1" showscope="1" showattributes="1" showattsigs="601" showstereotype="2"/>
         <classwidget xmi.id="uCa9BroQdqC5Z" localid="uxXov7rXltbIM" textcolor="#000000" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="0" usesdiagramusefillcolor="0" fillcolor="#ffffc0" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="2046.1" y="717.29" width="382" height="70" isinstance="0" showstereotype="2" showoperations="1" showpubliconly="0" showopsigs="601" showpackage="1" showscope="1" showattributes="1" showattsigs="601" showstereotype="2"/>
         <classwidget xmi.id="udoHdslCCSR8U" localid="uLrL7hMSHwoM4" textcolor="#000000" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="0" usesdiagramusefillcolor="0" fillcolor="#ffffc0" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="-2060.59" y="-1379.12" width="78" height="28" isinstance="0" showstereotype="2" showoperations="1" showpubliconly="0" showopsigs="601" showpackage="1" showscope="1" showattributes="1" showattsigs="601" showstereotype="2"/>
         <packagewidget xmi.id="uEgGMDwjxWoO1" localid="u61whRk0yz1p4" textcolor="#000000" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="0" usesdiagramusefillcolor="0" fillcolor="#ffffc0" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="-1975" y="-1490" width="70" height="38" isinstance="0" showstereotype="2"/>
         <classwidget xmi.id="uSSnPGBge6Wsv" localid="uT6MpfIO48CeE" textcolor="#000000" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="0" usesdiagramusefillcolor="0" fillcolor="#ffffc0" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="-768" y="-1132" width="1000" height="196" isinstance="0" showstereotype="2" showoperations="1" showpubliconly="0" showopsigs="601" showpackage="1" showscope="1" showattributes="1" showattsigs="601" showstereotype="2"/>
         <classwidget xmi.id="uKpu0UUOucg4K" localid="uoAfvJcSSRiGr" textcolor="#000000" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="0" usesdiagramusefillcolor="0" fillcolor="#ffffc0" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="-1970" y="815" width="565" height="70" isinstance="0" showstereotype="2" showoperations="1" showpubliconly="0" showopsigs="601" showpackage="1" showscope="1" showattributes="1" showattsigs="601" showstereotype="2"/>
         <classwidget xmi.id="uxBt1LkDZZbmJ" localid="u1SimEpvnNZID" textcolor="#000000" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="0" usesdiagramusefillcolor="0" fillcolor="#ffffc0" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="2126" y="-461" width="551" height="84" isinstance="0" showstereotype="2" showoperations="1" showpubliconly="0" showopsigs="601" showpackage="1" showscope="1" showattributes="1" showattsigs="601" showstereotype="2"/>
         <classwidget xmi.id="uTyahUt3MfYmK" localid="uTLdiTbR9qn3N" textcolor="#000000" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="0" usesdiagramusefillcolor="0" fillcolor="#ffffc0" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="1444" y="1441" width="504" height="98" isinstance="0" showstereotype="2" showoperations="1" showpubliconly="0" showopsigs="601" showpackage="1" showscope="1" showattributes="1" showattsigs="601" showstereotype="2"/>
         <classwidget xmi.id="ukHAqstrYvZX6" localid="u8LP2D7ZdZU4s" textcolor="#000000" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="0" usesdiagramusefillcolor="0" fillcolor="#ffffc0" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="-1575" y="-1605" width="84" height="28" isinstance="0" showstereotype="2" showoperations="1" showpubliconly="0" showopsigs="601" showpackage="1" showscope="1" showattributes="1" showattsigs="601" showstereotype="2"/>
         <classwidget xmi.id="utO8aXIxJjnY6" localid="upCdIz5F3q1OS" textcolor="#000000" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="0" usesdiagramusefillcolor="0" fillcolor="#ffffc0" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="860" y="-1670" width="51" height="28" isinstance="0" showstereotype="2" showoperations="1" showpubliconly="0" showopsigs="601" showpackage="1" showscope="1" showattributes="1" showattsigs="601" showstereotype="2"/>
         <classwidget xmi.id="u8fxeQ02S7jWh" localid="uTI9eKnkwo2ia" textcolor="#000000" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="0" usesdiagramusefillcolor="0" fillcolor="#ffffc0" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="715" y="-2105" width="52" height="28" isinstance="0" showstereotype="2" showoperations="1" showpubliconly="0" showopsigs="601" showpackage="1" showscope="1" showattributes="1" showattsigs="601" showstereotype="2"/>
         <classwidget xmi.id="u08XfPKrjDA8q" localid="uz7QyAqOpB3uE" textcolor="#000000" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="0" usesdiagramusefillcolor="0" fillcolor="#ffffc0" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="-2698.12" y="-76.4706" width="1000" height="84" isinstance="0" showstereotype="2" showoperations="1" showpubliconly="0" showopsigs="601" showpackage="1" showscope="1" showattributes="1" showattsigs="601" showstereotype="2"/>
         <classwidget xmi.id="uhkx18OqixFht" localid="uQ6pxyOxhCDW8" textcolor="#000000" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="0" usesdiagramusefillcolor="0" fillcolor="#ffffc0" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="280" y="655" width="352" height="112" isinstance="0" showstereotype="2" showoperations="1" showpubliconly="0" showopsigs="601" showpackage="1" showscope="1" showattributes="1" showattsigs="601" showstereotype="2"/>
         <classwidget xmi.id="uZfJjhXIXk7j0" localid="ur9RJaCQhPPfU" textcolor="#000000" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="0" usesdiagramusefillcolor="0" fillcolor="#ffffc0" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="1575" y="-764" width="1000" height="154" isinstance="0" showstereotype="2" showoperations="1" showpubliconly="0" showopsigs="601" showpackage="1" showscope="1" showattributes="1" showattsigs="601" showstereotype="2"/>
         <classwidget xmi.id="uZtkehQDEYodk" localid="uaysVhN57ikb2" textcolor="#000000" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="0" usesdiagramusefillcolor="0" fillcolor="#ffffc0" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="1577" y="-225" width="795" height="98" isinstance="0" showstereotype="2" showoperations="1" showpubliconly="0" showopsigs="601" showpackage="1" showscope="1" showattributes="1" showattsigs="601" showstereotype="2"/>
         <classwidget xmi.id="uha2A7b5LYM86" localid="uwpuUS1a5QYoO" textcolor="#000000" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="0" usesdiagramusefillcolor="0" fillcolor="#ffffc0" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="355" y="830" width="1000" height="210" isinstance="0" showstereotype="2" showoperations="1" showpubliconly="0" showopsigs="601" showpackage="1" showscope="1" showattributes="1" showattsigs="601" showstereotype="2"/>
         <classwidget xmi.id="uVwx4FBJ2eClZ" localid="uV7J68vnAScqs" textcolor="#000000" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="0" usesdiagramusefillcolor="0" fillcolor="#ffffc0" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="439" y="1440" width="724" height="98" isinstance="0" showstereotype="2" showoperations="1" showpubliconly="0" showopsigs="601" showpackage="1" showscope="1" showattributes="1" showattsigs="601" showstereotype="2"/>
         <classwidget xmi.id="u6OViyPQvkDVI" localid="u6W2uhigyRvZ7" textcolor="#000000" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="0" usesdiagramusefillcolor="0" fillcolor="#ffffc0" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="-1764" y="1434" width="724" height="77" isinstance="0" showstereotype="2" showoperations="1" showpubliconly="0" showopsigs="601" showpackage="1" showscope="1" showattributes="1" showattsigs="601" showstereotype="2"/>
         <classwidget xmi.id="uCyRkXQjDFtyh" localid="uoIuLqCDzYMdL" textcolor="#000000" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="0" usesdiagramusefillcolor="0" fillcolor="#ffffc0" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="-2980" y="1440" width="898" height="210" isinstance="0" showstereotype="2" showoperations="1" showpubliconly="0" showopsigs="601" showpackage="1" showscope="1" showattributes="1" showattsigs="601" showstereotype="2"/>
         <classwidget xmi.id="uMZ7W6Cxuel17" localid="uN4uhESNKWeOZ" textcolor="#000000" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="0" usesdiagramusefillcolor="0" fillcolor="#ffffc0" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="835" y="-1835" width="190" height="28" isinstance="0" showstereotype="2" showoperations="1" showpubliconly="0" showopsigs="601" showpackage="1" showscope="1" showattributes="1" showattsigs="601" showstereotype="2"/>
         <classwidget xmi.id="uLHv0wRO9A8cu" localid="usB22T1AoUl1j" textcolor="#000000" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="0" usesdiagramusefillcolor="0" fillcolor="#ffffc0" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="1520.16" y="699.194" width="403" height="98" isinstance="0" showstereotype="2" showoperations="1" showpubliconly="0" showopsigs="601" showpackage="1" showscope="1" showattributes="1" showattsigs="601" showstereotype="2"/>
         <classwidget xmi.id="uIRwnff8JiLL7" localid="uFf9nrJSfcrSA" textcolor="#000000" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="0" usesdiagramusefillcolor="0" fillcolor="#ffffc0" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="-647.742" y="-715.484" width="1000" height="238" isinstance="0" showstereotype="2" showoperations="1" showpubliconly="0" showopsigs="601" showpackage="1" showscope="1" showattributes="1" showattsigs="601" showstereotype="2"/>
         <classwidget xmi.id="u640GIhdzSsWO" localid="u7CmwHdyvBt94" textcolor="#000000" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="0" usesdiagramusefillcolor="0" fillcolor="#ffffc0" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="-3145" y="-380" width="872" height="84" isinstance="0" showstereotype="2" showoperations="1" showpubliconly="0" showopsigs="601" showpackage="1" showscope="1" showattributes="1" showattsigs="601" showstereotype="2"/>
         <classwidget xmi.id="upvTFWYeRouE9" localid="ueYne1CL2ed0y" textcolor="#000000" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="0" usesdiagramusefillcolor="0" fillcolor="#ffffc0" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="-3017.13" y="-869.536" width="696" height="70" isinstance="0" showstereotype="2" showoperations="1" showpubliconly="0" showopsigs="601" showpackage="1" showscope="1" showattributes="1" showattsigs="601" showstereotype="2"/>
         <classwidget xmi.id="u0vcc7HEx8M7Q" localid="uyJOUobdTdNNB" textcolor="#000000" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="0" usesdiagramusefillcolor="0" fillcolor="#ffffc0" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="896.176" y="144.118" width="456" height="70" isinstance="0" showstereotype="2" showoperations="1" showpubliconly="0" showopsigs="601" showpackage="1" showscope="1" showattributes="1" showattsigs="601" showstereotype="2"/>
         <classwidget xmi.id="uCdFnk9M6H2JO" localid="ukgx815MGVulq" textcolor="#000000" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="0" usesdiagramusefillcolor="0" fillcolor="#ffffc0" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="550" y="1130" width="289" height="70" isinstance="0" showstereotype="2" showoperations="1" showpubliconly="0" showopsigs="601" showpackage="1" showscope="1" showattributes="1" showattsigs="601" showstereotype="2"/>
         <classwidget xmi.id="uY1L2WXCFAbhY" localid="utR8amLMXG9dF" textcolor="#000000" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="0" usesdiagramusefillcolor="0" fillcolor="#ffffc0" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="1515" y="-1985" width="1000" height="322" isinstance="0" showstereotype="2" showoperations="1" showpubliconly="0" showopsigs="601" showpackage="1" showscope="1" showattributes="1" showattsigs="601" showstereotype="2"/>
         <classwidget xmi.id="uQgj2DQKRlkip" localid="uSkzCZDhCwaRo" textcolor="#000000" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="0" usesdiagramusefillcolor="0" fillcolor="#ffffc0" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="-734.561" y="-247.601" width="1000" height="224" isinstance="0" showstereotype="2" showoperations="1" showpubliconly="0" showopsigs="601" showpackage="1" showscope="1" showattributes="1" showattsigs="601" showstereotype="2"/>
         <classwidget xmi.id="uXYedYOcc5LRM" localid="uTrtXkLHzR89R" textcolor="#000000" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="0" usesdiagramusefillcolor="0" fillcolor="#ffffc0" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="-1800" y="-795" width="696" height="70" isinstance="0" showstereotype="2" showoperations="1" showpubliconly="0" showopsigs="601" showpackage="1" showscope="1" showattributes="1" showattsigs="601" showstereotype="2"/>
         <classwidget xmi.id="uBYWpuukh3wTs" localid="uTH6iRVBLKJu2" textcolor="#000000" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="0" usesdiagramusefillcolor="0" fillcolor="#ffffc0" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="-650" y="-1460" width="1000" height="196" isinstance="0" showstereotype="2" showoperations="1" showpubliconly="0" showopsigs="601" showpackage="1" showscope="1" showattributes="1" showattsigs="601" showstereotype="2"/>
         <classwidget xmi.id="u3Sk7o1CVLk9F" localid="uSOczxZlVCCGE" textcolor="#000000" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="0" usesdiagramusefillcolor="0" fillcolor="#ffffc0" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="910" y="1150" width="717" height="112" isinstance="0" showstereotype="2" showoperations="1" showpubliconly="0" showopsigs="601" showpackage="1" showscope="1" showattributes="1" showattsigs="601" showstereotype="2"/>
         <classwidget xmi.id="uiqRYRR53ZeU4" localid="uiLeCSPfd9UFB" textcolor="#000000" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="0" usesdiagramusefillcolor="0" fillcolor="#ffffc0" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="-2884.55" y="-667.65" width="964" height="112" isinstance="0" showstereotype="2" showoperations="1" showpubliconly="0" showopsigs="601" showpackage="1" showscope="1" showattributes="1" showattsigs="601" showstereotype="2"/>
         <classwidget xmi.id="u3eoTHLFYDGeC" localid="uA1DZ8O74PkPo" textcolor="#000000" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="0" usesdiagramusefillcolor="0" fillcolor="#ffffc0" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="-801" y="1502" width="872" height="182" isinstance="0" showstereotype="2" showoperations="1" showpubliconly="0" showopsigs="601" showpackage="1" showscope="1" showattributes="1" showattsigs="601" showstereotype="2"/>
         <classwidget xmi.id="udds1DELhHMYK" localid="uFhHJnLR5xhNL" textcolor="#000000" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="0" usesdiagramusefillcolor="0" fillcolor="#ffffc0" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="1451" y="-36" width="1000" height="84" isinstance="0" showstereotype="2" showoperations="1" showpubliconly="0" showopsigs="601" showpackage="1" showscope="1" showattributes="1" showattsigs="601" showstereotype="2"/>
         <classwidget xmi.id="uA6Ay2ZfrZ3B2" localid="uHnPdiJVoCX0w" textcolor="#000000" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="0" usesdiagramusefillcolor="0" fillcolor="#ffffc0" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="1520" y="925" width="872" height="168" isinstance="0" showstereotype="2" showoperations="1" showpubliconly="0" showopsigs="601" showpackage="1" showscope="1" showattributes="1" showattsigs="601" showstereotype="2"/>
         <classwidget xmi.id="uX23VKsBI7APb" localid="uQexRRSqFBvzx" textcolor="#000000" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="0" usesdiagramusefillcolor="0" fillcolor="#ffffc0" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="-1875" y="570" width="382" height="56" isinstance="0" showstereotype="2" showoperations="1" showpubliconly="0" showopsigs="601" showpackage="1" showscope="1" showattributes="1" showattsigs="601" showstereotype="2"/>
         <classwidget xmi.id="uUHH0cierxHxT" localid="utMICXDf0c3oS" textcolor="#000000" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="0" usesdiagramusefillcolor="0" fillcolor="#ffffc0" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="-732.129" y="-2124.35" width="1000" height="350" isinstance="0" showstereotype="2" showoperations="1" showpubliconly="0" showopsigs="601" showpackage="1" showscope="1" showattributes="1" showattsigs="601" showstereotype="2"/>
         <classwidget xmi.id="uyIsIfK4a5IPE" localid="ufXGQzHQEeYPa" textcolor="#000000" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="0" usesdiagramusefillcolor="0" fillcolor="#ffffc0" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="-3026" y="1118" width="724" height="112" isinstance="0" showstereotype="2" showoperations="1" showpubliconly="0" showopsigs="601" showpackage="1" showscope="1" showattributes="1" showattsigs="601" showstereotype="2"/>
         <classwidget xmi.id="urXSNZJSY4yaS" localid="ue5LjmTZtyuwt" textcolor="#000000" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="0" usesdiagramusefillcolor="0" fillcolor="#ffffc0" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="-2445" y="-1185" width="1000" height="84" isinstance="0" showstereotype="2" showoperations="1" showpubliconly="0" showopsigs="601" showpackage="1" showscope="1" showattributes="1" showattsigs="601" showstereotype="2"/>
         <classwidget xmi.id="ueh6gSzgKDAHa" localid="ulC0Yvx0gQ3Cc" textcolor="#000000" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="0" usesdiagramusefillcolor="0" fillcolor="#ffffc0" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="-1140" y="1200" width="424" height="84" isinstance="0" showstereotype="2" showoperations="1" showpubliconly="0" showopsigs="601" showpackage="1" showscope="1" showattributes="1" showattsigs="601" showstereotype="2"/>
         <classwidget xmi.id="uZi2k1Wngh2tt" localid="ulSyu9rVeC5bx" textcolor="#000000" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="0" usesdiagramusefillcolor="0" fillcolor="#ffffc0" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="610" y="-845" width="130" height="28" isinstance="0" showstereotype="2" showoperations="1" showpubliconly="0" showopsigs="601" showpackage="1" showscope="1" showattributes="1" showattsigs="601" showstereotype="2"/>
         <classwidget xmi.id="urkvoAMir0kfK" localid="uj5jxjsCmD4iH" textcolor="#000000" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="0" usesdiagramusefillcolor="0" fillcolor="#ffffc0" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="917.353" y="667.353" width="348" height="56" isinstance="0" showstereotype="2" showoperations="1" showpubliconly="0" showopsigs="601" showpackage="1" showscope="1" showattributes="1" showattsigs="601" showstereotype="2"/>
         <classwidget xmi.id="uNPPKJL9lq9mG" localid="uwGGKn7D81Cnz" textcolor="#000000" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="0" usesdiagramusefillcolor="0" fillcolor="#ffffc0" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="-220" y="930" width="252" height="84" isinstance="0" showstereotype="2" showoperations="1" showpubliconly="0" showopsigs="601" showpackage="1" showscope="1" showattributes="1" showattsigs="601" showstereotype="2"/>
         <classwidget xmi.id="u6FbX7ciLBRbw" localid="uONfLcwK4ZUxh" textcolor="#000000" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="0" usesdiagramusefillcolor="0" fillcolor="#ffffc0" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="435" y="1705" width="348" height="56" isinstance="0" showstereotype="2" showoperations="1" showpubliconly="0" showopsigs="601" showpackage="1" showscope="1" showattributes="1" showattsigs="601" showstereotype="2"/>
         <classwidget xmi.id="u0OFlntDBwjDP" localid="uKWfpKPaJBN9N" textcolor="#000000" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="0" usesdiagramusefillcolor="0" fillcolor="#ffffc0" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="-1070" y="945" width="662" height="112" isinstance="0" showstereotype="2" showoperations="1" showpubliconly="0" showopsigs="601" showpackage="1" showscope="1" showattributes="1" showattsigs="601" showstereotype="2"/>
         <classwidget xmi.id="uLvRsomVYD7Lu" localid="utznQeEm4n6HG" textcolor="#000000" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="0" usesdiagramusefillcolor="0" fillcolor="#ffffc0" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="-1334.41" y="550.588" width="382" height="56" isinstance="0" showstereotype="2" showoperations="1" showpubliconly="0" showopsigs="601" showpackage="1" showscope="1" showattributes="1" showattsigs="601" showstereotype="2"/>
         <classwidget xmi.id="u75adEKBvrc6n" localid="utsGEORus7pRJ" textcolor="#000000" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="0" usesdiagramusefillcolor="0" fillcolor="#ffffc0" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="529.412" y="160.882" width="145" height="35" isinstance="0" showstereotype="2" showoperations="1" showpubliconly="0" showopsigs="601" showpackage="1" showscope="1" showattributes="1" showattsigs="601" showstereotype="2"/>
         <classwidget xmi.id="u46TEmFfRU9uz" localid="u49d20vYGAl0r" textcolor="#000000" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="0" usesdiagramusefillcolor="0" fillcolor="#ffffc0" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="795" y="-1205" width="68" height="28" isinstance="0" showstereotype="2" showoperations="1" showpubliconly="0" showopsigs="601" showpackage="1" showscope="1" showattributes="1" showattsigs="601" showstereotype="2"/>
         <classwidget xmi.id="ujkpmbarKTBcG" localid="utfzYfRWrA5Hp" textcolor="#000000" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="0" usesdiagramusefillcolor="0" fillcolor="#ffffc0" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="404.645" y="-1511.74" width="1000" height="140" isinstance="0" showstereotype="2" showoperations="1" showpubliconly="0" showopsigs="601" showpackage="1" showscope="1" showattributes="1" showattsigs="601" showstereotype="2"/>
         <classwidget xmi.id="uksLh76IlxOt4" localid="u9I7MHMGLH1xl" textcolor="#000000" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="0" usesdiagramusefillcolor="0" fillcolor="#ffffc0" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="-2030" y="720" width="538" height="56" isinstance="0" showstereotype="2" showoperations="1" showpubliconly="0" showopsigs="601" showpackage="1" showscope="1" showattributes="1" showattsigs="601" showstereotype="2"/>
         <classwidget xmi.id="u9mu8ucbZlzgF" localid="uJWZLmfUXqXKB" textcolor="#000000" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="0" usesdiagramusefillcolor="0" fillcolor="#ffffc0" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="-1250" y="650" width="1000" height="168" isinstance="0" showstereotype="2" showoperations="1" showpubliconly="0" showopsigs="601" showpackage="1" showscope="1" showattributes="1" showattsigs="601" showstereotype="2"/>
         <classwidget xmi.id="u6rwxJLAnReBm" localid="uB5yJTbJpm0c3" textcolor="#000000" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="0" usesdiagramusefillcolor="0" fillcolor="#ffffc0" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="-2896.35" y="269.529" width="964" height="112" isinstance="0" showstereotype="2" showoperations="1" showpubliconly="0" showopsigs="601" showpackage="1" showscope="1" showattributes="1" showattsigs="601" showstereotype="2"/>
         <classwidget xmi.id="umyiVnwmED9ET" localid="uZ8aViOFeObkB" textcolor="#000000" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="0" usesdiagramusefillcolor="0" fillcolor="#ffffc0" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="1747" y="290" width="1000" height="70" isinstance="0" showstereotype="2" showoperations="1" showpubliconly="0" showopsigs="601" showpackage="1" showscope="1" showattributes="1" showattsigs="601" showstereotype="2"/>
         <classwidget xmi.id="uP2PAkC0vGNIu" localid="uYV1XWHxqGaLC" textcolor="#000000" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="0" usesdiagramusefillcolor="0" fillcolor="#ffffc0" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="-70" y="745" width="260" height="56" isinstance="0" showstereotype="2" showoperations="1" showpubliconly="0" showopsigs="601" showpackage="1" showscope="1" showattributes="1" showattsigs="601" showstereotype="2"/>
         <classwidget xmi.id="u51ebs4Agyot8" localid="uIh06MCDKa3io" textcolor="#000000" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="0" usesdiagramusefillcolor="0" fillcolor="#ffffc0" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="-500" y="1110" width="730" height="140" isinstance="0" showstereotype="2" showoperations="1" showpubliconly="0" showopsigs="601" showpackage="1" showscope="1" showattributes="1" showattsigs="601" showstereotype="2"/>
         <classwidget xmi.id="uBHGfxfNCFIgc" localid="uqL7IAG4eBGrT" textcolor="#000000" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="0" usesdiagramusefillcolor="0" fillcolor="#ffffc0" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="-1935" y="1150" width="593" height="70" isinstance="0" showstereotype="2" showoperations="1" showpubliconly="0" showopsigs="601" showpackage="1" showscope="1" showattributes="1" showattsigs="601" showstereotype="2"/>
         <classwidget xmi.id="un7aE5R6hbALf" localid="udCY8IA1XKW1k" textcolor="#000000" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="0" usesdiagramusefillcolor="0" fillcolor="#ffffc0" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="1793.53" y="1160.59" width="874" height="140" isinstance="0" showstereotype="2" showoperations="1" showpubliconly="0" showopsigs="601" showpackage="1" showscope="1" showattributes="1" showattsigs="601" showstereotype="2"/>
        </widgets>
        <messages/>
        <associations>
         <assocwidget xmi.id="uvV8D3faxDMOD" localid="u82DS7JaL0Q71" textcolor="none" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="1" usesdiagramusefillcolor="1" fillcolor="none" font="Sans Serif,9,-1,5,50,0,0,0,0,0" autoresize="1" seqnum="" xmi.id="uvV8D3faxDMOD" type="510" visibilityA="0" visibilityB="0" changeabilityA="900" changeabilityB="900" widgetaid="uIRwnff8JiLL7" widgetbid="us0LnAGmSsTJZ" indexa="1" totalcounta="2" indexb="1" totalcountb="2">
          <floatingtext xmi.id="ubyCEvHeydfY7" localid="u1JwHBjEO3AUV" textcolor="none" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="1" usesdiagramusefillcolor="1" fillcolor="none" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="-1142.44" y="-1004.37" width="99" height="20" isinstance="0" showstereotype="2" text="mean_baseline" pretext="+" posttext="" role="710"/>
          <linepath layout="Direct">
           <startpoint startx="-647.742" starty="-715.484"/>
           <endpoint endx="-1197" endy="-1362"/>
          </linepath>
         </assocwidget>
         <assocwidget xmi.id="uGvSMELGQH78P" localid="u92EF7cuAibIp" textcolor="none" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="1" usesdiagramusefillcolor="1" fillcolor="none" font="Sans Serif,9,-1,5,50,0,0,0,0,0" autoresize="1" seqnum="" xmi.id="uGvSMELGQH78P" type="510" visibilityA="0" visibilityB="0" changeabilityA="900" changeabilityB="900" widgetaid="uQgj2DQKRlkip" widgetbid="us0LnAGmSsTJZ" indexa="1" totalcounta="2" indexb="1" totalcountb="2">
          <floatingtext xmi.id="ubSXNRENArMxh" localid="uoRXtdOsUgCpZ" textcolor="none" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="1" usesdiagramusefillcolor="1" fillcolor="none" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="-1261.23" y="-624.443" width="63" height="20" isinstance="0" showstereotype="2" text="n_points" pretext="+" posttext="" role="710"/>
          <linepath layout="Direct">
           <startpoint startx="-734.561" starty="-247.601"/>
           <endpoint endx="-1197" endy="-1362"/>
          </linepath>
         </assocwidget>
         <assocwidget xmi.id="uURiDp3kjNZjz" localid="uq9BhWCQPmcao" textcolor="none" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="1" usesdiagramusefillcolor="1" fillcolor="none" font="Sans Serif,9,-1,5,50,0,0,0,0,0" autoresize="1" seqnum="" xmi.id="uURiDp3kjNZjz" type="510" visibilityA="0" visibilityB="0" changeabilityA="900" changeabilityB="900" widgetaid="uBYWpuukh3wTs" widgetbid="us0LnAGmSsTJZ" indexa="1" totalcounta="2" indexb="1" totalcountb="2">
          <floatingtext xmi.id="ufzOYoI0VpYLK" localid="u2JHI6v4vsKlQ" textcolor="none" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="1" usesdiagramusefillcolor="1" fillcolor="none" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="-1249.75" y="-1287.5" width="99" height="20" isinstance="0" showstereotype="2" text="mean_baseline" pretext="+" posttext="" role="710"/>
          <linepath layout="Direct">
           <startpoint startx="-650" starty="-1362"/>
           <endpoint endx="-1197" endy="-1362"/>
          </linepath>
         </assocwidget>
         <assocwidget xmi.id="ulH1d0MFIUmWs" localid="ujLoywE1i9oDr" textcolor="none" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="1" usesdiagramusefillcolor="1" fillcolor="none" font="Sans Serif,9,-1,5,50,0,0,0,0,0" autoresize="1" seqnum="" xmi.id="ulH1d0MFIUmWs" type="510" visibilityA="0" visibilityB="0" changeabilityA="900" changeabilityB="900" widgetaid="uBYWpuukh3wTs" widgetbid="us0LnAGmSsTJZ" indexa="1" totalcounta="2" indexb="1" totalcountb="2">
          <floatingtext xmi.id="u8sBUagJeGfkP" localid="u2GIk17ECtiCz" textcolor="none" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="1" usesdiagramusefillcolor="1" fillcolor="none" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="-1023.78" y="-1226.19" width="63" height="20" isinstance="0" showstereotype="2" text="n_points" pretext="+" posttext="" role="710"/>
          <linepath layout="Direct">
           <startpoint startx="-650" starty="-1362"/>
           <endpoint endx="-1197" endy="-1362"/>
          </linepath>
         </assocwidget>
         <assocwidget xmi.id="uCxaVtPRscY6S" localid="u8upkACG03o2g" textcolor="none" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="1" usesdiagramusefillcolor="1" fillcolor="none" font="Sans Serif,9,-1,5,50,0,0,0,0,0" autoresize="1" seqnum="" type="509" visibilityA="0" visibilityB="0" changeabilityA="900" changeabilityB="900" roleAdoc="" roleBdoc="" documentation="" widgetaid="uEgGMDwjxWoO1" widgetbid="udoHdslCCSR8U" indexa="1" totalcounta="2" indexb="1" totalcountb="2">
          <linepath layout="Direct">
           <startpoint startx="-1975" starty="-1452"/>
           <endpoint endx="-1982.59" endy="-1379.12"/>
          </linepath>
         </assocwidget>
         <assocwidget xmi.id="uyFAqArbGBhSL" localid="uynt8xUaGpnBW" textcolor="none" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="1" usesdiagramusefillcolor="1" fillcolor="none" font="Sans Serif,9,-1,5,50,0,0,0,0,0" autoresize="1" seqnum="" xmi.id="uyFAqArbGBhSL" type="510" visibilityA="0" visibilityB="0" changeabilityA="900" changeabilityB="900" widgetaid="uSSnPGBge6Wsv" widgetbid="us0LnAGmSsTJZ" indexa="1" totalcounta="2" indexb="1" totalcountb="2">
          <floatingtext xmi.id="uHK0wvsXY2MUa" localid="uF12F3pDESlm8" textcolor="none" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="1" usesdiagramusefillcolor="1" fillcolor="none" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="-1134.57" y="-1379.42" width="99" height="20" isinstance="0" showstereotype="2" text="mean_baseline" pretext="+" posttext="" role="710"/>
          <linepath layout="Direct">
           <startpoint startx="-768" starty="-1132"/>
           <endpoint endx="-1197" endy="-1362"/>
          </linepath>
         </assocwidget>
         <assocwidget xmi.id="uvRzwGTfM6bxf" localid="uR4Cv0siYQSFH" textcolor="none" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="1" usesdiagramusefillcolor="1" fillcolor="none" font="Sans Serif,9,-1,5,50,0,0,0,0,0" autoresize="1" seqnum="" xmi.id="uvRzwGTfM6bxf" type="510" visibilityA="0" visibilityB="0" changeabilityA="900" changeabilityB="900" widgetaid="uZfJjhXIXk7j0" widgetbid="uxBt1LkDZZbmJ" indexa="1" totalcounta="2" indexb="1" totalcountb="2">
          <floatingtext xmi.id="uVFWumVa0eaAs" localid="u0SjE6Q2niMhP" textcolor="none" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="1" usesdiagramusefillcolor="1" fillcolor="none" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="2407" y="-482" width="111" height="20" isinstance="0" showstereotype="2" text="embed_positions" pretext="+" posttext="" role="710"/>
          <linepath layout="Direct">
           <startpoint startx="2514" starty="-610"/>
           <endpoint endx="2514" endy="-461"/>
          </linepath>
         </assocwidget>
         <assocwidget xmi.id="u4OIongQxYctM" localid="u1ou6BLhbVonp" textcolor="none" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="1" usesdiagramusefillcolor="1" fillcolor="none" font="Sans Serif,9,-1,5,50,0,0,0,0,0" autoresize="1" seqnum="" xmi.id="u4OIongQxYctM" type="510" visibilityA="0" visibilityB="0" changeabilityA="900" changeabilityB="900" widgetaid="uY1L2WXCFAbhY" widgetbid="uMZ7W6Cxuel17" indexa="1" totalcounta="2" indexb="1" totalcountb="2">
          <floatingtext xmi.id="uN3f1Mt6H0zjt" localid="u5C2bgoSRNN2x" textcolor="none" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="1" usesdiagramusefillcolor="1" fillcolor="none" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="1027" y="-1805" width="22" height="20" isinstance="0" showstereotype="2" text="d" pretext="+" posttext="" role="710"/>
          <linepath layout="Direct">
           <startpoint startx="1515" starty="-1807"/>
           <endpoint endx="1025" endy="-1807"/>
          </linepath>
         </assocwidget>
         <assocwidget xmi.id="uQt3XrfugNU0d" localid="u7kFE3vwbQBWX" textcolor="none" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="1" usesdiagramusefillcolor="1" fillcolor="none" font="Sans Serif,9,-1,5,50,0,0,0,0,0" autoresize="1" seqnum="" xmi.id="uQt3XrfugNU0d" type="510" visibilityA="0" visibilityB="0" changeabilityA="900" changeabilityB="900" widgetaid="upvTFWYeRouE9" widgetbid="urXSNZJSY4yaS" indexa="1" totalcounta="2" indexb="1" totalcountb="2">
          <floatingtext xmi.id="ufuFCMrIBDjgq" localid="uhnLTfnGk3AJl" textcolor="none" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="1" usesdiagramusefillcolor="1" fillcolor="none" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="-2500" y="-1087" width="61" height="20" isinstance="0" showstereotype="2" text="encoder" pretext="+" posttext="" role="710"/>
          <linepath layout="Direct">
           <startpoint startx="-2445" starty="-869.536"/>
           <endpoint endx="-2445" endy="-1101"/>
          </linepath>
         </assocwidget>
         <assocwidget xmi.id="uaFzV41iJxZw1" localid="ua9r4ACH7fkAA" textcolor="none" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="1" usesdiagramusefillcolor="1" fillcolor="none" font="Sans Serif,9,-1,5,50,0,0,0,0,0" autoresize="1" seqnum="" xmi.id="uaFzV41iJxZw1" type="510" visibilityA="0" visibilityB="0" changeabilityA="900" changeabilityB="900" widgetaid="u640GIhdzSsWO" widgetbid="u08XfPKrjDA8q" indexa="1" totalcounta="2" indexb="1" totalcountb="2">
          <floatingtext xmi.id="uZR5EZAQEkZWG" localid="uCVIDel2f82Xt" textcolor="none" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="1" usesdiagramusefillcolor="1" fillcolor="none" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="-2303" y="-133" width="61" height="20" isinstance="0" showstereotype="2" text="encoder" pretext="+" posttext="" role="710"/>
          <linepath layout="Direct">
           <startpoint startx="-2273" starty="-296"/>
           <endpoint endx="-2273" endy="-76.4706"/>
          </linepath>
         </assocwidget>
         <assocwidget xmi.id="u9vLKmUyfU90k" localid="ujeqTpwqB3uwX" textcolor="none" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="1" usesdiagramusefillcolor="1" fillcolor="none" font="Sans Serif,9,-1,5,50,0,0,0,0,0" autoresize="1" seqnum="" xmi.id="u9vLKmUyfU90k" type="510" visibilityA="0" visibilityB="0" changeabilityA="900" changeabilityB="900" widgetaid="u6rwxJLAnReBm" widgetbid="u08XfPKrjDA8q" indexa="1" totalcounta="2" indexb="1" totalcountb="2">
          <floatingtext xmi.id="uWS3sFfi9adOM" localid="uKPv2ssZpYgLU" textcolor="none" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="1" usesdiagramusefillcolor="1" fillcolor="none" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="-2220" y="-14" width="61" height="20" isinstance="0" showstereotype="2" text="encoder" pretext="+" posttext="" role="710"/>
          <linepath layout="Direct">
           <startpoint startx="-2192.35" starty="269.529"/>
           <endpoint endx="-2192.35" endy="7.52941"/>
          </linepath>
         </assocwidget>
         <assocwidget xmi.id="uLSk9coVEjzmO" localid="u2VgEHZyPgWph" textcolor="none" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="1" usesdiagramusefillcolor="1" fillcolor="none" font="Sans Serif,9,-1,5,50,0,0,0,0,0" autoresize="1" seqnum="" xmi.id="uLSk9coVEjzmO" type="510" visibilityA="0" visibilityB="0" changeabilityA="900" changeabilityB="900" widgetaid="uOVXpozitVXSN" widgetbid="uZi2k1Wngh2tt" indexa="1" totalcounta="2" indexb="1" totalcountb="2">
          <floatingtext xmi.id="uism0kcj7ZZow" localid="uQwWMWRSZkwMF" textcolor="none" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="1" usesdiagramusefillcolor="1" fillcolor="none" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="740" y="-813" width="93" height="20" isinstance="0" showstereotype="2" text="random_state" pretext="+" posttext="" role="710"/>
          <linepath layout="Direct">
           <startpoint startx="907" starty="-498"/>
           <endpoint endx="740" endy="-817"/>
          </linepath>
         </assocwidget>
         <assocwidget xmi.id="ugA7gEyIfB3cR" localid="uNPhR9GOxs3wm" textcolor="none" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="1" usesdiagramusefillcolor="1" fillcolor="none" font="Sans Serif,9,-1,5,50,0,0,0,0,0" autoresize="1" seqnum="" xmi.id="ugA7gEyIfB3cR" type="510" visibilityA="0" visibilityB="0" changeabilityA="900" changeabilityB="900" widgetaid="uiqRYRR53ZeU4" widgetbid="urXSNZJSY4yaS" indexa="1" totalcounta="2" indexb="1" totalcountb="2">
          <floatingtext xmi.id="ulQzlNpPfgqkV" localid="uZkNvkGdhPTKf" textcolor="none" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="1" usesdiagramusefillcolor="1" fillcolor="none" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="-1956" y="-1099" width="61" height="20" isinstance="0" showstereotype="2" text="encoder" pretext="+" posttext="" role="710"/>
          <linepath layout="Direct">
           <startpoint startx="-1920.55" starty="-667.65"/>
           <endpoint endx="-1920.55" endy="-1101"/>
          </linepath>
         </assocwidget>
         <assocwidget xmi.id="uT4sYYgGQIwRQ" localid="u4Dizxtsj5SXS" textcolor="none" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="1" usesdiagramusefillcolor="1" fillcolor="none" font="Sans Serif,9,-1,5,50,0,0,0,0,0" autoresize="1" seqnum="" xmi.id="uT4sYYgGQIwRQ" type="510" visibilityA="0" visibilityB="0" changeabilityA="900" changeabilityB="900" widgetaid="uY1L2WXCFAbhY" widgetbid="utO8aXIxJjnY6" indexa="1" totalcounta="2" indexb="1" totalcountb="2">
          <floatingtext xmi.id="uJlM3H6FWKoBR" localid="uHwmgkIndgwsH" textcolor="none" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="1" usesdiagramusefillcolor="1" fillcolor="none" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="913" y="-1661" width="95" height="20" isinstance="0" showstereotype="2" text="common_opts" pretext="+" posttext="" role="710"/>
          <linepath layout="Direct">
           <startpoint startx="1515" starty="-1663"/>
           <endpoint endx="911" endy="-1663"/>
          </linepath>
         </assocwidget>
         <assocwidget xmi.id="uxVNQwi1CJASR" localid="uBIMZJSZbDFNd" textcolor="none" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="1" usesdiagramusefillcolor="1" fillcolor="none" font="Sans Serif,9,-1,5,50,0,0,0,0,0" autoresize="1" seqnum="" xmi.id="uxVNQwi1CJASR" type="510" visibilityA="0" visibilityB="0" changeabilityA="900" changeabilityB="900" widgetaid="uY1L2WXCFAbhY" widgetbid="u8fxeQ02S7jWh" indexa="1" totalcounta="2" indexb="1" totalcountb="2">
          <floatingtext xmi.id="uqUXyJrcO6BEr" localid="ucynx1kWeDejV" textcolor="none" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="1" usesdiagramusefillcolor="1" fillcolor="none" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="769" y="-2075" width="98" height="20" isinstance="0" showstereotype="2" text="optimizer.state" pretext="+" posttext="" role="710"/>
          <linepath layout="Direct">
           <startpoint startx="1515" starty="-1985"/>
           <endpoint endx="767" endy="-2077"/>
          </linepath>
         </assocwidget>
         <assocwidget xmi.id="uV9QiZUJrAKpA" localid="uol1gzSczy3PV" textcolor="none" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="1" usesdiagramusefillcolor="1" fillcolor="none" font="Sans Serif,9,-1,5,50,0,0,0,0,0" autoresize="1" seqnum="" xmi.id="uV9QiZUJrAKpA" type="510" visibilityA="0" visibilityB="0" changeabilityA="900" changeabilityB="900" widgetaid="uY1L2WXCFAbhY" widgetbid="ujkpmbarKTBcG" indexa="1" totalcounta="2" indexb="1" totalcountb="2">
          <floatingtext xmi.id="uUqWDtZCSiFCX" localid="uTc1ATvjgOV1R" textcolor="none" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="1" usesdiagramusefillcolor="1" fillcolor="none" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="1405.65" y="-1533.74" width="88" height="20" isinstance="0" showstereotype="2" text="checkpointer" pretext="+" posttext="" role="710"/>
          <linepath layout="Direct">
           <startpoint startx="1515" starty="-1663"/>
           <endpoint endx="1404.64" endy="-1511.74"/>
          </linepath>
         </assocwidget>
         <assocwidget xmi.id="upTdSETGdTqr4" localid="uhH9bk9JHN57w" textcolor="none" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="1" usesdiagramusefillcolor="1" fillcolor="none" font="Sans Serif,9,-1,5,50,0,0,0,0,0" autoresize="1" seqnum="" xmi.id="upTdSETGdTqr4" type="510" visibilityA="0" visibilityB="0" changeabilityA="900" changeabilityB="900" widgetaid="uZtkehQDEYodk" widgetbid="uxBt1LkDZZbmJ" indexa="1" totalcounta="2" indexb="1" totalcountb="2">
          <floatingtext xmi.id="u5Cx12uHVxSnD" localid="u6KufDnjydcg8" textcolor="none" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="1" usesdiagramusefillcolor="1" fillcolor="none" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="2259" y="-385" width="111" height="20" isinstance="0" showstereotype="2" text="embed_positions" pretext="+" posttext="" role="710"/>
          <linepath layout="Direct">
           <startpoint startx="2372" starty="-225"/>
           <endpoint endx="2372" endy="-377"/>
          </linepath>
         </assocwidget>
         <assocwidget xmi.id="uUjvlkx7XRHlZ" localid="ubmrjVMuZqbnq" textcolor="none" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="1" usesdiagramusefillcolor="1" fillcolor="none" font="Sans Serif,9,-1,5,50,0,0,0,0,0" autoresize="1" seqnum="" xmi.id="uUjvlkx7XRHlZ" type="510" visibilityA="0" visibilityB="0" changeabilityA="900" changeabilityB="900" widgetaid="uIRwnff8JiLL7" widgetbid="us0LnAGmSsTJZ" indexa="1" totalcounta="2" indexb="1" totalcountb="2">
          <floatingtext xmi.id="uRdly000PGOoZ" localid="uXMtEBZd09wJE" textcolor="none" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="1" usesdiagramusefillcolor="1" fillcolor="none" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="-1094.46" y="-1152.13" width="63" height="20" isinstance="0" showstereotype="2" text="n_points" pretext="+" posttext="" role="710"/>
          <linepath layout="Direct">
           <startpoint startx="-647.742" starty="-715.484"/>
           <endpoint endx="-1197" endy="-1362"/>
          </linepath>
         </assocwidget>
         <assocwidget xmi.id="uLCIz0mzdIlhf" localid="uChoJfl0NHmtM" textcolor="none" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="1" usesdiagramusefillcolor="1" fillcolor="none" font="Sans Serif,9,-1,5,50,0,0,0,0,0" autoresize="1" seqnum="" xmi.id="uLCIz0mzdIlhf" type="510" visibilityA="0" visibilityB="0" changeabilityA="900" changeabilityB="900" widgetaid="uQgj2DQKRlkip" widgetbid="us0LnAGmSsTJZ" indexa="1" totalcounta="2" indexb="1" totalcountb="2">
          <floatingtext xmi.id="uFpna5r1YF0Qa" localid="uP38OixzbHepA" textcolor="none" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="1" usesdiagramusefillcolor="1" fillcolor="none" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="-1133.1" y="-611.818" width="99" height="20" isinstance="0" showstereotype="2" text="mean_baseline" pretext="+" posttext="" role="710"/>
          <linepath layout="Direct">
           <startpoint startx="-734.561" starty="-247.601"/>
           <endpoint endx="-1197" endy="-1362"/>
          </linepath>
         </assocwidget>
         <assocwidget xmi.id="uf8P2yZyJNLi0" localid="ucZETEPmhsLQo" textcolor="none" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="1" usesdiagramusefillcolor="1" fillcolor="none" font="Sans Serif,9,-1,5,50,0,0,0,0,0" autoresize="1" seqnum="" xmi.id="uf8P2yZyJNLi0" type="510" visibilityA="0" visibilityB="0" changeabilityA="900" changeabilityB="900" widgetaid="ujkpmbarKTBcG" widgetbid="u46TEmFfRU9uz" indexa="1" totalcounta="2" indexb="1" totalcountb="2">
          <floatingtext xmi.id="ukPqVafBLMvom" localid="udP1g6LQ7tu84" textcolor="none" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="1" usesdiagramusefillcolor="1" fillcolor="none" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="687" y="-1224" width="108" height="20" isinstance="0" showstereotype="2" text="checkpoint_path" pretext="+" posttext="" role="710"/>
          <linepath layout="Direct">
           <startpoint startx="800" starty="-1371.74"/>
           <endpoint endx="800" endy="-1205"/>
          </linepath>
         </assocwidget>
         <assocwidget xmi.id="uvLS1yARnfuvS" localid="u4znls7ITi4sg" textcolor="none" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="1" usesdiagramusefillcolor="1" fillcolor="none" font="Sans Serif,9,-1,5,50,0,0,0,0,0" autoresize="1" seqnum="" xmi.id="uvLS1yARnfuvS" type="510" visibilityA="0" visibilityB="0" changeabilityA="900" changeabilityB="900" widgetaid="uUHH0cierxHxT" widgetbid="uMZ7W6Cxuel17" indexa="1" totalcounta="2" indexb="1" totalcountb="2">
          <floatingtext xmi.id="uCjihzdCHq7ex" localid="ugMjfWuWOMVnr" textcolor="none" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="1" usesdiagramusefillcolor="1" fillcolor="none" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="819" y="-1804" width="22" height="20" isinstance="0" showstereotype="2" text="d" pretext="+" posttext="" role="710"/>
          <linepath layout="Direct">
           <startpoint startx="267.871" starty="-1807"/>
           <endpoint endx="835" endy="-1807"/>
          </linepath>
         </assocwidget>
         <assocwidget xmi.id="u1qNGQhBImImG" localid="ufGsXE2qIIpF9" textcolor="none" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="1" usesdiagramusefillcolor="1" fillcolor="none" font="Sans Serif,9,-1,5,50,0,0,0,0,0" autoresize="1" seqnum="" xmi.id="u1qNGQhBImImG" type="510" visibilityA="0" visibilityB="0" changeabilityA="900" changeabilityB="900" widgetaid="uUHH0cierxHxT" widgetbid="ujkpmbarKTBcG" indexa="1" totalcounta="2" indexb="1" totalcountb="2">
          <floatingtext xmi.id="uZCnWsQIoP667" localid="u4Tt4L19oq2NJ" textcolor="none" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="1" usesdiagramusefillcolor="1" fillcolor="none" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="319.645" y="-1531.74" width="88" height="20" isinstance="0" showstereotype="2" text="checkpointer" pretext="+" posttext="" role="710"/>
          <linepath layout="Direct">
           <startpoint startx="267.871" starty="-1774.35"/>
           <endpoint endx="404.645" endy="-1511.74"/>
          </linepath>
         </assocwidget>
         <assocwidget xmi.id="uYxUljfjwEkn9" localid="uTQdU7x1k6Fml" textcolor="none" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="1" usesdiagramusefillcolor="1" fillcolor="none" font="Sans Serif,9,-1,5,50,0,0,0,0,0" autoresize="1" seqnum="" xmi.id="uYxUljfjwEkn9" type="510" visibilityA="0" visibilityB="0" changeabilityA="900" changeabilityB="900" widgetaid="ukUvOmN2u1kJX" widgetbid="ukHAqstrYvZX6" indexa="1" totalcounta="2" indexb="1" totalcountb="2">
          <floatingtext xmi.id="uCfNxfFBOsX3B" localid="uIh0lTkcnMflB" textcolor="none" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="1" usesdiagramusefillcolor="1" fillcolor="none" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="-1589" y="-1627" width="34" height="20" isinstance="0" showstereotype="2" text="iter" pretext="+" posttext="" role="710"/>
          <linepath layout="Direct">
           <startpoint startx="-1553" starty="-1868.87"/>
           <endpoint endx="-1553" endy="-1605"/>
          </linepath>
         </assocwidget>
         <assocwidget xmi.id="uJBzt77Meuf4F" localid="uDf6PBM8yjmjL" textcolor="none" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="1" usesdiagramusefillcolor="1" fillcolor="none" font="Sans Serif,9,-1,5,50,0,0,0,0,0" autoresize="1" seqnum="" xmi.id="uJBzt77Meuf4F" type="510" visibilityA="0" visibilityB="0" changeabilityA="900" changeabilityB="900" widgetaid="uSSnPGBge6Wsv" widgetbid="us0LnAGmSsTJZ" indexa="1" totalcounta="2" indexb="1" totalcountb="2">
          <floatingtext xmi.id="uAKIjlzn8pPna" localid="u5CZyuBnYVRj6" textcolor="none" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="1" usesdiagramusefillcolor="1" fillcolor="none" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="-1074.14" y="-1328.35" width="63" height="20" isinstance="0" showstereotype="2" text="n_points" pretext="+" posttext="" role="710"/>
          <linepath layout="Direct">
           <startpoint startx="-768" starty="-1132"/>
           <endpoint endx="-1197" endy="-1362"/>
          </linepath>
         </assocwidget>
         <assocwidget xmi.id="uBZmjMb6jnpO0" localid="uCcEGoKVu65F7" textcolor="none" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="1" usesdiagramusefillcolor="1" fillcolor="none" font="Sans Serif,9,-1,5,50,0,0,0,0,0" autoresize="1" seqnum="" xmi.id="uBZmjMb6jnpO0" type="510" visibilityA="0" visibilityB="0" changeabilityA="900" changeabilityB="900" widgetaid="uGSnFwCy0ArWZ" widgetbid="uZi2k1Wngh2tt" indexa="1" totalcounta="2" indexb="1" totalcountb="2">
          <floatingtext xmi.id="un3my14whpaxF" localid="upBSvYJ1L9eoA" textcolor="none" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="1" usesdiagramusefillcolor="1" fillcolor="none" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="540" y="-815" width="93" height="20" isinstance="0" showstereotype="2" text="random_state" pretext="+" posttext="" role="710"/>
          <linepath layout="Direct">
           <startpoint startx="635" starty="-212"/>
           <endpoint endx="635" endy="-817"/>
          </linepath>
         </assocwidget>
         <assocwidget xmi.id="uyAy386rzvkQ1" localid="uwdICYcKcw1aB" textcolor="none" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="1" usesdiagramusefillcolor="1" fillcolor="none" font="Sans Serif,9,-1,5,50,0,0,0,0,0" autoresize="1" seqnum="" xmi.id="uyAy386rzvkQ1" type="510" visibilityA="0" visibilityB="0" changeabilityA="900" changeabilityB="900" widgetaid="uUHH0cierxHxT" widgetbid="u8fxeQ02S7jWh" indexa="1" totalcounta="2" indexb="1" totalcountb="2">
          <floatingtext xmi.id="u75Yuue62iPyI" localid="uJ55hT3iNM8Fm" textcolor="none" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="1" usesdiagramusefillcolor="1" fillcolor="none" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="616" y="-305" width="98" height="20" isinstance="0" showstereotype="2" text="optimizer.state" pretext="+" posttext="" role="710"/>
          <linepath layout="Direct">
           <startpoint startx="267.871" starty="-2077"/>
           <endpoint endx="715" endy="-2077"/>
          </linepath>
         </assocwidget>
         <assocwidget xmi.id="uQFwbBjhkvq9J" localid="u77ZlMxSilmaL" textcolor="none" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="1" usesdiagramusefillcolor="1" fillcolor="none" font="Sans Serif,9,-1,5,50,0,0,0,0,0" autoresize="1" seqnum="" xmi.id="uQFwbBjhkvq9J" type="510" visibilityA="0" visibilityB="0" changeabilityA="900" changeabilityB="900" widgetaid="uUHH0cierxHxT" widgetbid="utO8aXIxJjnY6" indexa="1" totalcounta="2" indexb="1" totalcountb="2">
          <floatingtext xmi.id="uXSWlVWKcqR6P" localid="ugrJg1YSP3N7I" textcolor="none" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="1" usesdiagramusefillcolor="1" fillcolor="none" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="2960" y="-1690" width="95" height="20" isinstance="0" showstereotype="2" text="common_opts" pretext="+" posttext="" role="710"/>
          <linepath layout="Direct">
           <startpoint startx="267.871" starty="-1774.35"/>
           <endpoint endx="860" endy="-1670"/>
          </linepath>
         </assocwidget>
         <assocwidget xmi.id="uB1Z55rg7PxR7" localid="u91qOM2SQiE3g" textcolor="none" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="1" usesdiagramusefillcolor="1" fillcolor="none" font="Sans Serif,9,-1,5,50,0,0,0,0,0" autoresize="1" seqnum="" xmi.id="uB1Z55rg7PxR7" type="510" visibilityA="0" visibilityB="0" changeabilityA="900" changeabilityB="900" widgetaid="uXYedYOcc5LRM" widgetbid="urXSNZJSY4yaS" indexa="1" totalcounta="2" indexb="1" totalcountb="2">
          <floatingtext xmi.id="u7U9eAcPiwRVT" localid="urLmBN0TRUzr4" textcolor="none" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="1" usesdiagramusefillcolor="1" fillcolor="none" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="-1501" y="-1099" width="61" height="20" isinstance="0" showstereotype="2" text="encoder" pretext="+" posttext="" role="710"/>
          <linepath layout="Direct">
           <startpoint startx="-1445" starty="-795"/>
           <endpoint endx="-1445" endy="-1101"/>
          </linepath>
         </assocwidget>
         <assocwidget xmi.id="uljguzjZnpRTc" localid="urJWZ1CJS2ClV" textcolor="none" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="1" usesdiagramusefillcolor="1" fillcolor="none" font="Sans Serif,9,-1,5,50,0,0,0,0,0" autoresize="1" seqnum="" xmi.id="uljguzjZnpRTc" type="510" visibilityA="0" visibilityB="0" changeabilityA="900" changeabilityB="900" widgetaid="umyiVnwmED9ET" widgetbid="udds1DELhHMYK" indexa="1" totalcounta="2" indexb="1" totalcountb="2">
          <floatingtext xmi.id="uBhLZhJ0DiQKL" localid="u0TgkrfgSVAvr" textcolor="none" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="1" usesdiagramusefillcolor="1" fillcolor="none" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="1691" y="50" width="61" height="20" isinstance="0" showstereotype="2" text="encoder" pretext="+" posttext="" role="710"/>
          <linepath layout="Direct">
           <startpoint startx="1747" starty="290"/>
           <endpoint endx="1747" endy="48"/>
          </linepath>
         </assocwidget>
         <assocwidget xmi.id="u3mcOF2lnwben" localid="uD70Nm1YxV9DY" textcolor="none" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="1" usesdiagramusefillcolor="1" fillcolor="none" font="Sans Serif,9,-1,5,50,0,0,0,0,0" autoresize="1" seqnum="" xmi.id="u3mcOF2lnwben" type="510" visibilityA="0" visibilityB="0" changeabilityA="900" changeabilityB="900" widgetaid="u0vcc7HEx8M7Q" widgetbid="u75adEKBvrc6n" indexa="1" totalcounta="2" indexb="1" totalcountb="2">
          <floatingtext xmi.id="uGKa9U5FyrSzP" localid="uxHJZzDysKESH" textcolor="none" linecolor="#990000" linewidth="0" usefillcolor="1" usesdiagramfillcolor="1" usesdiagramusefillcolor="1" fillcolor="none" font="Times New Roman,9,-1,5,50,0,0,0,0,0,Regular" autoresize="1" x="695" y="196" width="80" height="20" isinstance="0" showstereotype="2" text="embedding" pretext="+" posttext="" role="710"/>
          <linepath layout="Direct">
           <startpoint startx="896.176" starty="195.882"/>
           <endpoint endx="674.412" endy="195.882"/>
          </linepath>
         </assocwidget>
        </associations>
       </diagram>
      </diagrams>
     </XMI.extension>
    </UML:Model>
    <UML:Model isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="Use_Case_View" name="Use Case View" namespace="m1" visibility="public">
     <UML:Namespace.ownedElement/>
    </UML:Model>
    <UML:Model isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="Component_View" name="Component View" namespace="m1" visibility="public">
     <UML:Namespace.ownedElement/>
    </UML:Model>
    <UML:Model isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="Deployment_View" name="Deployment View" namespace="m1" visibility="public">
     <UML:Namespace.ownedElement/>
    </UML:Model>
    <UML:Model isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" xmi.id="Entity_Relationship_Model" name="Entity Relationship Model" namespace="m1" visibility="public">
     <UML:Namespace.ownedElement/>
    </UML:Model>
   </UML:Namespace.ownedElement>
  </UML:Model>
 </XMI.content>
 <XMI.extensions xmi.extender="umbrello">
  <docsettings viewid="uJ6BuoF4byGed" documentation="" uniqueid="uccz9yYalNtV5"/>
  <listview>
   <listitem id="Views" type="800" open="1">
    <listitem id="Entity_Relationship_Model" type="836" open="1"/>
    <listitem id="Use_Case_View" type="802" open="1"/>
    <listitem id="Component_View" type="821" open="1"/>
    <listitem id="Deployment_View" type="827" open="1"/>
    <listitem id="Logical_View" type="801" open="1">
     <listitem id="uGSnFwCy0ArWZ" type="813" open="0">
      <listitem id="uhnT3LjRGh8JI" type="815" open="0"/>
      <listitem id="uVn1v9Q69Juvo" type="814" open="0"/>
      <listitem id="upi10mTOKE9he" type="814" open="0"/>
      <listitem id="uaHbv5l0Miz0q" type="815" open="0"/>
      <listitem id="uOZ8SKCMbAgK2" type="814" open="0"/>
      <listitem id="uuiS4KMXG99lY" type="814" open="0"/>
      <listitem id="uhjYnof5fNfau" type="815" open="0"/>
      <listitem id="uQdo3kQ96OZ6j" type="814" open="0"/>
      <listitem id="uBZmjMb6jnpO0" type="814" open="0"/>
     </listitem>
     <listitem id="uOVXpozitVXSN" type="813" open="0">
      <listitem id="u9lTGNXm0ZuT9" type="815" open="0"/>
      <listitem id="uXjKMrlHpgdGK" type="814" open="0"/>
      <listitem id="uEOhw1ClMiVig" type="814" open="0"/>
      <listitem id="ueT8EBzbXFgUc" type="815" open="0"/>
      <listitem id="uboP9F8Ebi0yZ" type="814" open="0"/>
      <listitem id="ujb8FYloVDoNo" type="814" open="0"/>
      <listitem id="u0353Jth4pMHg" type="814" open="0"/>
      <listitem id="u8l2sgNtwouIq" type="815" open="0"/>
      <listitem id="uihktdmAtW8U4" type="814" open="0"/>
      <listitem id="uCzw0itRuj7Bo" type="814" open="0"/>
      <listitem id="uLSk9coVEjzmO" type="814" open="0"/>
     </listitem>
     <listitem id="ukUvOmN2u1kJX" type="813" open="0">
      <listitem id="uUQFDVCh3j05c" type="815" open="0"/>
      <listitem id="uMF5OfQT9COR8" type="814" open="0"/>
      <listitem id="uYxUljfjwEkn9" type="814" open="0"/>
      <listitem id="uvWB3bJFLY8c9" type="815" open="0"/>
      <listitem id="uGB9lzqMmPo3T" type="814" open="0"/>
      <listitem id="uwdGnlpNtCIDs" type="814" open="0"/>
      <listitem id="uURTQHLht4pHG" type="814" open="0"/>
     </listitem>
     <listitem id="uCa9BroQdqC5Z" type="813" open="0">
      <listitem id="uBjDfkaXpwWin" type="815" open="0"/>
      <listitem id="u7lWwWJKh8XXo" type="814" open="0"/>
      <listitem id="uG0QwyZPn0SK7" type="815" open="0"/>
      <listitem id="um13ZuTnVkRV6" type="814" open="0"/>
     </listitem>
     <listitem id="uK5nCihpn0o3r" type="813" open="0">
      <listitem id="uhQmNh8Mw1GUs" type="815" open="0"/>
      <listitem id="ukk9uJ30eY0wc" type="815" open="0"/>
      <listitem id="uH4hGELmpadbX" type="815" open="0"/>
      <listitem id="uW9HHPPYMSFyA" type="815" open="0"/>
     </listitem>
     <listitem id="u1xe170GOaaMh" type="813" open="0">
      <listitem id="uyRXEzrs1A9YC" type="815" open="0"/>
      <listitem id="uWMG7ijmndt21" type="815" open="0"/>
      <listitem id="umjLMCpDj9ke0" type="815" open="0"/>
      <listitem id="u3yaEXWL0GwGz" type="815" open="0"/>
      <listitem id="uzSQyNX7gz6rF" type="815" open="0"/>
      <listitem id="ueAKH8pi2Ldy8" type="815" open="0"/>
     </listitem>
     <listitem id="uetd1S3U0L4zA" type="813" open="0">
      <listitem id="u5EzkVoWpfdoA" type="815" open="0"/>
      <listitem id="un4fKQc7IoAe5" type="814" open="0"/>
      <listitem id="u4dZwisNkFMq4" type="814" open="0"/>
      <listitem id="ucyAGkjgnGFc4" type="814" open="0"/>
      <listitem id="uo9QP6FpP3qpM" type="814" open="0"/>
      <listitem id="utSANffpcsRKT" type="815" open="0"/>
      <listitem id="u0wpHraZ6Hxy1" type="815" open="0"/>
      <listitem id="ulWNGt14hxxDj" type="814" open="0"/>
      <listitem id="ugoJguW44Zeg5" type="814" open="0"/>
      <listitem id="uWaIgkT8MWpTq" type="815" open="0"/>
      <listitem id="uJnhlpe7bwIg3" type="815" open="0"/>
      <listitem id="uNmRR8JcZbUJL" type="814" open="0"/>
     </listitem>
     <listitem id="uzgT8SvroWkkt" type="813" open="0">
      <listitem id="ubO6w4XzG3guO" type="813" open="0"/>
     </listitem>
     <listitem id="uMl0cfRhAFWtl" type="813" open="0"/>
     <listitem id="uvy4amTpq3oCo" type="813" open="1"/>
     <listitem id="ujkpmbarKTBcG" type="813" open="0">
      <listitem id="u1nEGHXwKZQVZ" type="815" open="0"/>
      <listitem id="uLZpmVwxBEGlb" type="814" open="0"/>
      <listitem id="uf8P2yZyJNLi0" type="814" open="0"/>
      <listitem id="uDLEOIWHFqZM4" type="814" open="0"/>
      <listitem id="uBAfydLmTODGT" type="815" open="0"/>
      <listitem id="uj0PymOA5CuBi" type="815" open="0"/>
      <listitem id="uzNcGAbcngNBP" type="815" open="0"/>
      <listitem id="uQPb9iG4bhov4" type="814" open="0"/>
      <listitem id="unFplW7yfYSDw" type="815" open="0"/>
     </listitem>
     <listitem id="uIRwnff8JiLL7" type="813" open="0">
      <listitem id="ufOHVmy0lzRtn" type="815" open="0"/>
      <listitem id="ugX4XGq6v2PYv" type="814" open="0"/>
      <listitem id="uGm5iWBPhsmvE" type="815" open="0"/>
      <listitem id="u77bBmngbEkDv" type="814" open="0"/>
      <listitem id="ujC70MVhOpOVh" type="814" open="0"/>
      <listitem id="uvV8D3faxDMOD" type="814" open="0"/>
      <listitem id="u359ONWa8OGxe" type="814" open="0"/>
      <listitem id="uUjvlkx7XRHlZ" type="814" open="0"/>
      <listitem id="uuL1rmEjedLDI" type="814" open="0"/>
      <listitem id="u6v510Ch2OCst" type="814" open="0"/>
      <listitem id="u6vKf2AaJN4Uc" type="814" open="0"/>
      <listitem id="ucvPbIw1fTrsZ" type="814" open="0"/>
      <listitem id="uPLt6gWttNpTl" type="814" open="0"/>
      <listitem id="uy7EpkR774r24" type="814" open="0"/>
      <listitem id="uU8Qx13OAhvE2" type="814" open="0"/>
      <listitem id="uMMmABB7JX7Eb" type="815" open="0"/>
     </listitem>
     <listitem id="uQgj2DQKRlkip" type="813" open="0">
      <listitem id="umffYpAas1z1k" type="815" open="0"/>
      <listitem id="uvCWBkki1Wygw" type="815" open="0"/>
      <listitem id="uvkJClswRQHOz" type="814" open="0"/>
      <listitem id="uoESd9EHYVkG0" type="814" open="0"/>
      <listitem id="uLCIz0mzdIlhf" type="814" open="0"/>
      <listitem id="u2K2Ix87nEC4P" type="814" open="0"/>
      <listitem id="uGvSMELGQH78P" type="814" open="0"/>
      <listitem id="uQOWrXG7NO0st" type="814" open="0"/>
      <listitem id="uqE06B0SmYPeg" type="814" open="0"/>
      <listitem id="ugo7YcLW3ct4M" type="814" open="0"/>
      <listitem id="uL58rxk3gkLmb" type="814" open="0"/>
      <listitem id="uvPXbjTqV713u" type="814" open="0"/>
      <listitem id="uvQiwssCccxtx" type="814" open="0"/>
      <listitem id="uxcEKizrHBnZy" type="814" open="0"/>
      <listitem id="uetGRvgOE3zke" type="815" open="0"/>
     </listitem>
     <listitem id="uUHH0cierxHxT" type="813" open="0">
      <listitem id="uusgMv44KZuVE" type="815" open="0"/>
      <listitem id="uGqX3dAF6Ds91" type="814" open="0"/>
      <listitem id="uXYimEkGwgnNv" type="814" open="0"/>
      <listitem id="u1qNGQhBImImG" type="814" open="0"/>
      <listitem id="uQFwbBjhkvq9J" type="814" open="0"/>
      <listitem id="uvLS1yARnfuvS" type="814" open="0"/>
      <listitem id="ueEd3b2osT9Rz" type="814" open="0"/>
      <listitem id="uS92hutAlw7dE" type="815" open="0"/>
      <listitem id="uxr2EvFs2Ej6J" type="814" open="0"/>
      <listitem id="uoBIfROj6Dby1" type="815" open="0"/>
      <listitem id="u8keLUDkSIFhx" type="815" open="0"/>
      <listitem id="u1jD1OkDnc6cH" type="815" open="0"/>
      <listitem id="uObiVqnT70K6x" type="815" open="0"/>
      <listitem id="uXF9SkMSDi5s5" type="814" open="0"/>
      <listitem id="uEAKaKgF326V2" type="814" open="0"/>
      <listitem id="uO5DAzTBzQPRE" type="814" open="0"/>
      <listitem id="uyAy386rzvkQ1" type="814" open="0"/>
      <listitem id="uEFsXtPrcjCUG" type="814" open="0"/>
      <listitem id="udlKcc2qra9Mn" type="814" open="0"/>
      <listitem id="unflzhYkpGcJd" type="814" open="0"/>
      <listitem id="udIfg8RRquJIJ" type="815" open="0"/>
      <listitem id="uK34Iw6RCtxON" type="815" open="0"/>
      <listitem id="uYE4xqZYt2OqY" type="814" open="0"/>
      <listitem id="uEHw2CixClgNa" type="814" open="0"/>
     </listitem>
     <listitem id="uLHv0wRO9A8cu" type="813" open="0">
      <listitem id="ujMElLunscJhe" type="815" open="0"/>
      <listitem id="u5uXP6SIB4S2X" type="814" open="0"/>
      <listitem id="ufNDioo1K7rQi" type="815" open="0"/>
      <listitem id="u2S1lRsRBmHrw" type="814" open="0"/>
      <listitem id="uffXCCo9wTEVv" type="814" open="0"/>
      <listitem id="uG6T1ujTRxhLu" type="814" open="0"/>
     </listitem>
     <listitem id="uyIsIfK4a5IPE" type="813" open="0">
      <listitem id="uLWcqLtWbB0HU" type="815" open="0"/>
      <listitem id="ukhvopWkOyp9L" type="814" open="0"/>
      <listitem id="uVLUvrGEJYPJ4" type="814" open="0"/>
      <listitem id="ut9r1FzmOgz0u" type="815" open="0"/>
      <listitem id="uojTvBLcgi6jm" type="815" open="0"/>
      <listitem id="uRvEOqcRDVdfg" type="815" open="0"/>
      <listitem id="uBFo52l4xI4Do" type="814" open="0"/>
     </listitem>
     <listitem id="uEgGMDwjxWoO1" type="818" open="1">
      <listitem id="udoHdslCCSR8U" type="813" open="0"/>
     </listitem>
     <listitem id="us0LnAGmSsTJZ" type="813" open="0"/>
     <listitem id="uJ6BuoF4byGed" type="807" label="Diagramme de classes" open="0"/>
     <listitem id="uKpu0UUOucg4K" type="813" open="1">
      <listitem id="uDfBgRheQnGkl" type="815" open="0"/>
      <listitem id="udJReoJOrDtxH" type="814" open="0"/>
      <listitem id="uqOXYhpSim2dI" type="815" open="0"/>
      <listitem id="uIS7KEt9a7EOY" type="814" open="0"/>
     </listitem>
     <listitem id="utO8aXIxJjnY6" type="813" open="0"/>
     <listitem id="uksLh76IlxOt4" type="813" open="0">
      <listitem id="u6XsCpaVI4Yel" type="815" open="0"/>
      <listitem id="umsI76PiWNGvh" type="814" open="0"/>
      <listitem id="urOdmLASe968d" type="815" open="0"/>
     </listitem>
     <listitem id="uawdYNITEybST" type="813" open="1">
      <listitem id="ukHAqstrYvZX6" type="813" open="0"/>
     </listitem>
     <listitem id="uegQR6CjKapeO" type="813" open="1">
      <listitem id="uubM1MA0Z9ck0" type="813" open="0"/>
     </listitem>
     <listitem id="u8fxeQ02S7jWh" type="813" open="0"/>
     <listitem id="uWQfw6ePFMlTB" type="813" open="0"/>
     <listitem id="uaeGzR62tBbZ3" type="818" open="1">
      <listitem id="u6yY1L4Y2wb9q" type="813" open="0"/>
      <listitem id="utQukrcRZuKrY" type="813" open="0"/>
      <listitem id="uZR4U8ojDO78p" type="813" open="0"/>
      <listitem id="u0YeaWHYOPbYg" type="813" open="0"/>
      <listitem id="uGEkuv3vwMzHp" type="813" open="0"/>
     </listitem>
     <listitem id="uza5z51id0aXe" type="813" open="1">
      <listitem id="umwKupApBMz12" type="813" open="0"/>
      <listitem id="uUazugxeV6SO6" type="813" open="1">
       <listitem id="uZi2k1Wngh2tt" type="813" open="0"/>
      </listitem>
     </listitem>
     <listitem id="u0OFlntDBwjDP" type="813" open="1">
      <listitem id="utCdQS76Pifzi" type="815" open="0"/>
      <listitem id="uViBj21dhl6Sz" type="814" open="0"/>
      <listitem id="un1NEAEcmfujG" type="814" open="0"/>
      <listitem id="uLL7YYnd1UhQY" type="815" open="0"/>
      <listitem id="uyntmkzCrIEva" type="814" open="0"/>
      <listitem id="uXxY9Lb8ApFzO" type="814" open="0"/>
      <listitem id="u7D6hq4muAArB" type="814" open="0"/>
     </listitem>
     <listitem id="un7aE5R6hbALf" type="813" open="0">
      <listitem id="u6EOkUprYWgKe" type="815" open="0"/>
      <listitem id="uXvR4gRdg9mzN" type="814" open="0"/>
      <listitem id="uXOztHhcdNmXE" type="814" open="0"/>
      <listitem id="uglePotyMTOCU" type="815" open="0"/>
      <listitem id="uVfpEmNeI7fwe" type="814" open="0"/>
      <listitem id="uFXt9BSBJoETv" type="814" open="0"/>
      <listitem id="udyK836qwyb4j" type="814" open="0"/>
      <listitem id="uTyeb04iHXMkS" type="814" open="0"/>
      <listitem id="uoRriiXAwQFbN" type="814" open="0"/>
     </listitem>
     <listitem id="uQd6vh6nCIrfQ" type="813" open="1">
      <listitem id="u46TEmFfRU9uz" type="813" open="0"/>
     </listitem>
     <listitem id="u6FbX7ciLBRbw" type="813" open="0">
      <listitem id="uhHQoNDabGcX5" type="815" open="0"/>
      <listitem id="uwYDaP50pYAqM" type="815" open="0"/>
      <listitem id="uRXgSyhFacIZ9" type="814" open="0"/>
     </listitem>
     <listitem id="uX23VKsBI7APb" type="813" open="0">
      <listitem id="uk8CvJquxYuHj" type="815" open="0"/>
      <listitem id="uTBJnRPha3nXl" type="814" open="0"/>
      <listitem id="uxDaCYKVW1vgT" type="815" open="0"/>
     </listitem>
     <listitem id="uLvRsomVYD7Lu" type="813" open="0">
      <listitem id="uaH9VJNQpfOpT" type="815" open="0"/>
      <listitem id="uHcCflr4lhBBV" type="814" open="0"/>
      <listitem id="uSdIx6Ea11QPZ" type="815" open="0"/>
     </listitem>
     <listitem id="u75adEKBvrc6n" type="813" open="0">
      <listitem id="urSCGMjeM2YUG" type="815" open="0"/>
     </listitem>
     <listitem id="urXSNZJSY4yaS" type="813" open="0">
      <listitem id="ujRTo7NEJ5jGx" type="815" open="0"/>
      <listitem id="ujLhCI3n9hCoN" type="814" open="0"/>
      <listitem id="uxmlNkV2FJhXg" type="814" open="0"/>
      <listitem id="u7XSup9UYWwOm" type="815" open="0"/>
      <listitem id="uueEOn9Hpy7u1" type="814" open="0"/>
     </listitem>
     <listitem id="u08XfPKrjDA8q" type="813" open="0">
      <listitem id="uyyl4Mq8SFadV" type="815" open="0"/>
      <listitem id="u4fLcT7M9giuI" type="814" open="0"/>
      <listitem id="uOuXTi0N0zMlH" type="814" open="0"/>
      <listitem id="uRctgwpofpAXg" type="815" open="0"/>
      <listitem id="uUnwOlZayxrQw" type="814" open="0"/>
     </listitem>
     <listitem id="uiqRYRR53ZeU4" type="813" open="0">
      <listitem id="uQZwLPFXq0OVt" type="815" open="0"/>
      <listitem id="u9R73tXtGh9ZX" type="814" open="0"/>
      <listitem id="ugA7gEyIfB3cR" type="814" open="0"/>
      <listitem id="uq5eJ7RHx0tjZ" type="815" open="0"/>
      <listitem id="us2TXrG2ui6hS" type="814" open="0"/>
      <listitem id="uwNvkSc6TfO78" type="814" open="0"/>
      <listitem id="u2cmDkgys1ewy" type="814" open="0"/>
     </listitem>
     <listitem id="upvTFWYeRouE9" type="813" open="0">
      <listitem id="u86PitKDIgk0j" type="815" open="0"/>
      <listitem id="uXq3c78f1eoI2" type="814" open="0"/>
      <listitem id="uQt3XrfugNU0d" type="814" open="0"/>
      <listitem id="uktbhV0onRhy0" type="815" open="0"/>
     </listitem>
     <listitem id="uBHGfxfNCFIgc" type="813" open="0">
      <listitem id="u2prdWFnY8gqh" type="815" open="0"/>
      <listitem id="uaiuh0mADL3qi" type="814" open="0"/>
      <listitem id="uHjxZc2RGxQGO" type="814" open="0"/>
      <listitem id="uV9TUOpqIB9MG" type="815" open="0"/>
     </listitem>
     <listitem id="u640GIhdzSsWO" type="813" open="0">
      <listitem id="uyw22tiH9iV38" type="815" open="0"/>
      <listitem id="uaFzV41iJxZw1" type="814" open="0"/>
      <listitem id="u6GikOriDlwYR" type="815" open="0"/>
      <listitem id="uGFb8k2ICTF57" type="814" open="0"/>
      <listitem id="uu65kpluWSQ7f" type="814" open="0"/>
     </listitem>
     <listitem id="u6rwxJLAnReBm" type="813" open="0">
      <listitem id="uoCLIy5drMOFM" type="815" open="0"/>
      <listitem id="u9vLKmUyfU90k" type="814" open="0"/>
      <listitem id="ui8RoPxU6ee4f" type="815" open="0"/>
      <listitem id="uoukzjiUdnyUT" type="814" open="0"/>
      <listitem id="uVZAhOH8CrAvf" type="814" open="0"/>
      <listitem id="uLX7Go7akIK6X" type="814" open="0"/>
      <listitem id="u9YyqfMxyiIwc" type="814" open="0"/>
     </listitem>
     <listitem id="uXYedYOcc5LRM" type="813" open="0">
      <listitem id="uk1DhOXeGzNV1" type="815" open="0"/>
      <listitem id="usLnh3M9iA47J" type="814" open="0"/>
      <listitem id="uB1Z55rg7PxR7" type="814" open="0"/>
      <listitem id="ucQ6b1QYiT6EW" type="815" open="0"/>
     </listitem>
     <listitem id="u9mu8ucbZlzgF" type="813" open="0">
      <listitem id="uNw2yPTqmMuVn" type="815" open="0"/>
      <listitem id="uqohdYf7oBDrl" type="814" open="0"/>
      <listitem id="uhvP8PBxPpMjw" type="814" open="0"/>
      <listitem id="uKz0FqY1u6wCf" type="814" open="0"/>
      <listitem id="umLboCYrTw25m" type="814" open="0"/>
      <listitem id="uFgZ0d1MNf3f0" type="814" open="0"/>
      <listitem id="up4V3vUdWDGaU" type="815" open="0"/>
      <listitem id="uk448xMRhc6b3" type="814" open="0"/>
      <listitem id="uFDNAZEeWlpFy" type="815" open="0"/>
      <listitem id="uOkTZCPYt9zb6" type="814" open="0"/>
      <listitem id="uJypoQWRO7mix" type="814" open="0"/>
     </listitem>
     <listitem id="uCyRkXQjDFtyh" type="813" open="0">
      <listitem id="uAucjhQ2GRu8K" type="815" open="0"/>
      <listitem id="uCBqNXvrCXUA5" type="814" open="0"/>
      <listitem id="udeJccykTGEFr" type="814" open="0"/>
      <listitem id="ud76W2ZeD6oI0" type="814" open="0"/>
      <listitem id="unU9axl6o0FT2" type="814" open="0"/>
      <listitem id="uszMx1SzAFt3m" type="814" open="0"/>
      <listitem id="ur9Z1pdT8cm64" type="814" open="0"/>
      <listitem id="uD9wQ78hgQTfG" type="814" open="0"/>
      <listitem id="uvXf0vmv0seSO" type="815" open="0"/>
      <listitem id="uZ1ajaM7Si2a7" type="814" open="0"/>
      <listitem id="uJTrY4YBpzMAg" type="814" open="0"/>
      <listitem id="unXZcsuqPSZBZ" type="815" open="0"/>
      <listitem id="uZmVkEKewHr3B" type="814" open="0"/>
      <listitem id="uyYWDtTGrC4cM" type="814" open="0"/>
     </listitem>
     <listitem id="uZj2u0fFpekHt" type="813" open="1">
      <listitem id="uMZ7W6Cxuel17" type="813" open="0"/>
     </listitem>
     <listitem id="urkvoAMir0kfK" type="813" open="0">
      <listitem id="usxIbFlSlPLW9" type="815" open="0"/>
      <listitem id="uhK3GwjkfLT5A" type="814" open="0"/>
      <listitem id="u65L5GxceEvrr" type="815" open="0"/>
     </listitem>
     <listitem id="uBYWpuukh3wTs" type="813" open="0">
      <listitem id="ul0bAPao7OL6f" type="815" open="0"/>
      <listitem id="ugrENKg3r09lb" type="815" open="0"/>
      <listitem id="umoCW4DfQgRLG" type="814" open="0"/>
      <listitem id="umHNEtMHKHyl4" type="814" open="0"/>
      <listitem id="uURiDp3kjNZjz" type="814" open="0"/>
      <listitem id="ulH1d0MFIUmWs" type="814" open="0"/>
      <listitem id="umLf5RSvmJpX0" type="814" open="0"/>
      <listitem id="uTHdO4jMD8juX" type="814" open="0"/>
      <listitem id="uPdzy0HRZRKI9" type="814" open="0"/>
      <listitem id="ulI9lQEVswYc2" type="814" open="0"/>
      <listitem id="uWjC1VAFHIpcz" type="814" open="0"/>
      <listitem id="uKyqxtvUvVF7I" type="814" open="0"/>
      <listitem id="uJ8ZzVbJGFhvm" type="815" open="0"/>
     </listitem>
     <listitem id="uTyahUt3MfYmK" type="813" open="0">
      <listitem id="ueG3s4YsOavpk" type="815" open="0"/>
      <listitem id="u7FIAsL3BWpTL" type="815" open="0"/>
      <listitem id="uXfMPMXI9mh2U" type="814" open="0"/>
      <listitem id="unYRCfotZKjCt" type="814" open="0"/>
      <listitem id="uSB8mndvxlzug" type="814" open="0"/>
      <listitem id="uZMWuwHjlLwHG" type="814" open="0"/>
     </listitem>
     <listitem id="uSSnPGBge6Wsv" type="813" open="0">
      <listitem id="uPbJnYJDvXmMp" type="815" open="0"/>
      <listitem id="ugWK3qUzCe9Wn" type="815" open="0"/>
      <listitem id="unBrxRXmAZQWW" type="814" open="0"/>
      <listitem id="uEvffrElu0sgd" type="814" open="0"/>
      <listitem id="uyFAqArbGBhSL" type="814" open="0"/>
      <listitem id="uJBzt77Meuf4F" type="814" open="0"/>
      <listitem id="ubLrZ7tGl2ILw" type="814" open="0"/>
      <listitem id="uRarWgAfppXIP" type="814" open="0"/>
      <listitem id="uhMs8q4K9OmwN" type="814" open="0"/>
      <listitem id="uf8g5P9zzvqST" type="814" open="0"/>
      <listitem id="uM1Of6tFAlj7n" type="814" open="0"/>
      <listitem id="ui8EWL50Zrnkl" type="814" open="0"/>
      <listitem id="uiUDyHUHx2bdS" type="815" open="0"/>
     </listitem>
     <listitem id="uxBt1LkDZZbmJ" type="813" open="0">
      <listitem id="uImbAmjwK9cK0" type="815" open="0"/>
      <listitem id="uKOMi1RFTz2z5" type="814" open="0"/>
      <listitem id="uZuAMOiJNrAi9" type="814" open="0"/>
      <listitem id="u5zz3DJx4AWH6" type="815" open="0"/>
      <listitem id="uRc9T40wZsPDs" type="814" open="0"/>
     </listitem>
     <listitem id="uNPPKJL9lq9mG" type="813" open="0">
      <listitem id="ufaQyJFbZXeaf" type="815" open="0"/>
      <listitem id="uLWXfbjfBeYLt" type="814" open="0"/>
      <listitem id="uvHnowAjeIEJ2" type="815" open="0"/>
      <listitem id="uU7ZqnZwPOgzk" type="815" open="0"/>
      <listitem id="uK39kcXOXPckH" type="814" open="0"/>
     </listitem>
     <listitem id="u3Sk7o1CVLk9F" type="813" open="0">
      <listitem id="uc8CPWDeWXTjd" type="815" open="0"/>
      <listitem id="ugloiqwsxgbzg" type="814" open="0"/>
      <listitem id="u2Be3QLL4RnKZ" type="815" open="0"/>
      <listitem id="uTCdDoZd6Rs6j" type="814" open="0"/>
      <listitem id="u9sewZFxiWY3K" type="814" open="0"/>
      <listitem id="uenapBdtvDt3e" type="814" open="0"/>
      <listitem id="u0AHD7LqPYqqF" type="814" open="0"/>
     </listitem>
     <listitem id="ueh6gSzgKDAHa" type="813" open="0">
      <listitem id="uDLsqwWJ2vehc" type="815" open="0"/>
      <listitem id="uokUwMDdoI6Qb" type="815" open="0"/>
      <listitem id="ulgQ967lxU2dC" type="814" open="0"/>
      <listitem id="uC8ivDVstF4BC" type="814" open="0"/>
      <listitem id="uKNOgaar8Rxja" type="814" open="0"/>
     </listitem>
     <listitem id="u51ebs4Agyot8" type="813" open="0">
      <listitem id="uoktgALmuhkiF" type="815" open="0"/>
      <listitem id="uqEiINF9pkRrd" type="815" open="0"/>
      <listitem id="u8JqVsKr7YFvq" type="814" open="0"/>
      <listitem id="uKbuN2OhqN0DX" type="814" open="0"/>
      <listitem id="utdIGCL92tjOc" type="814" open="0"/>
      <listitem id="uXxPpQn0mc07C" type="814" open="0"/>
      <listitem id="u9LtAikg8SpV1" type="814" open="0"/>
      <listitem id="ukmUlAKYFTVNS" type="814" open="0"/>
      <listitem id="uFf2F65J0gZqP" type="814" open="0"/>
     </listitem>
     <listitem id="u0vcc7HEx8M7Q" type="813" open="0">
      <listitem id="u2ZPaBV3ncf3B" type="815" open="0"/>
      <listitem id="uw8Q1rvGpQC0q" type="814" open="0"/>
      <listitem id="u3mcOF2lnwben" type="814" open="0"/>
      <listitem id="uDGP5BiTrKtRG" type="815" open="0"/>
     </listitem>
     <listitem id="uCdFnk9M6H2JO" type="813" open="0">
      <listitem id="uG1uUiW4XGmCL" type="815" open="0"/>
      <listitem id="uc5bxtLiqY67U" type="814" open="0"/>
      <listitem id="ulfAPFPuzbO6T" type="815" open="0"/>
      <listitem id="uc4BJQJFnf2sA" type="814" open="0"/>
     </listitem>
     <listitem id="uVwx4FBJ2eClZ" type="813" open="0">
      <listitem id="utua3ataGu0ei" type="815" open="0"/>
      <listitem id="uJFwz33VsHE41" type="814" open="0"/>
      <listitem id="u0lK0fP1KmxSz" type="814" open="0"/>
      <listitem id="uw5TcvlJAUiwm" type="814" open="0"/>
      <listitem id="ue7jrjvXuBAd1" type="815" open="0"/>
      <listitem id="uKhljHtuoMhMn" type="814" open="0"/>
     </listitem>
     <listitem id="u6OViyPQvkDVI" type="813" open="0">
      <listitem id="uit7vmEaZBIB6" type="815" open="0"/>
      <listitem id="ue7euMpbRITNk" type="815" open="0"/>
      <listitem id="uLdqg2mX2ALJh" type="815" open="0"/>
      <listitem id="u6P7o7VQjuokz" type="815" open="0"/>
     </listitem>
     <listitem id="uhkx18OqixFht" type="813" open="0">
      <listitem id="ucOLzomLyCpOk" type="815" open="0"/>
      <listitem id="uben6oq26mrpT" type="814" open="0"/>
      <listitem id="u0059Ykk4rW2P" type="814" open="0"/>
      <listitem id="uehoQZU1aJU6V" type="814" open="0"/>
      <listitem id="uY7OvpCeoJmRk" type="815" open="0"/>
      <listitem id="ux8uuHDExaAIR" type="814" open="0"/>
      <listitem id="ubk76Ce3DOLb6" type="814" open="0"/>
     </listitem>
     <listitem id="u541UKD0VLPOJ" type="813" open="1">
      <listitem id="uIRsQNKj1NSeP" type="813" open="0"/>
      <listitem id="u1VOp5lW7J9Xl" type="813" open="0"/>
      <listitem id="uJUKEf16H7kEu" type="813" open="0"/>
      <listitem id="uMBljuHhnYW0H" type="813" open="0"/>
      <listitem id="uaRTqDcce8AgB" type="818" open="1">
       <listitem id="uuBCxAtCsLAbp" type="813" open="0"/>
       <listitem id="ueuFx14cpL0sm" type="813" open="0"/>
       <listitem id="uuIJUqK3zuajQ" type="813" open="0"/>
       <listitem id="uJGyAvdfjYAvc" type="813" open="0"/>
      </listitem>
      <listitem id="uf4iACv1tZ80g" type="813" open="0"/>
      <listitem id="ujgHwuH3Pqeny" type="818" open="1">
       <listitem id="u3B8QKP9woasQ" type="818" open="1">
        <listitem id="uxgE2dlNH0IcT" type="813" open="0"/>
       </listitem>
      </listitem>
     </listitem>
     <listitem id="uY1L2WXCFAbhY" type="813" open="0">
      <listitem id="uk99kgKFK4GZ7" type="815" open="0"/>
      <listitem id="u76wym6ECHnYS" type="814" open="0"/>
      <listitem id="uMY0S6EXBawht" type="814" open="0"/>
      <listitem id="uV9QiZUJrAKpA" type="814" open="0"/>
      <listitem id="uT4sYYgGQIwRQ" type="814" open="0"/>
      <listitem id="u4OIongQxYctM" type="814" open="0"/>
      <listitem id="uLFxqfAt07V9H" type="814" open="0"/>
      <listitem id="uHGsluzRpqC1i" type="815" open="0"/>
      <listitem id="uS3T8mCyQvj2w" type="814" open="0"/>
      <listitem id="uLsigaAswLLq3" type="815" open="0"/>
      <listitem id="uxkzYIcJMAl8T" type="815" open="0"/>
      <listitem id="ux9yg7V72AKb3" type="815" open="0"/>
      <listitem id="uKIJsgDn7vB9M" type="815" open="0"/>
      <listitem id="uWan65ZC461WO" type="814" open="0"/>
      <listitem id="uxVNQwi1CJASR" type="814" open="0"/>
      <listitem id="uMggQM2FDaTcf" type="814" open="0"/>
      <listitem id="u2agAwIKkUDTw" type="814" open="0"/>
      <listitem id="u0CvrRXEsrDja" type="814" open="0"/>
      <listitem id="uLLJBTCwt5Zwl" type="815" open="0"/>
      <listitem id="uSPMHFrv0LQCZ" type="815" open="0"/>
      <listitem id="u4TMuDHCQHdFb" type="814" open="0"/>
      <listitem id="uQ5x9ypWTd9Rd" type="814" open="0"/>
     </listitem>
     <listitem id="uZfJjhXIXk7j0" type="813" open="0">
      <listitem id="uwCZsk4IX0MuS" type="815" open="0"/>
      <listitem id="ucTtFPIyiPNvV" type="814" open="0"/>
      <listitem id="uszTqkRFqKWDC" type="814" open="0"/>
      <listitem id="uvRzwGTfM6bxf" type="814" open="0"/>
      <listitem id="uJAoP5hV6Cw4a" type="814" open="0"/>
      <listitem id="uBjQ6M12H7UQt" type="814" open="0"/>
      <listitem id="u26NLWbXDGhaE" type="815" open="0"/>
      <listitem id="uIzWx7KRh9AKh" type="815" open="0"/>
      <listitem id="uEkbhisszGUWS" type="814" open="0"/>
      <listitem id="uWx3JoJuiDHnJ" type="814" open="0"/>
     </listitem>
     <listitem id="uZtkehQDEYodk" type="813" open="0">
      <listitem id="un61vAWLODBbR" type="815" open="0"/>
      <listitem id="uY10YmBabReCQ" type="814" open="0"/>
      <listitem id="upTdSETGdTqr4" type="814" open="0"/>
      <listitem id="uNwi5H2JRItre" type="815" open="0"/>
      <listitem id="uX8FoLSwAmmSq" type="814" open="0"/>
      <listitem id="uqKMmNTbAKFgZ" type="814" open="0"/>
     </listitem>
     <listitem id="u3eoTHLFYDGeC" type="813" open="0">
      <listitem id="uS0fSSj7OtQGS" type="815" open="0"/>
      <listitem id="uVPrBYQPEsURu" type="814" open="0"/>
      <listitem id="uWLginBOy8KZ8" type="814" open="0"/>
      <listitem id="ukmPEUi4SxyKz" type="814" open="0"/>
      <listitem id="uLjlh2njcZnsW" type="814" open="0"/>
      <listitem id="uo3nWlxnD83dP" type="814" open="0"/>
      <listitem id="uHk5q8RMniAkd" type="814" open="0"/>
      <listitem id="uppRg8AbV3QnK" type="815" open="0"/>
      <listitem id="uVUjvNIBbwJq4" type="815" open="0"/>
      <listitem id="umAgGJ1NCL0H5" type="814" open="0"/>
      <listitem id="uZT4CXkxH8y4M" type="814" open="0"/>
      <listitem id="uMdqYIi3e8Dwl" type="814" open="0"/>
     </listitem>
     <listitem id="udds1DELhHMYK" type="813" open="0">
      <listitem id="uFRfF80RbZ4xC" type="815" open="0"/>
      <listitem id="uVB7Ytvizdn0v" type="814" open="0"/>
      <listitem id="u0vWkPwNUPTuk" type="815" open="0"/>
      <listitem id="ulHozkF5Tg3aM" type="814" open="0"/>
      <listitem id="uuirSaPkUn9jK" type="814" open="0"/>
     </listitem>
     <listitem id="uA6Ay2ZfrZ3B2" type="813" open="0">
      <listitem id="uPSQr4q3LlF76" type="815" open="0"/>
      <listitem id="uXnJPmPOznkCo" type="814" open="0"/>
      <listitem id="uy4dmA1SW9qhE" type="814" open="0"/>
      <listitem id="uW9K9NC9jO8aa" type="814" open="0"/>
      <listitem id="ui8SoRKDpRlsL" type="814" open="0"/>
      <listitem id="uhJ7mgQ3XHIp6" type="814" open="0"/>
      <listitem id="uHgbGWhGGG7OF" type="815" open="0"/>
      <listitem id="u4R2akylRtClF" type="815" open="0"/>
      <listitem id="uU77esmEevWWh" type="814" open="0"/>
      <listitem id="uLIy4cXhGW71d" type="814" open="0"/>
      <listitem id="uEWLT09DMkheT" type="814" open="0"/>
     </listitem>
     <listitem id="umyiVnwmED9ET" type="813" open="0">
      <listitem id="uS3Wa0dXGLXTo" type="815" open="0"/>
      <listitem id="um7XlMFVwRO05" type="814" open="0"/>
      <listitem id="uljguzjZnpRTc" type="814" open="0"/>
      <listitem id="ujjVlZMJFSbgR" type="815" open="0"/>
     </listitem>
     <listitem id="uha2A7b5LYM86" type="813" open="0">
      <listitem id="uHDkvvZzJd14t" type="815" open="0"/>
      <listitem id="u0mopOlgAyioC" type="814" open="0"/>
      <listitem id="uHBbGdrMf2GTL" type="814" open="0"/>
      <listitem id="uNHfXxxtfF2rO" type="814" open="0"/>
      <listitem id="urpQbIY6G85L0" type="814" open="0"/>
      <listitem id="uXUxgVB8HHvGm" type="814" open="0"/>
      <listitem id="utBIM96ySevOg" type="814" open="0"/>
      <listitem id="uYDelGiCS5AUf" type="815" open="0"/>
      <listitem id="uQ9Ucb5Pik3r0" type="815" open="0"/>
      <listitem id="uUCft2QTacg07" type="815" open="0"/>
      <listitem id="uT2EIG2jyj6qd" type="814" open="0"/>
      <listitem id="ujdIUWtl59eFP" type="814" open="0"/>
      <listitem id="ueoU4HpIdzSEW" type="814" open="0"/>
      <listitem id="uLLVbDRRQVHfp" type="814" open="0"/>
     </listitem>
     <listitem id="Datatypes" type="830" open="0">
      <listitem id="uMiFBHEnjTBta" type="829" open="1"/>
      <listitem id="uR4u51QglJUwu" type="829" open="1"/>
      <listitem id="u9ApBEDyvrqN5" type="829" open="1"/>
      <listitem id="uvBhCm6WK8jRM" type="829" open="1"/>
      <listitem id="uenFS4WYhQUaR" type="829" open="1"/>
      <listitem id="uskCRuNINri1y" type="829" open="1"/>
      <listitem id="uyrabyMMSVgI3" type="829" open="1"/>
      <listitem id="u27FcBrsL7fnn" type="829" open="1"/>
      <listitem id="u5MLJlIRa0eqS" type="829" open="1"/>
      <listitem id="uUffSdhSc9MEm" type="829" open="1"/>
      <listitem id="uyHXjUDO2o3qa" type="829" open="1"/>
     </listitem>
     <listitem id="uP2PAkC0vGNIu" type="813" open="0">
      <listitem id="uS7Yczg7CtDit" type="815" open="0"/>
      <listitem id="uLEFwAlvnvWXN" type="814" open="0"/>
      <listitem id="uM9gcabMZtWLu" type="815" open="0"/>
     </listitem>
    </listitem>
   </listitem>
  </listview>
  <codegeneration>
   <codegenerator language="Python">
    <sourcecode id="uzSQyNX7gz6rF" value="self.trainer=trainer_instance&#10;"/>
    <sourcecode id="ueAKH8pi2Ldy8" value="pass&#10;"/>
    <sourcecode id="umjLMCpDj9ke0" value="pass&#10;"/>
    <sourcecode id="u3yaEXWL0GwGz" value="pass&#10;"/>
    <sourcecode id="uyRXEzrs1A9YC" value="pass&#10;"/>
    <sourcecode id="uWMG7ijmndt21" value="pass&#10;"/>
    <sourcecode id="uLWcqLtWbB0HU" value="self.print_train_loss=print_train_loss&#10;self.as_json=as_json&#10;self.epoch_counter=0&#10;"/>
    <sourcecode id="uRvEOqcRDVdfg" value="if self.as_json:&#10;  dump=dict(mode='test',epoch=self.epoch_counter,loss=self._get_metric(loss))&#10;  for k,v in logs.items():&#10;    dump[k]=self._get_metric(v)&#10;&#10;  output_message=json.dumps(dump)&#10;&#10;else:&#10;  output_message=f'test: epoch {self.epoch_counter}, loss {loss},  {logs}'&#10;&#10;print(output_message,flush=True)&#10;"/>
    <sourcecode id="uojTvBLcgi6jm" value="if self.print_train_loss:&#10;  if self.as_json:&#10;    dump=dict(mode='train',epoch=self.epoch_counter,loss=self._get_metric(loss))&#10;    for k,v in logs.items():&#10;      dump[k]=self._get_metric(v)&#10;&#10;    output_message=json.dumps(dump)&#10;&#10;  else:&#10;    output_message=f'train: epoch {self.epoch_counter}, loss {loss},  {logs}'&#10;&#10;  print(output_message,flush=True)&#10;&#10;self.epoch_counter+=1&#10;"/>
    <sourcecode id="ut9r1FzmOgz0u" value="if torch.is_tensor(metric)and metric.dim()&gt;1:&#10;  return metric.mean().item()&#10;&#10;elif torch.is_tensor(metric):&#10;  return metric.item()&#10;&#10;elif type(metric)==float:&#10;  return metric&#10;&#10;else:&#10;  raise TypeError('Metric must be either float or torch.Tensor')&#10;&#10;"/>
    <sourcecode id="uit7vmEaZBIB6" value="if writer:&#10;  self.writer=writer&#10;&#10;else:&#10;  self.writer=get_summary_writer&#10;&#10;self.epoch_counter=0&#10;"/>
    <sourcecode id="uLdqg2mX2ALJh" value="self.writer.add_scalar(tag=f'test/loss',scalar_value=loss.mean(),global_step=self.epoch)&#10;for k,v in logs.items():&#10;  self.writer.add_scalar(tag=f'test/{k}',scalar_value=v,global_step=self.epoch)&#10;&#10;"/>
    <sourcecode id="ue7euMpbRITNk" value="self.writer.add_scalar(tag=f'train/loss',scalar_value=loss.mean(),global_step=self.epoch)&#10;for k,v in logs.items():&#10;  self.writer.add_scalar(tag=f'train/{k}',scalar_value=v,global_step=self.epoch)&#10;&#10;self.epoch_counter+=1&#10;"/>
    <sourcecode id="u6P7o7VQjuokz" value="self.writer.close()&#10;"/>
    <sourcecode id="utua3ataGu0ei" value="self.agent=agent&#10;assert hasattr(agent,'temperature'),'Agent must have a `temperature` attribute'&#10;assert not isinstance(agent.temperature,torch.nn.Parameter),\&#10;'When using TemperatureUpdater, `temperature` cannot be trainable'self.decay=decay&#10;self.minimum=minimum&#10;self.update_frequency=update_frequency&#10;self.epoch_counter=0&#10;"/>
    <sourcecode id="ue7jrjvXuBAd1" value="if self.epoch_counter%self.update_frequency==0:&#10;  self.agent.temperature=max(self.minimum,self.agent.temperature*self.decay)&#10;&#10;self.epoch_counter+=1&#10;"/>
    <sourcecode id="u1nEGHXwKZQVZ" value="self.checkpoint_path=pathlib.Path(checkpoint_path)&#10;self.checkpoint_freq=checkpoint_freq&#10;self.prefix=prefix&#10;self.epoch_counter=0&#10;"/>
    <sourcecode id="uj0PymOA5CuBi" value="if self.checkpoint_freq&gt;0 and(self.epoch_counter%self.checkpoint_freq==0):&#10;  filename=f'{self.prefix}_{self.epoch_counter}'if self.prefix else str(self.epoch_counter)&#10;  self.save_checkpoint(filename=filename)&#10;&#10;self.epoch_counter+=1&#10;"/>
    <sourcecode id="uzNcGAbcngNBP" value="self.save_checkpoint(filename=f'{self.prefix}_final'if self.prefix else'final')&#10;"/>
    <sourcecode id="unFplW7yfYSDw" value="self.checkpoint_path.mkdir(exist_ok=True)&#10;path=self.checkpoint_path/f'{filename}.tar'&#10;torch.save(self.get_checkpoint(),path)&#10;"/>
    <sourcecode id="uBAfydLmTODGT" value="return Checkpoint(epoch=self.epoch_counter,&#10;model_state_dict=self.trainer.game.state_dict(),optimizer_state_dict=self.trainer.optimizer.state_dict()"/>
    <sourcecode id="uhQmNh8Mw1GUs" value="super(BaseEarlyStopper,self).__init__()&#10;self.train_stats:List[Tuple[float,Dict[str,Any]]]=[]&#10;self.validation_stats:List[Tuple[float,Dict[str,Any]]]=[]&#10;self.epoch:int=0&#10;"/>
    <sourcecode id="ukk9uJ30eY0wc" value="self.epoch+=1&#10;self.train_stats.append((loss,logs))&#10;"/>
    <sourcecode id="uH4hGELmpadbX" value="self.validation_stats.append((loss,logs))&#10;self.trainer.should_stop=self.should_stop()&#10;"/>
    <sourcecode id="uW9HHPPYMSFyA" value="raise NotImplementedError()&#10;"/>
    <sourcecode id="uDfBgRheQnGkl" value="super(EarlyStopperAccuracy,self).__init__()&#10;self.threshold=threshold&#10;self.field_name=field_name&#10;"/>
    <sourcecode id="uqOXYhpSim2dI" value="assert self.trainer.validation_data is not None,'Validation data must be provided for early stooping to work'&#10;return self.validation_stats[-1][1][self.field_name]&gt;self.threshold"/>
    <sourcecode id="u6XsCpaVI4Yel" value="super(GumbelSoftmaxWrapper,self).__init__()&#10;self.agent=agent&#10;if not trainable_temperature:&#10;  self.temperature=temperature&#10;&#10;else:&#10;  self.temperature=torch.nn.Parameter(torch.tensor([temperature]),requires_grad=True)&#10;&#10;"/>
    <sourcecode id="urOdmLASe968d" value="logits=self.agent(*args,**kwargs)&#10;if self.training:&#10;  return RelaxedOneHotCategorical(logits=logits,temperature=self.temperature).rsample()&#10;&#10;else:&#10;  return torch.zeros_like(logits).scatter_(-1,logits.argmax(dim=-1,keepdim=True),1.0)&#10;&#10;"/>
    <sourcecode id="uDLsqwWJ2vehc" value="super(SymbolGameGS,self).__init__()&#10;self.sender=sender&#10;self.receiver=receiver&#10;self.loss=loss&#10;"/>
    <sourcecode id="uokUwMDdoI6Qb" value="message=self.sender(sender_input)&#10;receiver_output=self.receiver(message,receiver_input)&#10;loss,rest_info=self.loss(sender_input,message,receiver_input,receiver_output,labels)&#10;for k,v in rest_info.items():&#10;  if hasattr(v,'mean'):&#10;    rest_info[k]=v.mean().item()&#10;&#10;&#10;return loss.mean(),rest_info&#10;"/>
    <sourcecode id="urSCGMjeM2YUG" value="if isinstance(x,torch.LongTensor)or(torch.cuda.is_available()and isinstance(x,torch.cuda.LongTensor)):&#10;  return F.embedding(x,self.weight,self.padding_idx,self.max_norm,self.norm_type,self.scale_grad_by_freq,self.sparse)&#10;&#10;else:&#10;  return torch.matmul(x,self.weight)&#10;&#10;"/>
    <sourcecode id="u2ZPaBV3ncf3B" value="super(SymbolReceiverWrapper,self).__init__()&#10;self.agent=agent&#10;self.embedding=RelaxedEmbedding(vocab_size,agent_input_size)&#10;"/>
    <sourcecode id="uDGP5BiTrKtRG" value="embedded_message=self.embedding(message)&#10;return self.agent(embedded_message,input)&#10;"/>
    <sourcecode id="uNw2yPTqmMuVn" value="super(RnnSenderGS,self).__init__()&#10;self.agent=agent&#10;self.force_eos=force_eos&#10;self.max_len=max_len&#10;if self.force_eos:&#10;  self.max_len-=1&#10;&#10;self.hidden_to_output=nn.Linear(hidden_size,vocab_size)&#10;self.embedding=nn.Linear(vocab_size,embed_dim)&#10;self.sos_embedding=nn.Parameter(torch.zeros(embed_dim))&#10;self.embed_dim=embed_dim&#10;self.vocab_size=vocab_size&#10;if not trainable_temperature:&#10;  self.temperature=temperature&#10;&#10;else:&#10;  self.temperature=torch.nn.Parameter(torch.tensor([temperature]),requires_grad=True)&#10;&#10;self.cell=None&#10;cell=cell.lower()&#10;if cell=='rnn':&#10;  self.cell=nn.RNNCell(input_size=embed_dim,hidden_size=hidden_size)&#10;&#10;elif cell=='gru':&#10;  self.cell=nn.GRUCell(input_size=embed_dim,hidden_size=hidden_size)&#10;&#10;elif cell=='lstm':&#10;  self.cell=nn.LSTMCell(input_size=embed_dim,hidden_size=hidden_size)&#10;&#10;else:&#10;  raise ValueError(f&quot;Unknown RNN Cell: {cell}&quot;)&#10;&#10;self.reset_parameters()&#10;"/>
    <sourcecode id="uFDNAZEeWlpFy" value="nn.init.normal_(self.sos_embedding,0.0,0.01)&#10;"/>
    <sourcecode id="up4V3vUdWDGaU" value="prev_hidden=self.agent(x)&#10;prev_c=torch.zeros_like(prev_hidden)&#10;e_t=torch.stack([self.sos_embedding]*prev_hidden.size(0))&#10;sequence=[]&#10;for step in range(self.max_len):&#10;  if isinstance(self.cell,nn.LSTMCell):&#10;    h_t,prev_c=self.cell(e_t,(prev_hidden,prev_c))&#10;&#10;  else:&#10;    h_t=self.cell(e_t,prev_hidden)&#10;&#10;  step_logits=F.log_softmax(self.hidden_to_output(h_t),dim=1)&#10;  distr=RelaxedOneHotCategorical(logits=step_logits,temperature=self.temperature)&#10;  if self.training:&#10;    x=distr.rsample()&#10;&#10;  else:&#10;    x=torch.zeros_like(step_logits).scatter_(-1,step_logits.argmax(dim=-1,keepdim=True),1.0)&#10;&#10;  prev_hidden=h_t&#10;  e_t=self.embedding(x)&#10;  sequence.append(x)&#10;&#10;sequence=torch.stack(sequence).permute(1,0,2)&#10;if self.force_eos:&#10;  eos=torch.zeros_like(sequence[:,0,:]).unsqueeze(1)&#10;  eos[:,0,0]=1&#10;  sequence=torch.cat([sequence,eos],dim=1)&#10;&#10;return sequence&#10;"/>
    <sourcecode id="u2prdWFnY8gqh" value="super(RnnReceiverGS,self).__init__()&#10;self.agent=agent&#10;self.cell=None&#10;cell=cell.lower()&#10;if cell=='rnn':&#10;  self.cell=nn.RNNCell(input_size=embed_dim,hidden_size=hidden_size)&#10;&#10;elif cell=='gru':&#10;  self.cell=nn.GRUCell(input_size=embed_dim,hidden_size=hidden_size)&#10;&#10;elif cell=='lstm':&#10;  self.cell=nn.LSTMCell(input_size=embed_dim,hidden_size=hidden_size)&#10;&#10;else:&#10;  raise ValueError(f&quot;Unknown RNN Cell: {cell}&quot;)&#10;&#10;self.embedding=nn.Linear(vocab_size,embed_dim)&#10;"/>
    <sourcecode id="uV9TUOpqIB9MG" value="outputs=[]&#10;emb=self.embedding(message)&#10;prev_hidden=None&#10;prev_c=None&#10;for step in range(message.size(1)):&#10;  e_t=emb[:,step,...]&#10;  if isinstance(self.cell,nn.LSTMCell):&#10;    h_t,prev_c=self.cell(e_t,(prev_hidden,prev_c))if prev_hidden is not None else\&#10;    self.cell(e_t)&#10;  else:&#10;    h_t=self.cell(e_t,prev_hidden)&#10;&#10;  outputs.append(self.agent(h_t,input))&#10;  prev_hidden=h_t&#10;&#10;outputs=torch.stack(outputs).permute(1,0,2)&#10;return outputs&#10;"/>
    <sourcecode id="ueG3s4YsOavpk" value="super(SenderReceiverRnnGS,self).__init__()&#10;self.sender=sender&#10;self.receiver=receiver&#10;self.loss=loss&#10;self.length_cost=length_cost&#10;"/>
    <sourcecode id="u7FIAsL3BWpTL" value="message=self.sender(sender_input)&#10;receiver_output=self.receiver(message,receiver_input)&#10;loss=0&#10;not_eosed_before=torch.ones(receiver_output.size(0)).to(receiver_output.device)&#10;expected_length=0.0&#10;rest=:&#10;&#10;&#10;z=0.0&#10;for step in range(receiver_output.size(1)):&#10;  step_loss,step_rest=self.loss(sender_input,message[:,step,...],receiver_input,receiver_output[:,step,...],labels)&#10;  eos_mask=message[:,step,0]&#10;  add_mask=eos_mask*not_eosed_before&#10;  z+=add_mask&#10;  loss+=step_loss*add_mask+self.length_cost*(1.0+step)*add_mask&#10;  expected_length+=add_mask.detach()*(1.0+step)&#10;  for name,value in step_rest.items():&#10;    rest[name]=value*add_mask+rest.get(name,0.0)&#10;&#10;  not_eosed_before=not_eosed_before*(1.0-eos_mask)&#10;&#10;loss+=step_loss*not_eosed_before+self.length_cost*(step+1.0)*not_eosed_before&#10;expected_length+=(step+1)*not_eosed_before&#10;z+=not_eosed_before&#10;assert z.allclose(torch.ones_like(z)),f&quot;lost probability mass, {z.min()}, {z.max()}&quot;&#10;for name,value in step_rest.items():&#10;  rest[name]=value*not_eosed_before+rest.get(name,0.0)&#10;&#10;for name,value in rest.items():&#10;  rest[name]=value.mean()&#10;&#10;rest['mean_length']=expected_length.mean()&#10;return loss.mean(),rest"/>
    <sourcecode id="uaH9VJNQpfOpT" value="super(ReinforceWrapper,self).__init__()&#10;self.agent=agent&#10;"/>
    <sourcecode id="uSdIx6Ea11QPZ" value="logits=self.agent(*args,**kwargs)&#10;distr=Categorical(logits=logits)&#10;entropy=distr.entropy()&#10;if self.training:&#10;  sample=distr.sample()&#10;&#10;else:&#10;  sample=logits.argmax(dim=1)&#10;&#10;log_prob=distr.log_prob(sample)&#10;return sample,log_prob,entropy&#10;"/>
    <sourcecode id="uk8CvJquxYuHj" value="super(ReinforceDeterministicWrapper,self).__init__()&#10;self.agent=agent&#10;"/>
    <sourcecode id="uxDaCYKVW1vgT" value="out=self.agent(*args,**kwargs)&#10;return out,torch.zeros(1).to(out.device),torch.zeros(1).to(out.device)&#10;"/>
    <sourcecode id="uoktgALmuhkiF" value="super(SymbolGameReinforce,self).__init__()&#10;self.sender=sender&#10;self.receiver=receiver&#10;self.loss=loss&#10;self.receiver_entropy_coeff=receiver_entropy_coeff&#10;self.sender_entropy_coeff=sender_entropy_coeff&#10;self.mean_baseline=0.0&#10;self.n_points=0.0&#10;"/>
    <sourcecode id="uqEiINF9pkRrd" value="message,sender_log_prob,sender_entropy=self.sender(sender_input)&#10;receiver_output,receiver_log_prob,receiver_entropy=self.receiver(message,receiver_input)&#10;loss,rest_info=self.loss(sender_input,message,receiver_input,receiver_output,labels)&#10;policy_loss=((loss.detach()-self.mean_baseline)*(sender_log_prob+receiver_log_prob)).mean()&#10;entropy_loss=-(sender_entropy.mean()*self.sender_entropy_coeff+receiver_entropy.mean()*self.receiver_entropy_coeff)&#10;if self.training:&#10;  self.n_points+=1.0&#10;  self.mean_baseline+=(loss.detach().mean().item()-&#10;  self.mean_baseline)/self.n_points&#10;full_loss=policy_loss+entropy_loss+loss.mean()&#10;for k,v in rest_info.items():&#10;  if hasattr(v,'mean'):&#10;    rest_info[k]=v.mean().item()&#10;&#10;&#10;rest_info['baseline']=self.mean_baseline&#10;rest_info['loss']=loss.mean().item()&#10;rest_info['sender_entropy']=sender_entropy.mean()&#10;rest_info['receiver_entropy']=receiver_entropy.mean()&#10;return full_loss,rest_info&#10;"/>
    <sourcecode id="uAucjhQ2GRu8K" value="super(RnnSenderReinforce,self).__init__()&#10;self.agent=agent&#10;self.force_eos=force_eos&#10;self.max_len=max_len&#10;if force_eos:&#10;  self.max_len-=1&#10;&#10;self.hidden_to_output=nn.Linear(hidden_size,vocab_size)&#10;self.embedding=nn.Embedding(vocab_size,embed_dim)&#10;self.sos_embedding=nn.Parameter(torch.zeros(embed_dim))&#10;self.embed_dim=embed_dim&#10;self.vocab_size=vocab_size&#10;self.num_layers=num_layers&#10;self.cells=None&#10;cell=cell.lower()&#10;cell_types=:&#10;  'rnn':nn.RNNCell,'gru':nn.GRUCell,'lstm':nn.LSTMCell&#10;&#10;if cell not in cell_types:&#10;  raise ValueError(f&quot;Unknown RNN Cell: {cell}&quot;)&#10;&#10;cell_type=cell_types[cell]&#10;self.cells=nn.ModuleList([&#10;cell_type(input_size=embed_dim,hidden_size=hidden_size)if i==0 else\cell_type(input_size=hidden_size,hidden_size=hidden_size)for i in range(self.num_layers)])self.reset_parameters()&#10;"/>
    <sourcecode id="unXZcsuqPSZBZ" value="nn.init.normal_(self.sos_embedding,0.0,0.01)&#10;"/>
    <sourcecode id="uvXf0vmv0seSO" value="prev_hidden=[self.agent(x)]&#10;prev_hidden.extend([torch.zeros_like(prev_hidden[0])for _ in range(self.num_layers-1)])&#10;prev_c=[torch.zeros_like(prev_hidden[0])for _ in range(self.num_layers)]&#10;input=torch.stack([self.sos_embedding]*x.size(0))&#10;sequence=[]&#10;logits=[]&#10;entropy=[]&#10;for step in range(self.max_len):&#10;  for i,layer in enumerate(self.cells):&#10;    if isinstance(layer,nn.LSTMCell):&#10;      h_t,c_t=layer(input,(prev_hidden[i],prev_c[i]))&#10;      prev_c[i]=c_t&#10;&#10;    else:&#10;      h_t=layer(input,prev_hidden[i])&#10;&#10;    prev_hidden[i]=h_t&#10;    input=h_t&#10;&#10;  step_logits=F.log_softmax(self.hidden_to_output(h_t),dim=1)&#10;  distr=Categorical(logits=step_logits)&#10;  entropy.append(distr.entropy())&#10;  if self.training:&#10;    x=distr.sample()&#10;&#10;  else:&#10;    x=step_logits.argmax(dim=1)&#10;&#10;  logits.append(distr.log_prob(x))&#10;  input=self.embedding(x)&#10;  sequence.append(x)&#10;&#10;sequence=torch.stack(sequence).permute(1,0)&#10;logits=torch.stack(logits).permute(1,0)&#10;entropy=torch.stack(entropy).permute(1,0)&#10;if self.force_eos:&#10;  zeros=torch.zeros((sequence.size(0),1)).to(sequence.device)&#10;  sequence=torch.cat([sequence,zeros.long()],dim=1)&#10;  logits=torch.cat([logits,zeros],dim=1)&#10;  entropy=torch.cat([entropy,zeros],dim=1)&#10;&#10;return sequence,logits,entropy&#10;"/>
    <sourcecode id="uk1DhOXeGzNV1" value="super(RnnReceiverReinforce,self).__init__()&#10;self.agent=agent&#10;self.encoder=RnnEncoder(vocab_size,embed_dim,hidden_size,cell,num_layers)&#10;"/>
    <sourcecode id="ucQ6b1QYiT6EW" value="encoded=self.encoder(message)&#10;sample,logits,entropy=self.agent(encoded,input)&#10;return sample,logits,entropy&#10;"/>
    <sourcecode id="ujRTo7NEJ5jGx" value="super(RnnEncoder,self).__init__()&#10;cell=cell.lower()&#10;cell_types=:&#10;  'rnn':nn.RNN,'gru':nn.GRU,'lstm':nn.LSTM&#10;&#10;if cell not in cell_types:&#10;  raise ValueError(f&quot;Unknown RNN Cell: {cell}&quot;)&#10;&#10;self.cell=cell_types[cell](input_size=embed_dim,batch_first=True,&#10;hidden_size=n_hidden,num_layers=num_layers)self.embedding=nn.Embedding(vocab_size,embed_dim)&#10;"/>
    <sourcecode id="u7XSup9UYWwOm" value="emb=self.embedding(message)&#10;if lengths is None:&#10;  lengths=find_lengths(message)&#10;&#10;packed=nn.utils.rnn.pack_padded_sequence(&#10;emb,lengths,batch_first=True,enforce_sorted=False)_,rnn_hidden=self.cell(packed)&#10;if isinstance(self.cell,nn.LSTM):&#10;  rnn_hidden,_=rnn_hidden&#10;&#10;return rnn_hidden[-1]&#10;"/>
    <sourcecode id="uQZwLPFXq0OVt" value="super(RnnReceiverCompositionality,self).__init__()&#10;self.agent=agent&#10;self.n_attributes=n_attributes&#10;self.n_values=n_values&#10;self.encoder=RnnEncoder(vocab_size,embed_dim,hidden_size,cell,num_layers)&#10;self.hidden_to_output=nn.Linear(hidden_size,n_attributes*n_values)&#10;"/>
    <sourcecode id="uq5eJ7RHx0tjZ" value="encoded=self.encoder(message)&#10;logits=F.log_softmax(self.hidden_to_output(encoded).reshape(encoded.size(0),self.n_attributes,self.n_values),dim=2)&#10;entropy=[]&#10;slogits=[]&#10;for i in range(logits.size(1)):&#10;  distr=Categorical(logits=logits[:,i,:])&#10;  entropy.append(distr.entropy())&#10;  x=distr.sample()&#10;  slogits.append(distr.log_prob(x))&#10;&#10;entropy=torch.stack(entropy).permute(1,0)&#10;slogits=torch.stack(slogits).permute(1,0)&#10;return logits,slogits,entropy&#10;"/>
    <sourcecode id="u86PitKDIgk0j" value="super(RnnReceiverDeterministic,self).__init__()&#10;self.agent=agent&#10;self.encoder=RnnEncoder(vocab_size,embed_dim,hidden_size,cell,num_layers)&#10;"/>
    <sourcecode id="uktbhV0onRhy0" value="encoded=self.encoder(message)&#10;agent_output=self.agent(encoded,input)&#10;logits=torch.zeros(agent_output.size(0)).to(agent_output.device)&#10;entropy=logits&#10;return agent_output,logits,entropy&#10;"/>
    <sourcecode id="uyw22tiH9iV38" value="super(RnnReceiverImpatient,self).__init__()&#10;self.max_len=max_len&#10;self.hidden_to_output=nn.Linear(hidden_size,n_features)&#10;self.encoder=RnnEncoderImpatient(vocab_size,embed_dim,hidden_size,cell,num_layers)&#10;"/>
    <sourcecode id="u6GikOriDlwYR" value="encoded=self.encoder(message)&#10;sequence=[]&#10;logits=[]&#10;entropy=[]&#10;for step in range(encoded.size(0)):&#10;  h_t=encoded[step,:,:]&#10;  step_logits=F.log_softmax(self.hidden_to_output(h_t),dim=1)&#10;  distr=Categorical(logits=step_logits)&#10;  entropy.append(distr.entropy())&#10;  if self.training:&#10;    x=distr.sample()&#10;&#10;  else:&#10;    x=step_logits.argmax(dim=1)&#10;&#10;  logits.append(distr.log_prob(x))&#10;  sequence.append(step_logits)&#10;&#10;sequence=torch.stack(sequence).permute(1,0,2)&#10;logits=torch.stack(logits).permute(1,0)&#10;entropy=torch.stack(entropy).permute(1,0)&#10;return sequence,logits,entropy&#10;"/>
    <sourcecode id="uyyl4Mq8SFadV" value="super(RnnEncoderImpatient,self).__init__()&#10;cell=cell.lower()&#10;cell_types=:&#10;  'rnn':nn.RNN,'gru':nn.GRU,'lstm':nn.LSTM&#10;&#10;if cell not in cell_types:&#10;  raise ValueError(f&quot;Unknown RNN Cell: {cell}&quot;)&#10;&#10;self.cell=cell_types[cell](input_size=embed_dim,batch_first=True,&#10;hidden_size=n_hidden,num_layers=num_layers)self.embedding=nn.Embedding(vocab_size,embed_dim)&#10;"/>
    <sourcecode id="uRctgwpofpAXg" value="emb=self.embedding(message)&#10;if lengths is None:&#10;  lengths=find_lengths(message)&#10;&#10;packed=nn.utils.rnn.pack_padded_sequence(&#10;emb,lengths,batch_first=True,enforce_sorted=False)packed_seq_hidden,rnn_hidden=self.cell(packed)&#10;seq_hidden=nn.utils.rnn.pad_packed_sequence(packed_seq_hidden)&#10;if isinstance(self.cell,nn.LSTM):&#10;  rnn_hidden,_=rnn_hidden&#10;  seq_hidden,_=seq_hidden&#10;&#10;return seq_hidden"/>
    <sourcecode id="uoCLIy5drMOFM" value="super(RnnReceiverImpatientCompositionality,self).__init__()&#10;self.max_len=max_len&#10;self.n_attributes=n_attributes&#10;self.n_values=n_values&#10;self.hidden_to_output=nn.Linear(hidden_size,n_attributes*n_values)&#10;self.encoder=RnnEncoderImpatient(vocab_size,embed_dim,hidden_size,cell,num_layers)&#10;"/>
    <sourcecode id="ui8RoPxU6ee4f" value="encoded=self.encoder(message)&#10;sequence=[]&#10;slogits=[]&#10;entropy=[]&#10;for step in range(encoded.size(0)):&#10;  h_t=encoded[step,:,:]&#10;  step_logits=F.log_softmax(self.hidden_to_output(h_t).reshape(h_t.size(0),self.n_attributes,self.n_values),dim=2)&#10;  distr=Categorical(logits=step_logits)&#10;  sequence.append(step_logits)&#10;  entropy_step=[]&#10;  slogits_step=[]&#10;  for i in range(step_logits.size(1)):&#10;    distr=Categorical(logits=step_logits[:,i,:])&#10;    entropy_step.append(distr.entropy())&#10;    x=distr.sample()&#10;    slogits_step.append(distr.log_prob(x))&#10;&#10;  entropy_step=torch.stack(entropy_step).permute(1,0)&#10;  slogits_step=torch.stack(slogits_step).permute(1,0)&#10;  entropy.append(entropy_step)&#10;  slogits.append(slogits_step)&#10;&#10;sequence=torch.stack(sequence).permute(1,0,2,3)&#10;entropy=torch.stack(entropy).permute(1,0,2)&#10;slogits=torch.stack(slogits).permute(1,0,2)&#10;return sequence,slogits,entropy&#10;"/>
    <sourcecode id="uPbJnYJDvXmMp" value="super(SenderReceiverRnnReinforce,self).__init__()&#10;self.sender=sender&#10;self.receiver=receiver&#10;self.sender_entropy_coeff=sender_entropy_coeff&#10;self.receiver_entropy_coeff=receiver_entropy_coeff&#10;self.loss=loss&#10;self.length_cost=length_cost&#10;self.unigram_penalty=unigram_penalty&#10;self.mean_baseline=defaultdict(float)&#10;self.n_points=defaultdict(float)&#10;self.reg=reg&#10;"/>
    <sourcecode id="ugWK3qUzCe9Wn" value="message,log_prob_s,entropy_s=self.sender(sender_input)&#10;message_lengths=find_lengths(message)&#10;receiver_output,log_prob_r,entropy_r=self.receiver(message,receiver_input,message_lengths)&#10;loss,rest=self.loss(sender_input,message,receiver_input,receiver_output,labels)&#10;effective_entropy_s=torch.zeros_like(entropy_r)&#10;effective_log_prob_s=torch.zeros_like(log_prob_r)&#10;for i in range(message.size(1)):&#10;  not_eosed=(i&lt;message_lengths).float()&#10;  effective_entropy_s+=entropy_s[:,i]*not_eosed&#10;  effective_log_prob_s+=log_prob_s[:,i]*not_eosed&#10;&#10;effective_entropy_s=effective_entropy_s/message_lengths.float()&#10;weighted_entropy=effective_entropy_s.mean()*self.sender_entropy_coeff+\&#10;entropy_r.mean()*self.receiver_entropy_coeff log_prob=effective_log_prob_s+log_prob_r&#10;if self.reg:&#10;  sc=rest[&quot;acc&quot;].sum()/rest[&quot;acc&quot;].size(0)&#10;  self.length_cost=sc**(45)/5&#10;&#10;length_loss=message_lengths.float()*self.length_cost&#10;policy_length_loss=((length_loss.float()-self.mean_baseline['length'])*effective_log_prob_s).mean()&#10;policy_loss=((loss.detach()-self.mean_baseline['loss'])*log_prob).mean()&#10;optimized_loss=policy_length_loss+policy_loss-weighted_entropy&#10;optimized_loss+=loss.mean()&#10;if self.training:&#10;  self.update_baseline('loss',loss)&#10;  self.update_baseline('length',length_loss)&#10;&#10;for k,v in rest.items():&#10;  rest[k]=v.mean().item()if hasattr(v,'mean')else v&#10;&#10;rest['loss']=optimized_loss.detach().item()&#10;rest['sender_entropy']=entropy_s.mean().item()&#10;rest['receiver_entropy']=entropy_r.mean().item()&#10;rest['original_loss']=loss.mean().item()&#10;rest['mean_length']=message_lengths.float().mean().item()&#10;return optimized_loss,rest&#10;"/>
    <sourcecode id="uiUDyHUHx2bdS" value="self.n_points[name]+=1&#10;self.mean_baseline[name]+=(value.detach().mean().item()-self.mean_baseline[name])/self.n_points[name]&#10;"/>
    <sourcecode id="ul0bAPao7OL6f" value="super(SenderImpatientReceiverRnnReinforce,self).__init__()&#10;self.sender=sender&#10;self.receiver=receiver&#10;self.sender_entropy_coeff=sender_entropy_coeff&#10;self.receiver_entropy_coeff=receiver_entropy_coeff&#10;self.loss=loss&#10;self.length_cost=length_cost&#10;self.unigram_penalty=unigram_penalty&#10;self.reg=reg&#10;self.mean_baseline=defaultdict(float)&#10;self.n_points=defaultdict(float)&#10;"/>
    <sourcecode id="ugrENKg3r09lb" value="message,log_prob_s,entropy_s=self.sender(sender_input)&#10;message_lengths=find_lengths(message)&#10;receiver_output,log_prob_r,entropy_r=self.receiver(message,receiver_input,message_lengths)&#10;loss,rest,crible_acc=self.loss(sender_input,message,message_lengths,receiver_input,receiver_output,labels)&#10;effective_entropy_s=torch.zeros_like(entropy_r.mean(1))&#10;effective_log_prob_s=torch.zeros_like(log_prob_r.mean(1))&#10;for i in range(message.size(1)):&#10;  not_eosed=(i&lt;message_lengths).float()&#10;  effective_entropy_s+=entropy_s[:,i]*not_eosed&#10;  effective_log_prob_s+=log_prob_s[:,i]*not_eosed&#10;&#10;effective_entropy_s=effective_entropy_s/message_lengths.float()&#10;weighted_entropy=effective_entropy_s.mean()*self.sender_entropy_coeff+\&#10;entropy_r.mean()*self.receiver_entropy_coeff log_prob=effective_log_prob_s+log_prob_r.mean(1)&#10;if self.reg:&#10;  sc=0.&#10;  for i in range(message_lengths.size(0)):&#10;    sc+=crible_acc[i,message_lengths[i]-1]&#10;&#10;  sc/=message_lengths.size(0)&#10;  self.length_cost=sc**(45)/5&#10;&#10;length_loss=message_lengths.float()*self.length_cost&#10;policy_length_loss=((length_loss.float()-self.mean_baseline['length'])*effective_log_prob_s).mean()&#10;policy_loss=((loss.detach()-self.mean_baseline['loss'])*log_prob).mean()&#10;optimized_loss=policy_length_loss+policy_loss-weighted_entropy&#10;optimized_loss+=loss.mean()&#10;if self.training:&#10;  self.update_baseline('loss',loss)&#10;  self.update_baseline('length',length_loss)&#10;&#10;for k,v in rest.items():&#10;  rest[k]=v.mean().item()if hasattr(v,'mean')else v&#10;&#10;rest['loss']=optimized_loss.detach().item()&#10;rest['sender_entropy']=entropy_s.mean().item()&#10;rest['receiver_entropy']=entropy_r.mean().item()&#10;rest['original_loss']=loss.mean().item()&#10;rest['mean_length']=message_lengths.float().mean().item()&#10;return optimized_loss,rest&#10;"/>
    <sourcecode id="uJ8ZzVbJGFhvm" value="self.n_points[name]+=1&#10;self.mean_baseline[name]+=(value.detach().mean().item()-self.mean_baseline[name])/self.n_points[name]&#10;"/>
    <sourcecode id="umffYpAas1z1k" value="super(CompositionalitySenderReceiverRnnReinforce,self).__init__()&#10;self.sender=sender&#10;self.receiver=receiver&#10;self.sender_entropy_coeff=sender_entropy_coeff&#10;self.receiver_entropy_coeff=receiver_entropy_coeff&#10;self.loss=loss&#10;self.length_cost=length_cost&#10;self.unigram_penalty=unigram_penalty&#10;self.reg=reg&#10;self.n_attributes=n_attributes&#10;self.n_values=n_values&#10;self.mean_baseline=defaultdict(float)&#10;self.n_points=defaultdict(float)&#10;"/>
    <sourcecode id="uvCWBkki1Wygw" value="message,log_prob_s,entropy_s=self.sender(sender_input)&#10;message_lengths=find_lengths(message)&#10;noise_level=0.&#10;noise_map=torch.from_numpy(1*(np.random.rand(message.size(0),message.size(1))&lt;noise_level)).to(&quot;cuda&quot;)&#10;noise=torch.from_numpy(np.random.randint(1,self.sender.vocab_size,size=(message.size(0),message.size(1)))).to(&quot;cuda&quot;)&#10;message_noise=message*(1-noise_map)+noise_map*noise&#10;receiver_output_all_att,log_prob_r_all_att,entropy_r_all_att=self.receiver(message_noise,receiver_input,message_lengths)&#10;sc=0.&#10;loss,rest,crible_acc=self.loss(sender_input,message,message_lengths,receiver_input,receiver_output_all_att,labels,self.n_attributes,self.n_values)&#10;log_prob_r=log_prob_r_all_att.mean(1)&#10;entropy_r=entropy_r_all_att.mean(1)&#10;effective_entropy_s=torch.zeros_like(entropy_r)&#10;effective_log_prob_s=torch.zeros_like(log_prob_r)&#10;for i in range(message.size(1)):&#10;  not_eosed=(i&lt;message_lengths).float()&#10;  effective_entropy_s+=entropy_s[:,i]*not_eosed&#10;  effective_log_prob_s+=log_prob_s[:,i]*not_eosed&#10;&#10;effective_entropy_s=effective_entropy_s/message_lengths.float()&#10;weighted_entropy=effective_entropy_s.mean()*self.sender_entropy_coeff+\&#10;entropy_r.mean()*self.receiver_entropy_coeff log_prob=effective_log_prob_s+log_prob_r&#10;length_loss=message_lengths.float()*self.length_cost&#10;policy_length_loss=((length_loss.float()-self.mean_baseline['length'])*effective_log_prob_s).mean()&#10;policy_loss=((loss.detach()-self.mean_baseline['loss'])*log_prob).mean()&#10;optimized_loss=policy_length_loss+policy_loss-weighted_entropy&#10;optimized_loss+=loss.mean()&#10;if self.training:&#10;  self.update_baseline('loss',loss)&#10;  self.update_baseline('length',length_loss)&#10;&#10;for k,v in rest.items():&#10;  rest[k]=v.mean().item()if hasattr(v,'mean')else v&#10;&#10;rest['loss']=optimized_loss.detach().item()&#10;rest['sender_entropy']=entropy_s.mean().item()&#10;rest['receiver_entropy']=entropy_r.mean().item()&#10;rest['original_loss']=loss.mean().item()&#10;rest['mean_length']=message_lengths.float().mean().item()&#10;return optimized_loss,rest&#10;"/>
    <sourcecode id="uetGRvgOE3zke" value="self.n_points[name]+=1&#10;self.mean_baseline[name]+=(value.detach().mean().item()-self.mean_baseline[name])/self.n_points[name]&#10;"/>
    <sourcecode id="ufOHVmy0lzRtn" value="super(CompositionalitySenderImpatientReceiverRnnReinforce,self).__init__()&#10;self.sender=sender&#10;self.receiver=receiver&#10;self.sender_entropy_coeff=sender_entropy_coeff&#10;self.receiver_entropy_coeff=receiver_entropy_coeff&#10;self.loss=loss&#10;self.length_cost=length_cost&#10;self.unigram_penalty=unigram_penalty&#10;self.reg=reg&#10;self.n_attributes=n_attributes&#10;self.n_values=n_values&#10;self.att_weights=att_weights&#10;self.mean_baseline=defaultdict(float)&#10;self.n_points=defaultdict(float)&#10;"/>
    <sourcecode id="uGm5iWBPhsmvE" value="message,log_prob_s,entropy_s=self.sender(torch.floor(sender_input))&#10;message_lengths=find_lengths(message)&#10;receiver_output_all_att,log_prob_r_all_att,entropy_r_all_att=self.receiver(message,receiver_input,message_lengths)&#10;sc=0.&#10;loss,rest,crible_acc=self.loss(sender_input,message,message_lengths,receiver_input,receiver_output_all_att,labels,self.n_attributes,self.n_values,self.att_weights)&#10;if self.reg:&#10;  for i in range(message_lengths.size(0)):&#10;    sc+=crible_acc[i,message_lengths[i]-1]&#10;&#10;&#10;log_prob_r=log_prob_r_all_att.mean(1).mean(1)&#10;entropy_r=entropy_r_all_att.mean(1).mean(1)&#10;effective_entropy_s=torch.zeros_like(entropy_r)&#10;effective_log_prob_s=torch.zeros_like(log_prob_r)&#10;for i in range(message.size(1)):&#10;  not_eosed=(i&lt;message_lengths).float()&#10;  effective_entropy_s+=entropy_s[:,i]*not_eosed&#10;  effective_log_prob_s+=log_prob_s[:,i]*not_eosed&#10;&#10;effective_entropy_s=effective_entropy_s/message_lengths.float()&#10;weighted_entropy=effective_entropy_s.mean()*self.sender_entropy_coeff+\&#10;entropy_r.mean()*self.receiver_entropy_coeff log_prob=effective_log_prob_s+log_prob_r&#10;if self.reg:&#10;  sc/=message_lengths.size(0)&#10;  if sc&gt;0.9 and sc&lt;0.99:&#10;    self.length_cost=0.&#10;&#10;  if sc&gt;0.99:&#10;    self.length_cost+=0.01&#10;&#10;&#10;length_loss=message_lengths.float()*self.length_cost&#10;policy_length_loss=((length_loss.float()-self.mean_baseline['length'])*effective_log_prob_s).mean()&#10;policy_loss=((loss.detach()-self.mean_baseline['loss'])*log_prob).mean()&#10;optimized_loss=policy_length_loss+policy_loss-weighted_entropy&#10;optimized_loss+=loss.mean()&#10;if self.training:&#10;  self.update_baseline('loss',loss)&#10;  self.update_baseline('length',length_loss)&#10;&#10;for k,v in rest.items():&#10;  rest[k]=v.mean().item()if hasattr(v,'mean')else v&#10;&#10;rest['loss']=optimized_loss.detach().item()&#10;rest['sender_entropy']=entropy_s.mean().item()&#10;rest['receiver_entropy']=entropy_r.mean().item()&#10;rest['original_loss']=loss.mean().item()&#10;rest['mean_length']=message_lengths.float().mean().item()&#10;return optimized_loss,rest&#10;"/>
    <sourcecode id="uMMmABB7JX7Eb" value="self.n_points[name]+=1&#10;self.mean_baseline[name]+=(value.detach().mean().item()-self.mean_baseline[name])/self.n_points[name]&#10;"/>
    <sourcecode id="uS3Wa0dXGLXTo" value="super(TransformerReceiverDeterministic,self).__init__()&#10;self.agent=agent&#10;self.encoder=TransformerEncoder(vocab_size=vocab_size,&#10;max_len=max_len,embed_dim=embed_dim,num_heads=num_heads,num_layers=num_layers,hidden_size=hidden_size,positional_embedding=positional_emb,causal=causal)"/>
    <sourcecode id="ujjVlZMJFSbgR" value="if lengths is None:&#10;  lengths=find_lengths(message)&#10;&#10;transformed=self.encoder(message,lengths)&#10;agent_output=self.agent(transformed,input)&#10;logits=torch.zeros(agent_output.size(0)).to(agent_output.device)&#10;entropy=logits&#10;return agent_output,logits,entropy&#10;"/>
    <sourcecode id="uFRfF80RbZ4xC" value="super().__init__()&#10;if not causal:&#10;  max_len+=1&#10;  vocab_size+=1&#10;&#10;self.base_encoder=TransformerBaseEncoder(vocab_size=vocab_size,&#10;max_len=max_len,embed_dim=embed_dim,num_heads=num_heads,num_layers=num_layers,hidden_size=hidden_size,positional_embedding=positional_embedding)self.max_len=max_len&#10;self.sos_id=torch.tensor([vocab_size-1]).long()&#10;self.causal=causal&#10;"/>
    <sourcecode id="u0vWkPwNUPTuk" value="if lengths is None:&#10;  lengths=find_lengths(message)&#10;&#10;batch_size=message.size(0)&#10;if not self.causal:&#10;  prefix=self.sos_id.to(message.device).unsqueeze(&#10;  0).expand((batch_size,1))message=torch.cat([prefix,message],dim=1)&#10;  lengths=lengths+1&#10;  max_len=message.size(1)&#10;  len_indicators=torch.arange(max_len).expand(&#10;  (batch_size,max_len)).to(lengths.device)lengths_expanded=lengths.unsqueeze(1)&#10;  padding_mask=len_indicators&gt;=lengths_expanded&#10;  transformed=self.base_encoder(message,padding_mask)&#10;  transformed=transformed[:,0,:]&#10;&#10;else:&#10;  max_len=message.size(1)&#10;  len_indicators=torch.arange(max_len).expand(&#10;  (batch_size,max_len)).to(lengths.device)lengths_expanded=lengths.unsqueeze(1)&#10;  padding_mask=len_indicators&gt;=lengths_expanded&#10;  attn_mask=torch.triu(torch.ones(&#10;  max_len,max_len).byte(),diagonal=1).to(lengths.device)attn_mask=attn_mask.float().masked_fill(attn_mask==1,float('-inf'))&#10;  transformed=self.base_encoder(&#10;  message,key_padding_mask=padding_mask,attn_mask=attn_mask)last_embeddings=[]&#10;  for i,l in enumerate(lengths.clamp(max=self.max_len-1).cpu()):&#10;    last_embeddings.append(transformed[i,l,:])&#10;&#10;  transformed=torch.stack(last_embeddings)&#10;&#10;return transformed&#10;"/>
    <sourcecode id="uHDkvvZzJd14t" value="super(TransformerSenderReinforce,self).__init__()&#10;self.agent=agent&#10;self.force_eos=force_eos&#10;assert generate_style in['standard','in-place']&#10;self.generate_style=generate_style&#10;self.causal=causal&#10;self.max_len=max_len&#10;if force_eos:&#10;  self.max_len-=1&#10;&#10;self.transformer=TransformerDecoder(embed_dim=embed_dim,&#10;max_len=max_len,num_layers=num_layers,num_heads=num_heads,hidden_size=hidden_size)self.embedding_to_vocab=nn.Linear(embed_dim,vocab_size)&#10;self.special_symbol_embedding=nn.Parameter(torch.zeros(embed_dim))&#10;self.embed_dim=embed_dim&#10;self.vocab_size=vocab_size&#10;self.embed_tokens=torch.nn.Embedding(vocab_size,embed_dim)&#10;nn.init.normal_(self.embed_tokens.weight,mean=0,std=self.embed_dim**-0.5)&#10;self.embed_scale=math.sqrt(embed_dim)&#10;"/>
    <sourcecode id="uUCft2QTacg07" value="batch_size=encoder_state.size(0)&#10;device=encoder_state.device&#10;sequence=[]&#10;logits=[]&#10;entropy=[]&#10;special_symbol=self.special_symbol_embedding.expand(batch_size,-1).unsqueeze(1).to(device)&#10;input=special_symbol&#10;for step in range(self.max_len):&#10;  if self.causal:&#10;    attn_mask=torch.triu(torch.ones(step+1,step+1).byte(),diagonal=1).to(device)&#10;    attn_mask=attn_mask.float().masked_fill(attn_mask==1,float('-inf'))&#10;&#10;  else:&#10;    attn_mask=None&#10;&#10;  output=self.transformer(embedded_input=input,encoder_out=encoder_state,attn_mask=attn_mask)&#10;  step_logits=F.log_softmax(self.embedding_to_vocab(output[:,-1,:]),dim=1)&#10;  distr=Categorical(logits=step_logits)&#10;  entropy.append(distr.entropy())&#10;  if self.training:&#10;    symbols=distr.sample()&#10;&#10;  else:&#10;    symbols=step_logits.argmax(dim=1)&#10;&#10;  logits.append(distr.log_prob(symbols))&#10;  sequence.append(symbols)&#10;  new_embedding=self.embed_tokens(symbols)*self.embed_scale&#10;  input=torch.cat([input,new_embedding.unsqueeze(dim=1)],dim=1)&#10;&#10;return sequence,logits,entropy&#10;"/>
    <sourcecode id="uQ9Ucb5Pik3r0" value="batch_size=encoder_state.size(0)&#10;device=encoder_state.device&#10;sequence=[]&#10;logits=[]&#10;entropy=[]&#10;special_symbol=self.special_symbol_embedding.expand(batch_size,-1).unsqueeze(1).to(encoder_state.device)&#10;output=[]&#10;for step in range(self.max_len):&#10;  input=torch.cat(output+[special_symbol],dim=1)&#10;  if self.causal:&#10;    attn_mask=torch.triu(torch.ones(step+1,step+1).byte(),diagonal=1).to(device)&#10;    attn_mask=attn_mask.float().masked_fill(attn_mask==1,float('-inf'))&#10;&#10;  else:&#10;    attn_mask=None&#10;&#10;  embedded=self.transformer(embedded_input=input,encoder_out=encoder_state,attn_mask=attn_mask)&#10;  step_logits=F.log_softmax(self.embedding_to_vocab(embedded[:,-1,:]),dim=1)&#10;  distr=Categorical(logits=step_logits)&#10;  entropy.append(distr.entropy())&#10;  if self.training:&#10;    symbols=distr.sample()&#10;&#10;  else:&#10;    symbols=step_logits.argmax(dim=1)&#10;&#10;  logits.append(distr.log_prob(symbols))&#10;  sequence.append(symbols)&#10;  new_embedding=self.embed_tokens(symbols)*self.embed_scale&#10;  output.append(new_embedding.unsqueeze(dim=1))&#10;&#10;return sequence,logits,entropy&#10;"/>
    <sourcecode id="uYDelGiCS5AUf" value="encoder_state=self.agent(x)&#10;if self.generate_style=='standard':&#10;  sequence,logits,entropy=self.generate_standard(encoder_state)&#10;&#10;elif self.generate_style=='in-place':&#10;  sequence,logits,entropy=self.generate_inplace(encoder_state)&#10;&#10;else:&#10;  assert False,'Unknown generate style'&#10;&#10;sequence=torch.stack(sequence).permute(1,0)&#10;logits=torch.stack(logits).permute(1,0)&#10;entropy=torch.stack(entropy).permute(1,0)&#10;if self.force_eos:&#10;  zeros=torch.zeros((sequence.size(0),1)).to(sequence.device)&#10;  sequence=torch.cat([sequence,zeros.long()],dim=1)&#10;  logits=torch.cat([logits,zeros],dim=1)&#10;  entropy=torch.cat([entropy,zeros],dim=1)&#10;&#10;return sequence,logits,entropy"/>
    <sourcecode id="uk99kgKFK4GZ7" value="self.game=game&#10;self.optimizer=optimizer&#10;self.train_data=train_data&#10;self.validation_data=validation_data&#10;common_opts=get_opts()&#10;self.validation_freq=common_opts.validation_freq&#10;self.device=common_opts.device if device is None else device&#10;self.game.to(self.device)&#10;self.optimizer.state=move_to(self.optimizer.state,self.device)&#10;self.should_stop=False&#10;self.start_epoch=0&#10;self.callbacks=callbacks&#10;if common_opts.load_from_checkpoint is not None:&#10;  print(f&quot;;self.load_from_checkpoint(common_opts.load_from_checkpoint)&#10;&#10;if common_opts.preemptable:&#10;  assert common_opts.checkpoint_dir,'checkpointing directory has to be specified'&#10;  d=self._get_preemptive_checkpoint_dir(common_opts.checkpoint_dir)&#10;  self.checkpoint_path=d&#10;  self.load_from_latest(d)&#10;  checkpointer=CheckpointSaver(self.checkpoint_path)&#10;  self.callbacks.append(checkpointer)&#10;&#10;else:&#10;  self.checkpoint_path=None if common_opts.checkpoint_dir is None\&#10;  else pathlib.Path(common_opts.checkpoint_dir)&#10;if self.callbacks is None:&#10;  self.callbacks=[&#10;  ConsoleLogger(print_train_loss=False,as_json=False),]&#10;&#10;"/>
    <sourcecode id="uLsigaAswLLq3" value="if'SLURM_JOB_ID'not in os.environ:&#10;  print('Preemption flag set, but I am not running under SLURM?')&#10;&#10;job_id=os.environ.get('SLURM_JOB_ID',uuid.uuid4())&#10;task_id=os.environ.get('SLURM_PROCID',0)&#10;d=pathlib.Path(checkpoint_root)/f'{job_id}_{task_id}'&#10;d.mkdir(exist_ok=True)&#10;return d&#10;"/>
    <sourcecode id="uHGsluzRpqC1i" value="mean_loss=0.0&#10;mean_rest=:&#10;&#10;&#10;n_batches=0&#10;self.game.eval()&#10;with torch.no_grad():&#10;  for batch in self.validation_data:&#10;    batch=move_to(batch,self.device)&#10;    optimized_loss,rest=self.game(*batch)&#10;    mean_loss+=optimized_loss&#10;    mean_rest=_add_dicts(mean_rest,rest)&#10;    n_batches+=1&#10;&#10;&#10;mean_loss/=n_batches&#10;mean_rest=_div_dict(mean_rest,n_batches)&#10;return mean_loss.item(),mean_rest&#10;"/>
    <sourcecode id="uLLJBTCwt5Zwl" value="mean_loss=0&#10;mean_rest=:&#10;&#10;&#10;n_batches=0&#10;self.game.train()&#10;for batch in self.train_data:&#10;  self.optimizer.zero_grad()&#10;  batch=move_to(batch,self.device)&#10;  optimized_loss,rest=self.game(*batch)&#10;  mean_rest=_add_dicts(mean_rest,rest)&#10;  optimized_loss.backward()&#10;  self.optimizer.step()&#10;  n_batches+=1&#10;  mean_loss+=optimized_loss&#10;&#10;mean_loss/=n_batches&#10;mean_rest=_div_dict(mean_rest,n_batches)&#10;return mean_loss.item(),mean_rest&#10;"/>
    <sourcecode id="uSPMHFrv0LQCZ" value="for callback in self.callbacks:&#10;  callback.on_train_begin(self)&#10;&#10;for epoch in range(self.start_epoch,n_epochs):&#10;  for callback in self.callbacks:&#10;    callback.on_epoch_begin()&#10;&#10;  train_loss,train_rest=self.train_epoch()&#10;  for callback in self.callbacks:&#10;    callback.on_epoch_end(train_loss,train_rest)&#10;&#10;  if self.validation_data is not None and self.validation_freq&gt;0 and epoch%self.validation_freq==0:&#10;    for callback in self.callbacks:&#10;      callback.on_test_begin()&#10;&#10;    validation_loss,rest=self.eval()&#10;    for callback in self.callbacks:&#10;      callback.on_test_end(validation_loss,rest)&#10;&#10;&#10;  if self.should_stop:&#10;    break&#10;&#10;&#10;for callback in self.callbacks:&#10;  callback.on_train_end()&#10;&#10;"/>
    <sourcecode id="uKIJsgDn7vB9M" value="self.game.load_state_dict(checkpoint.model_state_dict)&#10;self.optimizer.load_state_dict(checkpoint.optimizer_state_dict)&#10;self.starting_epoch=checkpoint.epoch&#10;"/>
    <sourcecode id="uxkzYIcJMAl8T" value="print(f';checkpoint=torch.load(path)&#10;self.load(checkpoint)&#10;"/>
    <sourcecode id="ux9yg7V72AKb3" value="latest_file,latest_time=None,None&#10;for file in path.glob('*.tar'):&#10;  creation_time=os.stat(file).st_ctime&#10;  if latest_time is None or creation_time&gt;latest_time:&#10;    latest_file,latest_time=file,creation_time&#10;&#10;&#10;if latest_file is not None:&#10;  self.load_from_checkpoint(latest_file)&#10;&#10;"/>
    <sourcecode id="uusgMv44KZuVE" value="self.game=game&#10;self.optimizer=optimizer&#10;self.train_data=train_data&#10;self.validation_data=validation_data&#10;common_opts=get_opts()&#10;self.validation_freq=common_opts.validation_freq&#10;self.device=common_opts.device if device is None else device&#10;self.game.to(self.device)&#10;self.optimizer.state=move_to(self.optimizer.state,self.device)&#10;self.should_stop=False&#10;self.start_epoch=0&#10;self.callbacks=callbacks&#10;self.n_attributes=n_attributes&#10;self.n_values=n_values&#10;if common_opts.load_from_checkpoint is not None:&#10;  print(f&quot;;self.load_from_checkpoint(common_opts.load_from_checkpoint)&#10;&#10;if common_opts.preemptable:&#10;  assert common_opts.checkpoint_dir,'checkpointing directory has to be specified'&#10;  d=self._get_preemptive_checkpoint_dir(common_opts.checkpoint_dir)&#10;  self.checkpoint_path=d&#10;  self.load_from_latest(d)&#10;  checkpointer=CheckpointSaver(self.checkpoint_path)&#10;  self.callbacks.append(checkpointer)&#10;&#10;else:&#10;  self.checkpoint_path=None if common_opts.checkpoint_dir is None\&#10;  else pathlib.Path(common_opts.checkpoint_dir)&#10;if self.callbacks is None:&#10;  self.callbacks=[&#10;  ConsoleLogger(print_train_loss=False,as_json=False),]&#10;&#10;"/>
    <sourcecode id="uoBIfROj6Dby1" value="if'SLURM_JOB_ID'not in os.environ:&#10;  print('Preemption flag set, but I am not running under SLURM?')&#10;&#10;job_id=os.environ.get('SLURM_JOB_ID',uuid.uuid4())&#10;task_id=os.environ.get('SLURM_PROCID',0)&#10;d=pathlib.Path(checkpoint_root)/f'{job_id}_{task_id}'&#10;d.mkdir(exist_ok=True)&#10;return d&#10;"/>
    <sourcecode id="uS92hutAlw7dE" value="mean_loss=0.0&#10;mean_rest=:&#10;&#10;&#10;n_batches=0&#10;self.game.eval()&#10;with torch.no_grad():&#10;  for batch in self.validation_data:&#10;    batch=move_to(batch,self.device)&#10;    optimized_loss,rest=self.game(*batch)&#10;    mean_loss+=optimized_loss&#10;    mean_rest=_add_dicts(mean_rest,rest)&#10;    n_batches+=1&#10;&#10;&#10;mean_loss/=n_batches&#10;mean_rest=_div_dict(mean_rest,n_batches)&#10;return mean_loss.item(),mean_rest&#10;"/>
    <sourcecode id="udIfg8RRquJIJ" value="mean_loss=0&#10;mean_rest=:&#10;&#10;&#10;n_batches=0&#10;self.game.train()&#10;for batch in self.train_data:&#10;  self.optimizer.zero_grad()&#10;  batch=move_to(batch,self.device)&#10;  optimized_loss,rest=self.game(*batch)&#10;  mean_rest=_add_dicts(mean_rest,rest)&#10;  optimized_loss.backward()&#10;  self.optimizer.step()&#10;  n_batches+=1&#10;  mean_loss+=optimized_loss&#10;&#10;mean_loss/=n_batches&#10;mean_rest=_div_dict(mean_rest,n_batches)&#10;return mean_loss.item(),mean_rest&#10;"/>
    <sourcecode id="uK34Iw6RCtxON" value="scheduler=StepLR(self.optimizer,step_size=25,gamma=0.1)&#10;for callback in self.callbacks:&#10;  callback.on_train_begin(self)&#10;&#10;for epoch in range(self.start_epoch,n_epochs):&#10;  print(epoch,flush=True)&#10;  for callback in self.callbacks:&#10;    callback.on_epoch_begin()&#10;&#10;  train_loss,train_rest=self.train_epoch()&#10;  scheduler.step()&#10;  print(&quot;Train loss: &quot;+str(train_loss),flush=True)&#10;  for callback in self.callbacks:&#10;    callback.on_epoch_end(train_loss,train_rest)&#10;&#10;  if self.validation_data is not None and self.validation_freq&gt;0 and epoch%self.validation_freq==0:&#10;    for callback in self.callbacks:&#10;      callback.on_test_begin()&#10;&#10;    validation_loss,rest=self.eval()&#10;    print(&quot;Eval loss: &quot;+str(validation_loss),flush=True)&#10;    print(rest,flush=True)&#10;    for callback in self.callbacks:&#10;      callback.on_test_end(validation_loss,rest)&#10;&#10;&#10;  if self.should_stop:&#10;    break&#10;&#10;&#10;for callback in self.callbacks:&#10;  callback.on_train_end()&#10;&#10;"/>
    <sourcecode id="uObiVqnT70K6x" value="self.game.load_state_dict(checkpoint.model_state_dict)&#10;self.optimizer.load_state_dict(checkpoint.optimizer_state_dict)&#10;self.starting_epoch=checkpoint.epoch&#10;"/>
    <sourcecode id="u8keLUDkSIFhx" value="print(f';checkpoint=torch.load(path)&#10;self.load(checkpoint)&#10;"/>
    <sourcecode id="u1jD1OkDnc6cH" value="latest_file,latest_time=None,None&#10;for file in path.glob('*.tar'):&#10;  creation_time=os.stat(file).st_ctime&#10;  if latest_time is None or creation_time&gt;latest_time:&#10;    latest_file,latest_time=file,creation_time&#10;&#10;&#10;if latest_file is not None:&#10;  self.load_from_checkpoint(latest_file)"/>
    <sourcecode id="uImbAmjwK9cK0" value="super(SinusoidalPositionEmbedding,self).__init__()&#10;pos=torch.arange(0.,max_len).unsqueeze(1).repeat(1,model_dim)&#10;dim=torch.arange(0.,model_dim).unsqueeze(0).repeat(max_len,1)&#10;div=torch.exp(-math.log(10000)*(2*(dim//2)/model_dim))&#10;pos*=div&#10;pos[:,0::2]=torch.sin(pos[:,0::2])&#10;pos[:,1::2]=torch.cos(pos[:,1::2])&#10;self.register_buffer('pe',pos.unsqueeze(0))&#10;"/>
    <sourcecode id="u5zz3DJx4AWH6" value="t=self.pe[:,:x.size(1),:]&#10;return x+t&#10;"/>
    <sourcecode id="uwCZsk4IX0MuS" value="super().__init__()&#10;self.embedding=nn.Embedding(vocab_size,embed_dim)&#10;self.embed_dim=embed_dim&#10;self.max_source_positions=max_len&#10;self.embed_scale=math.sqrt(embed_dim)&#10;self.embed_positions=SinusoidalPositionEmbedding(&#10;max_len,embed_dim)if positional_embedding else None self.layers=nn.ModuleList([])&#10;self.layers.extend([&#10;TransformerEncoderLayer(embed_dim=embed_dim,num_heads=num_heads,hidden_size=hidden_size)for _ in range(num_layers)])&#10;self.dropout=p_dropout&#10;self.layer_norm=torch.nn.LayerNorm(embed_dim)&#10;self.init_parameters()&#10;"/>
    <sourcecode id="uIzWx7KRh9AKh" value="nn.init.normal_(self.embedding.weight,mean=0,&#10;std=self.embed_dim**-0.5)"/>
    <sourcecode id="u26NLWbXDGhaE" value="x=self.embed_scale*self.embedding(src_tokens)&#10;if self.embed_positions is not None:&#10;  x=self.embed_positions(x)&#10;&#10;x=F.dropout(x,p=self.dropout,training=self.training)&#10;x=x.transpose(0,1)&#10;for layer in self.layers:&#10;  x=layer(x,key_padding_mask,attn_mask)&#10;&#10;x=self.layer_norm(x)&#10;x=x.transpose(0,1)&#10;return x&#10;"/>
    <sourcecode id="uPSQr4q3LlF76" value="super().__init__()&#10;self.embed_dim=embed_dim&#10;self.self_attn=torch.nn.MultiheadAttention(embed_dim=self.embed_dim,num_heads=num_heads,&#10;dropout=attention_dropout)self.self_attn_layer_norm=torch.nn.LayerNorm(self.embed_dim)&#10;self.dropout=dropout&#10;self.activation_dropout=activation_dropout&#10;self.normalize_before=True&#10;self.fc1=torch.nn.Linear(self.embed_dim,hidden_size)&#10;self.fc2=torch.nn.Linear(hidden_size,self.embed_dim)&#10;self.layer_norm=torch.nn.LayerNorm(self.embed_dim)&#10;self.init_parameters()&#10;"/>
    <sourcecode id="uHgbGWhGGG7OF" value="residual=x&#10;x=self.self_attn_layer_norm(x)&#10;x,_att=self.self_attn(&#10;query=x,key=x,value=x,key_padding_mask=key_padding_mask,attn_mask=attn_mask)x=F.dropout(x,p=self.dropout,training=self.training)&#10;x=residual+x&#10;residual=x&#10;x=self.layer_norm(x)&#10;x=F.relu(self.fc1(x))&#10;x=F.dropout(x,p=self.activation_dropout,training=self.training)&#10;x=self.fc2(x)&#10;x=F.dropout(x,p=self.dropout,training=self.training)&#10;x=residual+x&#10;return x&#10;"/>
    <sourcecode id="u4R2akylRtClF" value="nn.init.xavier_uniform_(self.fc1.weight)&#10;nn.init.constant_(self.fc1.bias,0.)&#10;nn.init.xavier_uniform_(self.fc2.weight)&#10;nn.init.constant_(self.fc2.bias,0.)&#10;"/>
    <sourcecode id="un61vAWLODBbR" value="super().__init__()&#10;self.dropout=dropout&#10;self.embed_positions=SinusoidalPositionEmbedding(max_len,embed_dim)&#10;self.layers=nn.ModuleList([])&#10;self.layers.extend([&#10;TransformerDecoderLayer(num_heads,embed_dim,hidden_size)for _ in range(num_layers)])&#10;self.layer_norm=torch.nn.LayerNorm(embed_dim)&#10;"/>
    <sourcecode id="uNwi5H2JRItre" value="embedded_input=self.embed_positions(embedded_input)&#10;x=F.dropout(embedded_input,p=self.dropout,training=self.training)&#10;x=x.transpose(0,1)&#10;for layer in self.layers:&#10;  x,attn=layer(x,encoder_out,key_mask=key_mask,&#10;  attn_mask=attn_mask)&#10;x=self.layer_norm(x)&#10;x=x.transpose(0,1)&#10;return x&#10;"/>
    <sourcecode id="uS0fSSj7OtQGS" value="super().__init__()&#10;self.embed_dim=embed_dim&#10;self.self_attn=torch.nn.MultiheadAttention(&#10;embed_dim=self.embed_dim,num_heads=num_heads,dropout=attention_dropout)&#10;self.dropout=dropout&#10;self.activation_dropout=activation_dropout&#10;self.self_attn_layer_norm=torch.nn.LayerNorm(self.embed_dim)&#10;self.encoder_attn=torch.nn.MultiheadAttention(&#10;embed_dim=self.embed_dim,num_heads=num_heads,dropout=attention_dropout)self.encoder_attn_layer_norm=torch.nn.LayerNorm(self.embed_dim)&#10;self.fc1=torch.nn.Linear(self.embed_dim,hidden_size)&#10;self.fc2=torch.nn.Linear(hidden_size,self.embed_dim)&#10;self.layer_norm=torch.nn.LayerNorm(self.embed_dim)&#10;self.init_parameters()&#10;"/>
    <sourcecode id="uVUjvNIBbwJq4" value="nn.init.xavier_uniform_(self.fc1.weight)&#10;nn.init.constant_(self.fc1.bias,0.)&#10;nn.init.xavier_uniform_(self.fc2.weight)&#10;nn.init.constant_(self.fc2.bias,0.)&#10;"/>
    <sourcecode id="uppRg8AbV3QnK" value="residual=x&#10;x=self.self_attn_layer_norm(x)&#10;x,attn=self.self_attn(&#10;query=x,key=x,value=x,key_padding_mask=key_mask,attn_mask=attn_mask)x=F.dropout(x,p=self.dropout,training=self.training)&#10;x=residual+x&#10;residual=x&#10;x=self.encoder_attn_layer_norm(x)&#10;x,attn=self.encoder_attn(&#10;query=x,key=encoder_out,value=encoder_out,static_kv=True,)&#10;x=F.dropout(x,p=self.dropout,training=self.training)&#10;x=residual+x&#10;residual=x&#10;x=self.layer_norm(x)&#10;x=F.relu(self.fc1(x))&#10;x=F.dropout(x,p=self.activation_dropout,training=self.training)&#10;x=self.fc2(x)&#10;x=F.dropout(x,p=self.dropout,training=self.training)&#10;x=residual+x&#10;return x,attn"/>
    <sourcecode id="uhHQoNDabGcX5" value="super(Receiver,self).__init__()&#10;self.output=nn.Linear(n_hidden,n_features)&#10;"/>
    <sourcecode id="uwYDaP50pYAqM" value="return self.output(x)&#10;"/>
    <sourcecode id="usxIbFlSlPLW9" value="super(Sender,self).__init__()&#10;self.fc1=nn.Linear(n_features,n_hidden)&#10;"/>
    <sourcecode id="u65L5GxceEvrr" value="x=self.fc1(x)&#10;return x"/>
    <sourcecode id="uhnT3LjRGh8JI" value="self.n_batches_per_epoch=n_batches_per_epoch&#10;self.n_features=n_features&#10;self.batch_size=batch_size&#10;self.probs=probs&#10;self.batches_generated=0&#10;self.random_state=np.random.RandomState(seed)&#10;"/>
    <sourcecode id="uaHbv5l0Miz0q" value="return self&#10;"/>
    <sourcecode id="uhjYnof5fNfau" value="if self.batches_generated&gt;=self.n_batches_per_epoch:&#10;  raise StopIteration()&#10;&#10;batch_data=self.random_state.multinomial(1,self.probs,size=self.batch_size)&#10;self.batches_generated+=1&#10;return torch.from_numpy(batch_data).float(),torch.zeros(1)&#10;"/>
    <sourcecode id="utCdQS76Pifzi" value="self.seed=seed&#10;self.batches_per_epoch=batches_per_epoch&#10;self.n_features=n_features&#10;self.batch_size=batch_size&#10;self.probs=probs&#10;"/>
    <sourcecode id="uLL7YYnd1UhQY" value="if self.seed is None:&#10;  seed=np.random.randint(0,2**32)&#10;&#10;else:&#10;  seed=self.seed&#10;&#10;return _OneHotIterator(n_features=self.n_features,n_batches_per_epoch=self.batches_per_epoch,&#10;batch_size=self.batch_size,probs=self.probs,seed=seed)"/>
    <sourcecode id="uS7Yczg7CtDit" value="self.batch=torch.eye(n_features),torch.zeros(1)&#10;"/>
    <sourcecode id="uM9gcabMZtWLu" value="return iter([self.batch])&#10;"/>
    <sourcecode id="u9lTGNXm0ZuT9" value="self.n_batches_per_epoch=n_batches_per_epoch&#10;self.batch_size=batch_size&#10;self.n_values=n_values&#10;self.n_attributes=n_attributes&#10;self.probs_attributes=probs_attributes&#10;self.probs=probs&#10;self.batches_generated=0&#10;self.random_state=np.random.RandomState(seed)&#10;"/>
    <sourcecode id="ueT8EBzbXFgUc" value="return self&#10;"/>
    <sourcecode id="u8l2sgNtwouIq" value="if self.batches_generated&gt;=self.n_batches_per_epoch:&#10;  raise StopIteration()&#10;&#10;batch_data_att=[]&#10;for i in range(self.n_attributes):&#10;  batch_data_att.append(self.random_state.multinomial(1,self.probs[i],size=self.batch_size).astype(float))&#10;&#10;batch_data=batch_data_att[0]&#10;for i in range(1,self.n_attributes):&#10;  batch_data=np.concatenate((batch_data,batch_data_att[i]),axis=1)&#10;&#10;self.batches_generated+=1&#10;return torch.from_numpy(batch_data).float(),torch.zeros(1)&#10;"/>
    <sourcecode id="u6EOkUprYWgKe" value="self.seed=seed&#10;self.batches_per_epoch=batches_per_epoch&#10;self.n_values=n_values&#10;self.n_attributes=n_attributes&#10;self.batch_size=batch_size&#10;self.probs_attributes=probs_attributes&#10;self.probs=probs&#10;"/>
    <sourcecode id="uglePotyMTOCU" value="if self.seed is None:&#10;  seed=np.random.randint(0,2**32)&#10;&#10;else:&#10;  seed=self.seed&#10;&#10;return _OneHotIteratorCompositionality(n_values=self.n_values,n_attributes=self.n_attributes,n_batches_per_epoch=self.batches_per_epoch,&#10;batch_size=self.batch_size,probs=self.probs,probs_attributes=self.probs_attributes,seed=seed)"/>
    <sourcecode id="ucOLzomLyCpOk" value="one_hots=torch.eye(n_values)&#10;val=np.arange(n_values)&#10;combination=list(itertools.product(val,repeat=n_attributes))&#10;dataset=[]&#10;for i in range(len(combination)):&#10;  new_input=torch.zeros(0)&#10;  for j in combination[i]:&#10;    new_input=torch.cat((new_input,one_hots[j]))&#10;&#10;  dataset.append(new_input)&#10;&#10;dataset=torch.stack(dataset)&#10;self.batch=dataset,torch.zeros(1)&#10;"/>
    <sourcecode id="uY7OvpCeoJmRk" value="return iter([self.batch])"/>
    <sourcecode id="ufaQyJFbZXeaf" value="self.runnable=runnable&#10;self.args=None&#10;"/>
    <sourcecode id="uvHnowAjeIEJ2" value="self.args=args&#10;print(f';self.runnable(args)&#10;"/>
    <sourcecode id="uU7ZqnZwPOgzk" value="import submitit&#10;training_callable=SlurmWrapper(self.runnable)&#10;return submitit.helpers.DelayedSubmission(training_callable,self.args)&#10;"/>
    <sourcecode id="ujMElLunscJhe" value="self.runnable=runnable&#10;self.args=None&#10;self.log_dir=log_dir&#10;self.job_id=job_id&#10;"/>
    <sourcecode id="ufNDioo1K7rQi" value="stdout_path=pathlib.Path(self.log_dir)/f'{self.job_id}.out'&#10;self.stdout=open(stdout_path,'w')&#10;stderr_path=pathlib.Path(self.log_dir)/f'{self.job_id}.err'&#10;self.stderr=open(stderr_path,'w')&#10;sys.stdout=self.stdout&#10;sys.stderr=self.stderr&#10;cuda_id=-1&#10;n_devices=torch.cuda.device_count()&#10;if n_devices&gt;0:&#10;  cuda_id=self.job_id%n_devices&#10;&#10;print(f';with torch.cuda.device(cuda_id):&#10;  self.runnable(args)"/>
    <sourcecode id="u5EzkVoWpfdoA" value="self.dataset=dataset&#10;self.is_gs=is_gs&#10;self.device=device&#10;self.loss=loss&#10;self.var_length=var_length&#10;self.input_intervention=input_intervention&#10;self.epoch=0&#10;"/>
    <sourcecode id="u0wpHraZ6Hxy1" value="mean_acc=0.0&#10;scaler=0.0&#10;bob_label_mi=0.&#10;corresponding_labels=[]&#10;original_messages=[]&#10;bob_inputs=[]&#10;alice_inputs=[]&#10;for batch in self.dataset:&#10;  batch=[x.to(self.device)for x in batch]&#10;  if len(batch)==3:&#10;    sender_input,labels,receiver_input=batch&#10;&#10;  else:&#10;    sender_input,labels=batch&#10;    receiver_input=None&#10;&#10;  original_message=game.sender(sender_input)&#10;  if not self.is_gs:original_message=original_message[0]&#10;  if receiver_input is not None:&#10;    bob_inputs.extend(receiver_input)&#10;&#10;  alice_inputs.extend(sender_input)&#10;  permutation=torch.randperm(original_message.size(0)).to(original_message.device)&#10;  message=torch.index_select(original_message,0,permutation)&#10;  output=game.receiver(message,receiver_input)&#10;  if not self.is_gs:output=output[0]&#10;  if not self.var_length:&#10;    l,rest=self.loss(None,None,None,output,labels)&#10;    mean_acc+=rest['acc'].mean().item()&#10;    scaler+=1&#10;    original_messages.extend(original_message)&#10;&#10;  else:&#10;    lengths=_find_lengths(message.argmax(dim=-1))&#10;    for i in range(lengths.size(0)):&#10;      if lengths[i]&gt;=output.size(1):&#10;        ind=-1&#10;&#10;      else:&#10;        ind=lengths[i]&#10;&#10;      _,_rest=self.loss(None,None,None,output[i,ind,:].unsqueeze(0),labels[i].unsqueeze(0))&#10;      mean_acc+=_rest['acc'].sum().item()&#10;      scaler+=_rest['acc'].size(0)&#10;      message=original_message.argmax(dim=-1)&#10;      lengths=_find_lengths(message)&#10;      for i in range(lengths.size(0)):&#10;        l=lengths[i]&#10;        original_messages.append(message[i,:l])&#10;&#10;&#10;&#10;  corresponding_labels.extend(labels)&#10;&#10;label_entropy=entropy(corresponding_labels)&#10;message_info=mutual_info(original_messages,corresponding_labels)&#10;if bob_inputs:&#10;  bob_label_mi=mutual_info(bob_inputs,corresponding_labels)&#10;&#10;alice_label_mi=mutual_info(alice_inputs,corresponding_labels)&#10;mean_acc/=scaler&#10;s=dict(&#10;mean_acc=mean_acc,label_entropy=label_entropy,message_info=message_info,bob_label_mi=bob_label_mi,alice_label_mi=alice_label_mi)&#10;return s&#10;"/>
    <sourcecode id="utSANffpcsRKT" value="mean_acc=0.0&#10;scaler=0.0&#10;for batch in self.dataset:&#10;  batch=[x.to(self.device)for x in batch]&#10;  sender_input,labels,receiver_input=batch&#10;  message=game.sender(sender_input)&#10;  if not self.is_gs:message=message[0]&#10;  permutation=torch.randperm(receiver_input.size(0)).to(message.device)&#10;  receiver_input=torch.index_select(receiver_input,0,permutation)&#10;  output=game.receiver(message,receiver_input)&#10;  if not self.is_gs:output=output[0]&#10;  if not self.var_length:&#10;    l,rest=self.loss(None,None,None,output,labels)&#10;    mean_acc+=rest['acc'].mean().item()&#10;    scaler+=1.0&#10;&#10;  else:&#10;    lengths=_find_lengths(message.argmax(dim=-1))&#10;    mean_acc=0&#10;    for i in range(lengths.size(0)):&#10;      if lengths[i]&gt;=output.size(1):&#10;        ind=-1&#10;&#10;      else:&#10;        ind=lengths[i]&#10;&#10;      _,_rest=self.loss(None,None,None,output[i,ind,:].unsqueeze(0),labels[i].unsqueeze(0))&#10;      mean_acc+=_rest['acc'].mean().item()&#10;      scaler+=_rest['acc'].size(0)&#10;&#10;&#10;&#10;mean_acc/=scaler&#10;s=dict(&#10;mean_acc=mean_acc,)&#10;return s&#10;"/>
    <sourcecode id="uWaIgkT8MWpTq" value="game=self.trainer.game&#10;game.eval()&#10;intervantion_eval=self.intervention_message(game)&#10;validation_eval=self.validation(game)&#10;output=dict(epoch=self.epoch,intervention_message=intervantion_eval,validation=validation_eval)&#10;if self.input_intervention:&#10;  inp_intervention_eval=self.intervention_input(game)&#10;  output.update(dict(input_intervention=inp_intervention_eval))&#10;&#10;output_json=json.dumps(output)&#10;print(output_json,flush=True)&#10;game.train()&#10;self.epoch+=1&#10;"/>
    <sourcecode id="uJnhlpe7bwIg3" value="sender_inputs,messages,_,receiver_outputs,labels=\&#10;core.dump_sender_receiver(game,self.dataset,gs=self.is_gs,device=self.device,variable_length=self.var_length)entropy_messages=entropy(messages)&#10;message_mapping=:&#10;&#10;&#10;for message,label in zip(messages,labels):&#10;  message=message.item()&#10;  label=_hashable_tensor(label)&#10;  if not message in message_mapping:&#10;    message_mapping[message]=:&#10;&#10;&#10;&#10;  message_mapping[message][label]=message_mapping[message].get(label,0)+1&#10;&#10;correct=0.0&#10;total=0.0&#10;for labels in message_mapping.values():&#10;  best_freq=None&#10;  for freq in labels.values():&#10;    if best_freq is None or freq&gt;best_freq:&#10;      best_freq=freq&#10;&#10;    total+=freq&#10;&#10;  correct+=best_freq&#10;&#10;majority_accuracy=correct/total&#10;return dict(&#10;codewords_entropy=entropy_messages,majority_acc=majority_accuracy)"/>
    <sourcecode id="uBjDfkaXpwWin" value="super().__init__()&#10;self.agent=agent&#10;self.temperature=temperature&#10;"/>
    <sourcecode id="uG0QwyZPn0SK7" value="logits=self.agent(*args,**kwargs)&#10;if self.training:&#10;  return RelaxedOneHotCategorical(logits=logits,temperature=self.temperature).rsample()&#10;&#10;else:&#10;  return(logits/self.temperature).softmax(dim=1)"/>
    <sourcecode id="uG1uUiW4XGmCL" value="batches=[]&#10;for i,batch in enumerate(loader):&#10;  if i&gt;=n:&#10;    break&#10;&#10;  batches.append(batch)&#10;&#10;self.sender_inputs=torch.cat([x[0]for x in batches])&#10;self.labels=torch.cat([x[1]for x in batches])&#10;"/>
    <sourcecode id="ulfAPFPuzbO6T" value="return iter([(self.sender_inputs,self.labels)])&#10;"/>
    <sourcecode id="uUQFDVCh3j05c" value="self.iter=loader.__iter__()&#10;self.rows_sender=rows_sender&#10;self.rows_receiver=rows_receiver&#10;self.binarize=binarize&#10;self.receiver_bottom=receiver_bottom&#10;"/>
    <sourcecode id="uvWB3bJFLY8c9" value="batch=list(self.iter.__next__())&#10;if self.binarize:&#10;  batch[0]=(batch[0]&gt;0.5).float()&#10;&#10;input_sender=batch[0].clone()&#10;input_receiver=batch[0].clone()&#10;d=batch[0].size(2)&#10;if self.receiver_bottom:&#10;  input_sender[:,:,self.rows_sender:,:]=0.0&#10;  input_receiver[:,:,:d-self.rows_receiver,:]=0.0&#10;&#10;else:&#10;  input_sender[:,:,:d-self.rows_sender,:]=0.0&#10;  input_receiver[:,:,self.rows_receiver:,:]=0.0&#10;&#10;labels=batch[1]&#10;return input_sender,labels,input_receiver&#10;"/>
    <sourcecode id="uc8CPWDeWXTjd" value="self.loader=loader&#10;self.rows_sender=rows_sender&#10;self.rows_receiver=rows_receiver&#10;self.binarize=binarize&#10;self.receiver_bottom=receiver_bottom&#10;"/>
    <sourcecode id="u2Be3QLL4RnKZ" value="return _SplitIterator(self.loader,self.rows_sender,self.rows_receiver,self.binarize,receiver_bottom=self.receiver_bottom)"/>
   </codegenerator>
  </codegeneration>
 </XMI.extensions>
</XMI>
